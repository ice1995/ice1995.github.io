<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>领域驱动设计----消化知识</title>
      <link href="/2020/08/09/ddd-1/"/>
      <url>/2020/08/09/ddd-1/</url>
      <content type="html"><![CDATA[<h2 id="运用领域模型"><a href="#运用领域模型" class="headerlink" title="运用领域模型"></a>运用领域模型</h2><p>&emsp;&emsp;模型在领域驱动设计中的作用  </p><ol><li>模型和设计的可信互相影响</li><li>模型是团队所有成员的使用的通用语言的中枢</li><li>模型是浓缩的知识</li></ol><h3 id="消化知识"><a href="#消化知识" class="headerlink" title="消化知识"></a>消化知识</h3><h4 id="有效建模的要素"><a href="#有效建模的要素" class="headerlink" title="有效建模的要素"></a>有效建模的要素</h4><ol><li>模型和实现的绑定</li><li>建立一种基于模型的语言，可以帮助各方相互理解索要表达的意思</li><li>开发一个蕴含丰富知识的模型，对象具有行为和强制性规则，包含各种类型的知识</li><li>提炼模型，在模型日趋完善的过程中，添加新的重要的概念，并移除不再使用或者不重要的部分。</li><li>头脑风暴和实验，在<font color="red">知识消化</font>中将团队将团队的知识转化为有价值的模型</li></ol><h4 id="知识消化"><a href="#知识消化" class="headerlink" title="知识消化"></a>知识消化</h4><p>一般是在开发人员的领导下，由开发人员和领域专家组成的团队来共同协作<br>知识的消化者：高效的领域建模人员<br>信息的原始资料：领域专家头脑中的知识</p><p>&emsp;&emsp;领域模型的不断精化迫使开发人员学习重要的业务原理，而不是机械地进行功能开发；领域专家被迫提炼自己已经知道的重要知识，并逐渐理解软件项目所必须的概念严谨性。</p><p>&emsp;&emsp;模型在不断改进的同时，也成为组织项目信息流的工具。模型聚焦于需求分析，模型永远都不是完美的，是一个不断演化的过程。</p><h4 id="持续学习"><a href="#持续学习" class="headerlink" title="持续学习"></a>持续学习</h4><ol><li>项目知识零散的分散在人和文档中，并且可能掺杂有一些无用的信息</li><li>项目会丢失知识。已经学会知识的人可能去做别的工作；团队有可能因为重组而拆散；被外包的子系统可能仅交回代码…由于某种原因没有口头传递知识的时候，知识就丢失了</li><li>高效率的团队会有意识的积累知识并持续学习。</li></ol><h4 id="知识丰富的设计"><a href="#知识丰富的设计" class="headerlink" title="知识丰富的设计"></a>知识丰富的设计</h4><p>&emsp;&emsp;知识消化所产生的模型能够反映对知识的深层理解，在模型发生变化的同时，开发人员对实现进行重构，以便反映模型的变化，这样，新知识就被合并到应用程序中了</p><p>&emsp;&emsp;通过与软件专家的紧密协作来消化知识的过程才使得规则更加澄清和充实，并消除规则之间的矛盾冲突以及删除一些无用的规则</p><h4 id="深层模型"><a href="#深层模型" class="headerlink" title="深层模型"></a>深层模型</h4><p>&emsp;&emsp;随着对领域和应用程序需求的理解的逐渐加深，往往会丢弃那些最初看起来很重要的表面元素，或者切换他们的角度。有用的模型很少停留在表面</p>]]></content>
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> design </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot源码探析</title>
      <link href="/2020/08/02/theory/design/using/java/framework/springboot-src-1/"/>
      <url>/2020/08/02/theory/design/using/java/framework/springboot-src-1/</url>
      <content type="html"><![CDATA[<h1 id="Springboot源码探析-—-自动配置"><a href="#Springboot源码探析-—-自动配置" class="headerlink" title="Springboot源码探析 — 自动配置"></a>Springboot源码探析 — 自动配置</h1><p>复杂的场景—规范（框架）—按照特定的规则，配置  </p><blockquote><p>JavaWeb Servlet+Tomcat 繁琐~演进<br>SpringMVC<br>Springboot  </p></blockquote><h2 id="Spring开源框架"><a href="#Spring开源框架" class="headerlink" title="Spring开源框架"></a>Spring开源框架</h2><p>&emsp;&emsp;目的：简化企业开发  2003~2020<br>为了降低java的开发复杂性，spring采取了以下4种关键策略  </p><ol><li>基于POJO的轻量级和小侵入性编程</li><li>通过IOC、依赖注入（DI）和面向接口实现松耦合</li><li>基于切面（AOP）和惯例进行声明式编程</li><li>通过切面和模板减少样式代码</li></ol><h3 id="创建项目流程"><a href="#创建项目流程" class="headerlink" title="创建项目流程"></a>创建项目流程</h3><ol><li>创建一个项目，导入一堆的依赖</li><li>配置web.xml</li><li>配置spring的文件</li><li>编码、测试</li><li>配置tomcat</li><li>发布</li></ol><h2 id="Springboot"><a href="#Springboot" class="headerlink" title="Springboot"></a>Springboot</h2><p>自动配置</p><h3 id="主要优点"><a href="#主要优点" class="headerlink" title="主要优点"></a>主要优点</h3><ul><li>为所有spring开发者更快的入门</li><li>开箱即用，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化web项目</li><li>没有冗余代码生成的xml配置的要求</li></ul><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><p>&emsp;&emsp;Spring Boot（甚至整个Spring）大量采用了“Convention over configuration”约定胜于配置的设计模式，有大量的机制（比方说配置发现、方法命名等等）依赖于隐式的约定。当对这些约定不熟悉的时候，就会陷入“撞大运”编程模式，这里改改，那里调调，虽然不知道为什么，但程序就工作了；又或者就不工作了，然后需要耗费大量的时间去debug，或者请教他人。<br>其实还有另一种相反的编程箴言：<br>&emsp;&emsp;Explicit is better than implicit.<br>Spring有一个项目来解决这个问题<a href="https://spring.io/blog/2018/10/02/the-evolution-of-spring-fu" target="_blank" rel="noopener">Kofu</a></p><h3 id="创建项目流程-1"><a href="#创建项目流程-1" class="headerlink" title="创建项目流程"></a>创建项目流程</h3><p>&emsp;&emsp;必须在主启动类的统计或者子级目录下编写代码？why?  </p><ol><li>创建一个项目，导入一些启动器（封装了很多依赖）</li><li>编写代码，测试运行</li><li>发布</li></ol><p>元注解：注解别的注解的注解<br>@Target(ElementType.TYPE)<br>@Retention(RetentionPolicy.RUNTIME)<br>@Documented<br>@Inherited</p><h3 id="源码解读"><a href="#源码解读" class="headerlink" title="源码解读"></a>源码解读</h3><h4 id="pom依赖部分"><a href="#pom依赖部分" class="headerlink" title="pom依赖部分"></a>pom依赖部分</h4><pre><code><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!-- 项目里的父依赖 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- spring-boot-starter-parent的pom.xml --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 插件、资源过滤 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Turn on filtering by default for application properties --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- yml等同于yaml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">           ...</span><br><span class="line">       <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">       ...</span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- spring-boot-dependencies的pom.xml --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 版本控制中心 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Dependency versions --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.14.5<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.54<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artemis.version</span>&gt;</span>1.5.5<span class="tag">&lt;/<span class="name">artemis.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.8.10<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">atomikos.version</span>&gt;</span>3.9.3<span class="tag">&lt;/<span class="name">atomikos.version</span>&gt;</span></span><br><span class="line">       ...</span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><h4 id="java代码部分"><a href="#java代码部分" class="headerlink" title="java代码部分"></a>java代码部分</h4><p>&emsp;&emsp;一个Springboot项目<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudyApplication</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(StudyApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到主要就是一个注解 SpringBootApplication 和一个启动类 SpringApplication</p><p>查看SpringBootApplication注解的源码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123;</span><br><span class="line"><span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line"><span class="class">@<span class="title">Filter</span>(<span class="title">type</span> </span>= FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter<span class="class">.<span class="keyword">class</span>) &#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">SpringBootApplication</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>刨除掉元注解，我们看到剩下的</p><ul><li>@SpringBootConfiguration</li><li>@EnableAutoConfiguration</li><li>@ComponentScan</li></ul><ol><li>@SpringBootConfiguration<br>@SpringBootConfiguration — @Configuration — @Component<br> &emsp;&emsp;SpringBootConfiguration注解注释的主启动类本身也是一个组件，该组件的作用就是负责启动</li><li><p>@EnableAutoConfiguration</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// EnableAutoConfiguration</span></span><br><span class="line">   <span class="meta">@AutoConfigurationPackage</span></span><br><span class="line">   <span class="meta">@Import</span>(AutoConfigurationImportSelector<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">   // <span class="title">AutoConfigurationPackage</span></span></span><br><span class="line"><span class="class">   @<span class="title">Import</span>(<span class="title">AutoConfigurationPackages</span>.<span class="title">Registrar</span>.<span class="title">class</span>)</span></span><br><span class="line"><span class="class">   // <span class="title">AutoConfigurationPackages</span>.<span class="title">Registrar</span></span></span><br><span class="line"><span class="class">   <span class="title">static</span> <span class="title">class</span> <span class="title">Registrar</span> <span class="keyword">implements</span> <span class="title">ImportBeanDefinitionRegistrar</span>, <span class="title">DeterminableImports</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerBeanDefinitions</span><span class="params">(AnnotationMetadata metadata,</span></span></span><br><span class="line"><span class="function"><span class="params">BeanDefinitionRegistry registry)</span> </span>&#123;</span><br><span class="line">register(registry, <span class="keyword">new</span> PackageImport(metadata).getPackageName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">determineImports</span><span class="params">(AnnotationMetadata metadata)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Collections.singleton(<span class="keyword">new</span> PackageImport(metadata));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> &emsp;&emsp;可以看到这个静态中获取主启动类的包,也就是<code>必须在主启动类的统计或者子级目录下编写代码</code>的原因</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// AutoConfigurationImportSelector</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String[] selectImports(AnnotationMetadata annotationMetadata) &#123;</span><br><span class="line"><span class="keyword">if</span> (!isEnabled(annotationMetadata)) &#123;</span><br><span class="line"><span class="keyword">return</span> NO_IMPORTS;</span><br><span class="line">&#125;</span><br><span class="line">AutoConfigurationMetadata autoConfigurationMetadata = AutoConfigurationMetadataLoader</span><br><span class="line">.loadMetadata(<span class="keyword">this</span>.beanClassLoader);</span><br><span class="line">AutoConfigurationEntry autoConfigurationEntry = getAutoConfigurationEntry(</span><br><span class="line">autoConfigurationMetadata, annotationMetadata);</span><br><span class="line"><span class="keyword">return</span> StringUtils.toStringArray(autoConfigurationEntry.getConfigurations());</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">// getAutoConfigurationEntry() 获取自动配置的实体</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> AutoConfigurationEntry <span class="title">getAutoConfigurationEntry</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">AutoConfigurationMetadata autoConfigurationMetadata,</span></span></span><br><span class="line"><span class="function"><span class="params">AnnotationMetadata annotationMetadata)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!isEnabled(annotationMetadata)) &#123;</span><br><span class="line"><span class="keyword">return</span> EMPTY_ENTRY;</span><br><span class="line">&#125;</span><br><span class="line">AnnotationAttributes attributes = getAttributes(annotationMetadata);</span><br><span class="line">List&lt;String&gt; configurations = getCandidateConfigurations(annotationMetadata,</span><br><span class="line">attributes);</span><br><span class="line">configurations = removeDuplicates(configurations);</span><br><span class="line">Set&lt;String&gt; exclusions = getExclusions(annotationMetadata, attributes);</span><br><span class="line">checkExcludedClasses(configurations, exclusions);</span><br><span class="line">configurations.removeAll(exclusions);</span><br><span class="line">configurations = filter(configurations, autoConfigurationMetadata);</span><br><span class="line">fireAutoConfigurationImportEvents(configurations, exclusions);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> AutoConfigurationEntry(configurations, exclusions);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">// getCandidateConfigurations() 获取候选的配置</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata,</span></span></span><br><span class="line"><span class="function"><span class="params">AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(</span><br><span class="line">getSpringFactoriesLoaderFactoryClass(), getBeanClassLoader());</span><br><span class="line">Assert.notEmpty(configurations,</span><br><span class="line"><span class="string">"No auto configuration classes found in META-INF/spring.factories. If you "</span></span><br><span class="line">+ <span class="string">"are using a custom packaging, make sure that file is correct."</span>);</span><br><span class="line"><span class="keyword">return</span> configurations;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">// loadFactoryNames()</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">loadFactoryNames</span><span class="params">(Class&lt;?&gt; factoryClass, @Nullable ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">String factoryClassName = factoryClass.getName();</span><br><span class="line"><span class="keyword">return</span> loadSpringFactories(classLoader).getOrDefault(factoryClassName, Collections.emptyList());</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">// loadSpringFactories()</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FACTORIES_RESOURCE_LOCATION = <span class="string">"META-INF/spring.factories"</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; loadSpringFactories(<span class="meta">@Nullable</span> ClassLoader classLoader) &#123;</span><br><span class="line">MultiValueMap&lt;String, String&gt; result = cache.get(classLoader);</span><br><span class="line"><span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Enumeration&lt;URL&gt; urls = (classLoader != <span class="keyword">null</span> ?</span><br><span class="line">classLoader.getResources(FACTORIES_RESOURCE_LOCATION) :</span><br><span class="line">ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));</span><br><span class="line">result = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (urls.hasMoreElements()) &#123;</span><br><span class="line">URL url = urls.nextElement();</span><br><span class="line">UrlResource resource = <span class="keyword">new</span> UrlResource(url);</span><br><span class="line">Properties properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;?, ?&gt; entry : properties.entrySet()) &#123;</span><br><span class="line">String factoryClassName = ((String) entry.getKey()).trim();</span><br><span class="line"><span class="keyword">for</span> (String factoryName : StringUtils.commaDelimitedListToStringArray((String) entry.getValue())) &#123;</span><br><span class="line">result.add(factoryClassName, factoryName.trim());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cache.put(classLoader, result);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unable to load factories from location ["</span> +</span><br><span class="line">FACTORIES_RESOURCE_LOCATION + <span class="string">"]"</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> &emsp;&emsp;通过层层深入，我们发现了 META-INF/spring.factories ；我们找到改文件<br> <img src="spring_factories.png"></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># Initializers </span><br><span class="line">org.springframework.context.ApplicationContextInitializer&#x3D;\</span><br><span class="line">org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\</span><br><span class="line">org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener</span><br><span class="line"></span><br><span class="line"># Application Listeners </span><br><span class="line">org.springframework.context.ApplicationListener&#x3D;\</span><br><span class="line">org.springframework.boot.autoconfigure.BackgroundPreinitializer</span><br><span class="line"></span><br><span class="line"># Auto Configuration Import Listeners</span><br><span class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportListener&#x3D;\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener</span><br><span class="line"></span><br><span class="line"># Auto Configuration Import Filters</span><br><span class="line">org.springframework.boot.autoconfigure.AutoConfigurationImportFilter&#x3D;\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnBeanCondition,\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnClassCondition,\</span><br><span class="line">org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition</span><br><span class="line"></span><br><span class="line"># Auto Configure</span><br><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration&#x3D;\</span><br><span class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p> 随便打开一个自动配置类</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AopAutoConfiguration</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass</span>(&#123; EnableAspectJAutoProxy<span class="class">.<span class="keyword">class</span>, <span class="title">Aspect</span>.<span class="title">class</span>, <span class="title">Advice</span>.<span class="title">class</span>,</span></span><br><span class="line"><span class="class">        <span class="title">AnnotatedElement</span>.<span class="title">class</span> &#125;)</span></span><br><span class="line"><span class="class">@<span class="title">ConditionalOnProperty</span>(<span class="title">prefix</span> </span>= <span class="string">"spring.aop"</span>, name = <span class="string">"auto"</span>, havingValue = <span class="string">"true"</span>, matchIfMissing = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopAutoConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@EnableAspectJAutoProxy</span>(proxyTargetClass = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@ConditionalOnProperty</span>(prefix = <span class="string">"spring.aop"</span>, name = <span class="string">"proxy-target-class"</span>, havingValue = <span class="string">"false"</span>, matchIfMissing = <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">JdkDynamicAutoProxyConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@EnableAspectJAutoProxy</span>(proxyTargetClass = <span class="keyword">true</span>)</span><br><span class="line">    <span class="meta">@ConditionalOnProperty</span>(prefix = <span class="string">"spring.aop"</span>, name = <span class="string">"proxy-target-class"</span>, havingValue = <span class="string">"true"</span>, matchIfMissing = <span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CglibAutoProxyConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// RabbitAutoConfiguration</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass</span>(&#123; RabbitTemplate<span class="class">.<span class="keyword">class</span>, <span class="title">Channel</span>.<span class="title">class</span> &#125;)</span></span><br><span class="line"><span class="class">@<span class="title">EnableConfigurationProperties</span>(<span class="title">RabbitProperties</span>.<span class="title">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">Import</span>(<span class="title">RabbitAnnotationDrivenConfiguration</span>.<span class="title">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">RabbitAutoConfiguration</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// RabbitProperties</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.rabbitmq"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitProperties</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ConditionalOnXXX 条件判断注释</li><li>EnableConfigurationProperties  — ConfigurationProperties  自动绑定依赖<h3 id="整理"><a href="#整理" class="headerlink" title="整理"></a>整理</h3><img src="springboot源码阅读.svg"></li></ul></li></ol>]]></content>
      
      <categories>
          
          <category> sourcecode </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> spring </tag>
            
            <tag> sourcecode </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git本地仓库搭建</title>
      <link href="/2020/03/29/git-using/"/>
      <url>/2020/03/29/git-using/</url>
      <content type="html"><![CDATA[<h3 id="在centos下搭建本地git"><a href="#在centos下搭建本地git" class="headerlink" title="在centos下搭建本地git"></a>在centos下搭建本地git</h3><ol><li><p>安装git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></li><li><p>初始化仓库</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare cloud-eureka.git</span><br></pre></td></tr></table></figure><p> 在当前目录下创建cloud-eureka.git文件夹</p></li><li><p>创建git用户用于git连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加用户组git</span></span><br><span class="line">groupadd git</span><br><span class="line"><span class="comment">#添加用户git</span></span><br><span class="line">useradd git -g git -p password</span><br></pre></td></tr></table></figure></li><li><p>配置公钥</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="comment">#如果没有xxx.ras或者xxx.pub文件，生成一下：</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">su git</span><br><span class="line"><span class="built_in">cd</span> /home/git  </span><br><span class="line">ls -a  </span><br><span class="line"><span class="comment">#首先确认是否有ssh密钥：若有.ssh文件夹，进入查看是否有authorized_keys文件，如果都没有</span></span><br><span class="line"><span class="comment">#创建.ssh文件夹</span></span><br><span class="line">mkdir .ssh</span><br><span class="line"><span class="comment">#创建authorized_keys文件：</span></span><br><span class="line">touch authorized_keys</span><br><span class="line"><span class="comment">#将登录电脑的公钥填写到authorized_keys，即可免密</span></span><br></pre></td></tr></table></figure></li><li><p>禁用git的普通shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#禁用普通的bash</span></span><br><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改</span><br><span class="line"> gi<span class="variable">t:x</span>:<span class="number">1001</span>:<span class="number">1001</span>::/home/gi<span class="variable">t:</span>/bin/bash</span><br><span class="line">#为</span><br><span class="line"> gi<span class="variable">t:x</span>:<span class="number">1001</span>:<span class="number">1001</span>::/home/gi<span class="variable">t:</span>/usr/bin/git-<span class="keyword">shell</span></span><br></pre></td></tr></table></figure></li><li><p>修改远程访问权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在git项目目录下</span></span><br><span class="line">chown -R git:git cloud-eureka.git</span><br></pre></td></tr></table></figure></li><li><p>访问项目<br> git@192.168.226.130:/opt/project/cloud-eureka.git </p></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python通过boost.python使用c/c++</title>
      <link href="/2020/01/15/pythonwithc-1/"/>
      <url>/2020/01/15/pythonwithc-1/</url>
      <content type="html"><![CDATA[<h3 id="安装boost环境"><a href="#安装boost环境" class="headerlink" title="安装boost环境"></a>安装boost环境</h3><p><a href="https://www.boost.org/" target="_blank" rel="noopener">https://www.boost.org/</a>下载，解压设置环境变量即可在c/c++中日常使用<br>但是对于boost.python来说需要对boost进行编译  </p><p>编写user-config.jam文件，设置python目录、链接文件目录、头文件目录，位于c:/users/用户/user-config.jam  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import toolset : using ;</span><br><span class="line">using python</span><br><span class="line">: 3.7</span><br><span class="line">: D:&#x2F;Applications&#x2F;python&#x2F;python37&#x2F;python.exe  </span><br><span class="line">: D:&#x2F;Applications&#x2F;python&#x2F;python37&#x2F;include</span><br><span class="line">: D:&#x2F;Applications&#x2F;python&#x2F;python37&#x2F;libs</span><br><span class="line">: &lt;toolset&gt;gcc</span><br><span class="line">;</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bootstrap.bat gcc  #生成b2.exe等文件</span><br><span class="line">b2 --with-python --toolset=gcc architecture=x86 address-model=<span class="number">64</span> link=shared #在stage/lib下生成boost.python的对应Python版本的dll和dll.a文件</span><br></pre></td></tr></table></figure><h3 id="编写并编译c-程序"><a href="#编写并编译c-程序" class="headerlink" title="编写并编译c++程序"></a>编写并编译c++程序</h3><p>使用boost.python导出需要使用的c++模块，使用说明见<a href="https://wiki.python.org/moin/boost.python/module" target="_blank" rel="noopener">https://wiki.python.org/moin/boost.python/module</a><br>需要注意的是，BOOST_PYTHON_MODULE(my_module)中的my_module必须和文件名相同<br>编译c++程序生成dll文件</p><h3 id="python使用c-编译后的dll文件"><a href="#python使用c-编译后的dll文件" class="headerlink" title="python使用c++编译后的dll文件"></a>python使用c++编译后的dll文件</h3><p>将使用boost.python的dll文件改名为pyd（python的链接库文件）<br>在Python中添加路径（可以使用sys.path.append或者复制到python执行目录下） ，需要注意，除了添加.pyd文件之外，还需要添加 boost.python的对应Python版本的dll文件  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> my_module</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> c/c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> c/c++ </tag>
            
            <tag> boost </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>将项目发布到maven过程记录</title>
      <link href="/2020/01/08/push2maven/"/>
      <url>/2020/01/08/push2maven/</url>
      <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>&emsp;&emsp;用于记录将自己的项目发布到maven中央仓库的过程。  </p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><ol><li><p>注册sonatype账号：【申请上传资格】<br>注册地址:<a href="https://issues.sonatype.org/secure/Signup!default.jspa" target="_blank" rel="noopener">https://issues.sonatype.org/secure/Signup!default.jspa</a></p></li><li><p>登录sonatype并初始化</p></li><li><p>新建issue并解决提出的问题<br>如：<a href="https://issues.sonatype.org/browse/OSSRH-54353" target="_blank" rel="noopener">https://issues.sonatype.org/browse/OSSRH-54353</a></p></li><li><p>创建密钥并发布<br> 安装gpg，新建密钥对（输入账号、邮箱、密码），发布密钥到服务服务端</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 列出密钥</span><br><span class="line">gpg --list-keys</span><br><span class="line">gpg --keyserver http://keyserver.ubuntu.com:<span class="number">11371</span> --send-keys key_id</span><br><span class="line">gpg --keyserver http://pool.sks-keyservers.<span class="built_in">net</span>:<span class="number">11371</span> --send-keys key_id</span><br><span class="line">gpg --keyserver http://keyserver.ubuntu.com:<span class="number">11371</span> --send-keys key_id</span><br><span class="line">gpg --keyserver http://keys.gnupg.<span class="built_in">net</span>:<span class="number">11371</span> --send-keys key_id</span><br><span class="line">gpg --keyserver http://keys.openpgp.org:<span class="number">11371</span> --send-keys key_id</span><br></pre></td></tr></table></figure></li><li><p>配置maven</p><ol><li><p>修改setting.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">username</span>&gt;</span>sonatype用户名<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">password</span>&gt;</span>sonatype密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改项目pom.xml</p>  <font color="red">注意：snapshotRepository节点和repository节点的id要和上面server配置的id一致</font>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&gt;项目的协议&lt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>actable<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&gt;开发者的信息&lt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>example<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>example@outlook.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&gt;项目的版本管理地址&lt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/Bpazy/Id<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">profile.env</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">profile.env</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- Source --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar-no-fork<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- Javadoc --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">show</span>&gt;</span>private<span class="tag">&lt;/<span class="name">show</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">nohelp</span>&gt;</span>true<span class="tag">&lt;/<span class="name">nohelp</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">docencoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">docencoding</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">additionalparam</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalparam</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- TODO 临时解决不规范的javadoc生成报错,后面要规范化后把这行去掉 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- GPG --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!--Compiler --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>false<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--Release --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sonatype Nexus Snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/service/local/staging/deploy/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>打包发布</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean deploy -P release</span><br></pre></td></tr></table></figure></li><li><p>将上传的开源库发布出去</p><ol><li>登录<a href="https://oss.sonatype.org/#stagingRepositories" target="_blank" rel="noopener">https://oss.sonatype.org/#stagingRepositories</a>查看staging中的包</li><li>选中包，closed，解决closed的时候出现的问题，再次打包上传，直到可以closed为止</li><li>选中包，release</li></ol></li><li><p>登录sonatype并回复issue项目已发布，等待审核  </p></li></ol>]]></content>
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> java </tag>
            
            <tag> jar </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jenkins的安装使用</title>
      <link href="/2019/12/28/jenkins-1/"/>
      <url>/2019/12/28/jenkins-1/</url>
      <content type="html"><![CDATA[<h3 id="jenkins的安装"><a href="#jenkins的安装" class="headerlink" title="jenkins的安装"></a>jenkins的安装</h3><ol><li>安装环境<br> centos 8.0.1905<br> user-&gt;jenkins  ; group -&gt; jenkins</li><li><p>安装过程<br> a. 从官网<a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a>下载安装包<br> b. 安装  </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y jenkins-2.204.5-1.1.noarch.rpm</span><br><span class="line">```  </span><br><span class="line">c. 运行jenkins  </span><br><span class="line">```bash</span><br><span class="line">systemctl start jenkins</span><br></pre></td></tr></table></figure></li><li><p>配置<br> a. 添加一个用户<br> <a href="https://jenkins.io/zh/doc/book/installing/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/book/installing/</a><br> b. 修改插件更新位置<br> <a href="http://192.168.226.131:8080/pluginManager/advanced" target="_blank" rel="noopener">http://192.168.226.131:8080/pluginManager/advanced</a><br> 修改为国内地址，这里使用的是清华大学的开源软件地址<br> <a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a><br> <center> <img src="jenkins%20install.png"> </center><br> c. 安装需要的插件  </p><ul><li>locale</li><li>maven</li><li>git</li><li>…</li></ul></li></ol><h3 id="jenkins的使用"><a href="#jenkins的使用" class="headerlink" title="jenkins的使用"></a>jenkins的使用</h3><ol><li>创建一个新的maven项目<center>     <img src="jenkins%20create%20new%20item.png"></center></li><li>项目配置<center>     <img src="jenkins%20create%20new%20item1.png"></center></li><li>查看项目构建情况 <center>     <img src="jenkins%20create%20new%20item2.png"></center></li></ol>]]></content>
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> java </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx的使用（三）-- 使用gzip加速页面加载</title>
      <link href="/2019/10/18/theory/design/using/middleware/nginx-3/"/>
      <url>/2019/10/18/theory/design/using/middleware/nginx-3/</url>
      <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&emsp;&emsp;Nginx实现资源压缩的原理是通过ngx_http_gzip_module模块拦截请求，并对需要做gzip的类型做gzip，ngx_http_gzip_module是Nginx默认集成的，不需要重新编译，直接开启即可。<br>&emsp;&emsp;可以使用nginx -V查看启用的模块，如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx&#x2F;1.16.1</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC)</span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --sbin-path&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx --conf-path&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf --error-log-path&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log --http-log-path&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log --pid-path&#x3D;&#x2F;var&#x2F;run&#x2F;nginx&#x2F;nginx.pid --lock-path&#x3D;&#x2F;var&#x2F;lock&#x2F;nginx.lock --user&#x3D;nginx --group&#x3D;nginx --with-http_ssl_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path&#x3D;&#x2F;var&#x2F;tmp&#x2F;nginx&#x2F;client&#x2F; --http-proxy-temp-path&#x3D;&#x2F;var&#x2F;tmp&#x2F;nginx&#x2F;proxy&#x2F; --http-fastcgi-temp-path&#x3D;&#x2F;var&#x2F;tmp&#x2F;nginx&#x2F;fcgi&#x2F; --http-uwsgi-temp-path&#x3D;&#x2F;var&#x2F;tmp&#x2F;nginx&#x2F;uwsgi --http-scgi-temp-path&#x3D;&#x2F;var&#x2F;tmp&#x2F;nginx&#x2F;scgi --with-pcre</span><br></pre></td></tr></table></figure><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><pre><code class="lang-bash">    #$gzip_ratio计算请求的压缩率，$body_bytes_sent请求体大小    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$host&quot; - &quot;$request&quot; &#39;                    &#39;$gzip_ratio - $body_bytes_sent - $request_time&#39;;    access_log  logs/access.log  main;    # 开启gzip    gzip off;    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩    # 当返回内容大于此值时才会使用gzip进行压缩,以K为单位,当值为0时，所有页面都进行压缩。    gzip_min_length 1k;    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明    # 随着压缩级别的升高，压缩比有所提高，但到了级别6后，很难再提高；    # 随着压缩级别的升高，处理时间明显变慢；    # gzip很消耗cpu的性能，高并发情况下cpu达到100%    gzip_comp_level 1;    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;    # 是否在http header中添加Vary: Accept-Encoding，建议开启    gzip_vary on;    # 禁用IE 6 gzip    # 通过表达式，表明哪些UA头不使用gzip压缩    gzip_disable &quot;MSIE [1-6]\.&quot;;    # 设置压缩所需要的缓冲区大小      # 设置用于处理请求压缩的缓冲区数量和大小。比如32 4K表示按照内存页（one memory page）大小以4K为单位（即一个系统中内存页为4K），申请32倍的内存空间。建议此项不设置，使用默认值    gzip_buffers 32 4k;    # 设置gzip压缩针对的HTTP协议版本    # 用于识别http协议的版本，早期的浏览器不支持gzip压缩，用户会看到乱码，所以为了支持前期版本加了此选项。默认在http/1.0的协议下不开启gzip压缩。    gzip_http_version 1.0;</code></pre>]]></content>
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--动态渲染页面爬取</title>
      <link href="/2019/02/25/machine%20learning/clawler/clawler-6/"/>
      <url>/2019/02/25/machine%20learning/clawler/clawler-6/</url>
      <content type="html"><![CDATA[<h3 id="selenium的使用"><a href="#selenium的使用" class="headerlink" title="selenium的使用"></a>selenium的使用</h3><p>&emsp;&emsp;<a href="https://selenium-python.readthedocs.io/" target="_blank" rel="noopener">官方文档</a><br>&emsp;&emsp;selenium是一个自动化测试工具，利用它可以驱动浏览器执行特定的动作，还可以获取浏览器当前呈现页面的源码。  </p><h4 id="等待条件以及其含义"><a href="#等待条件以及其含义" class="headerlink" title="等待条件以及其含义"></a>等待条件以及其含义</h4><p>&emsp;&emsp;<a href="https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.expected_conditions" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wait = WebDriverWait(browser,<span class="number">1</span>)</span><br><span class="line">wait.until(EC.presence_of_element_located((By.ID,<span class="string">'content_left'</span>)))</span><br><span class="line"><span class="comment">#until中的即为等待条件</span></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>等待条件</th><th>含义</th></tr></thead><tbody><tr><td>title_is</td><td>标题是某内容</td></tr><tr><td>title_contains</td><td>标题包含某内容</td></tr><tr><td>persence_of_element_localted</td><td>节点加载出来，传入定位元素，如(By.ID,’p’)</td></tr><tr><td>visibility_of_element_localted</td><td>节点可见，传入定位元素</td></tr><tr><td>visibility_of</td><td>可见，传入节点对象</td></tr><tr><td>persence_of_all_element_localted</td><td>所有节点加载出来</td></tr><tr><td>text_to_be_present_in_element</td><td>某个节点文本包含某文字</td></tr><tr><td>text_to_be_present_in_element_value</td><td>某个节点值包含某文字</td></tr><tr><td>frame_to_be_availiable_and_switch_to_it</td><td>加载并切换</td></tr><tr><td>invisibility_of_element_located</td><td>节点不可见</td></tr><tr><td>element_to_be_clickable</td><td>节点可点击</td></tr><tr><td>staleness_of</td><td>判断一个节点是否仍在DOM，可判断页面是否已经刷新</td></tr><tr><td>element_t_be_selected</td><td>节点可选择，传入节点对象</td></tr><tr><td>element_located_to_be_clickable</td><td>节点可选择，传入定位元组</td></tr><tr><td>element_selection_state_to_be</td><td>传入节点对象以及状态，相等返回true，否则false</td></tr><tr><td>element_located_selection_state_to_be</td><td>传入定位元组以及状态，相等返回true，否则false</td></tr><tr><td>alert_is_present</td><td>是否出现警告</td></tr></tbody></table></div>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--Ajax数据爬取</title>
      <link href="/2019/02/22/machine%20learning/clawler/clawler-5/"/>
      <url>/2019/02/22/machine%20learning/clawler/clawler-5/</url>
      <content type="html"><![CDATA[<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p>&emsp;&emsp;Ajax，全程Asynchronous JavaScript and XML，即异步的JavaScript和XML，在保证页面不被刷新、页面链接不改变的情况下与服务器交换数据并更新部分网页的技术。</p><h3 id="爬取今日头条街拍"><a href="#爬取今日头条街拍" class="headerlink" title="爬取今日头条街拍"></a>爬取今日头条街拍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">""" </span></span><br><span class="line"><span class="string">@author zhangbohan.dell@gmail.com</span></span><br><span class="line"><span class="string">@function:</span></span><br><span class="line"><span class="string">@create 2019/2/25 11:12</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> multiprocessing.pool <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page</span><span class="params">(offset)</span>:</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'aid'</span>: <span class="string">'24'</span>,</span><br><span class="line">        <span class="string">'app_name'</span>: <span class="string">'web_search'</span>,</span><br><span class="line">        <span class="string">'offset'</span>: offset,</span><br><span class="line">        <span class="string">'format'</span>: <span class="string">'json'</span>,</span><br><span class="line">        <span class="string">'keyword'</span>: <span class="string">'街拍'</span>,</span><br><span class="line">        <span class="string">'autoload'</span>: <span class="string">'true'</span>,</span><br><span class="line">        <span class="string">'count'</span>: <span class="string">'20'</span>,</span><br><span class="line">        <span class="string">'en_qc'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'cur_tab'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'from'</span>: <span class="string">'search_tab'</span>,</span><br><span class="line">        <span class="string">'pd'</span>: <span class="string">'syntheis'</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'https://www.toutiao.com/api/search/content/?'</span> + urlencode(params)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.json()</span><br><span class="line">    <span class="keyword">except</span> requests.ConnectionError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_image</span><span class="params">(json)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> json.get(<span class="string">'data'</span>):</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> json.get(<span class="string">'data'</span>):</span><br><span class="line">            title = item.get(<span class="string">'title'</span>)</span><br><span class="line">            images = item.get(<span class="string">'image_list'</span>)</span><br><span class="line">            <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">                <span class="keyword">yield</span> &#123;</span><br><span class="line">                    <span class="string">'image'</span>: image.get(<span class="string">'url'</span>),</span><br><span class="line">                    <span class="string">'title'</span>: title</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(item)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(item.get(<span class="string">'title'</span>)):</span><br><span class="line">        os.mkdir(item.get(<span class="string">'title'</span>))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(item.get(<span class="string">'image'</span>))</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            file_path = <span class="string">'&#123;0&#125;/&#123;1&#125;.&#123;2&#125;'</span>.format(item.get(<span class="string">'title'</span>), md5(response.content).hexdigest(), <span class="string">'jpg'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">                <span class="keyword">with</span> open(file_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(response.content)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'Already Downloaded'</span>, file_path)</span><br><span class="line">    <span class="keyword">except</span> requests.ConnectionError:</span><br><span class="line">        print(<span class="string">'Failed to save Image'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(offset)</span>:</span></span><br><span class="line">    json = get_page(offset)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> get_image(json):</span><br><span class="line">        print(item)</span><br><span class="line">        save_image(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GROUP_START = <span class="number">1</span></span><br><span class="line">GROUP_END = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pool = Pool()</span><br><span class="line">    groups = ([x * <span class="number">20</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(GROUP_START, GROUP_END + <span class="number">1</span>)])</span><br><span class="line">    pool.map(main, groups)</span><br><span class="line">    pool.map(main, groups)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.cuiqingcai.com" target="_blank" rel="noopener">崔庆才大佬</a>的《python3网络爬虫开发实战》</p>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--解析库</title>
      <link href="/2019/02/22/machine%20learning/clawler/clawler-4/"/>
      <url>/2019/02/22/machine%20learning/clawler/clawler-4/</url>
      <content type="html"><![CDATA[<h3 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h3><p>&emsp;&emsp;XPath，全程XML Path Language，是一门在XML文档中查找信息的语言，也适用于HTML文档的搜索<br>&emsp;&emsp;XPath<a href="http://www.w3school.com.cn/xpath/index.asp" target="_blank" rel="noopener">用法</a> &emsp;&emsp; lxml库<a href="http://lxml.de/" target="_blank" rel="noopener">用法</a></p><h4 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h4><p>常用规则</p><div class="table-container"><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td></tr><tr><td>/</td><td>从当前节点选取直接子节点</td></tr><tr><td>//</td><td>从当前节点选取子孙节点</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>..</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table></div><p>运算符以及介绍</p><div class="table-container"><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th><th>返回值</th></tr></thead><tbody><tr><td>or</td><td>或</td><td></td></tr><tr><td>and</td><td>与</td><td></td></tr><tr><td>mod</td><td>取余</td><td></td></tr><tr><td>\</td><td></td><td>计算两个节点集</td><td>//book \</td><td>//cd</td><td>返回所有拥有book和cd元素的节点集</td></tr><tr><td>+</td><td>加法</td></tr><tr><td>-</td><td>减法</td></tr><tr><td>*</td><td>乘法</td></tr><tr><td>div</td><td>除法</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等</td></tr></tbody></table></div><h3 id="Beautiful-soup"><a href="#Beautiful-soup" class="headerlink" title="Beautiful soup"></a>Beautiful soup</h3><p>&emsp;&emsp;Beautiful Soup就是Python的一个HTML或XML的解析库</p><h4 id="解析器"><a href="#解析器" class="headerlink" title="解析器"></a>解析器</h4><p>Beautiful soup在解析时实际上依赖解析库，支持的解析库如下</p><div class="table-container"><table><thead><tr><th>解析器</th><th>使用的方法</th><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td>BeautifulSoup(markup,”html.parser”)</td><td>Python内置标准库，执行速度适中，文档容错能力强</td><td>Python2.7.3以及3.2.2之前的版本文档容错能力差</td></tr><tr><td>lxml html解析器</td><td>BeautifulSoup(markup,”lxml”)</td><td>速度快，文档容错能力强</td><td>需要c语言库</td></tr><tr><td>lxml xml解析器</td><td>BeautifulSoup(markup,”xml”)</td><td>速度快，唯一支持xml的解析器</td><td>需要c语言库</td></tr><tr><td>html5lib</td><td>BeautifulSoup(markup,”html5lib”)</td><td>最好的容错性、以浏览器的方式解析文档、生成html5格式的文档</td><td>速度慢、不依赖扩展</td></tr></tbody></table></div><h3 id="puquery"><a href="#puquery" class="headerlink" title="puquery"></a>puquery</h3><p>&emsp;&emsp;获取元素方式和jquery类似</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.cuiqingcai.com" target="_blank" rel="noopener">崔庆才大佬</a>的《python3网络爬虫开发实战》</p>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--基础库</title>
      <link href="/2019/02/22/machine%20learning/clawler/crawler-3/"/>
      <url>/2019/02/22/machine%20learning/clawler/crawler-3/</url>
      <content type="html"><![CDATA[<h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><p>&emsp;&emsp;urllib包含4个模块：  </p><ol><li>request 基本的http请求模块，用来模拟发送请求。</li><li>error 异常处理模块，用于捕获异常保证程序不会意外终止</li><li>parse 工具模块，提供了许多URL的处理方法</li><li>robotparser 主要用来识别网站中的robots.txt文件，判断哪些网页可以用来爬</li></ol><h4 id="request"><a href="#request" class="headerlink" title="request"></a>request</h4><h5 id="urlopen"><a href="#urlopen" class="headerlink" title="urlopen()"></a>urlopen()</h5><p>API—-&gt; urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</p><ol><li><p>data<br> 添加该参数之后，请求方法即为POST；如果其内容为字节流编码格式(bytes类型)的内容，需要通过bytes()方法进行转换</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> requset</span><br><span class="line"><span class="keyword">import</span> urllib.parse <span class="keyword">as</span> parse</span><br><span class="line"></span><br><span class="line">data = bytes(parse.urlencode(&#123;<span class="string">'world'</span>:<span class="string">'hello'</span>&#125;),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">reponse = requset.urlopen(<span class="string">'http://httpbin.org/post'</span>,data=data)</span><br><span class="line">print(reponse.read())</span><br></pre></td></tr></table></figure></li><li><p>timeout<br> 用于设置超时时间，单位：秒，超出这个时间没有相应，就会抛出异常,支持http、https、ftp请求</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> requset</span><br><span class="line"></span><br><span class="line">reponse = requset.urlopen(<span class="string">'http://httpbin.org/get'</span>,timeout=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li><p>context<br> &emsp;&emsp;用来指定ssl设置，必须是ssl.SSLContext类型</p></li><li>cafile和capath<br>&emsp;&emsp;用来指定CA证书和它的路径，在https链接时会用到  </li><li>cadefault<br>&emsp;&emsp;该参数已经弃用，默认为False</li></ol><h5 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h5><p>&emsp;&emsp;如果请求中需要添加header头信息，就需要使用Request类来构建请求。  </p><p>API—-&gt; class urllib.request.Request(ur1, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</p><ol><li>url<br>用于请求URL，必传参数</li><li>data<br>bytes（字节流）类型</li><li>headers<br>一个字典，也就是请求头，可以通过headers参数直接构造请求头，也可以通过请求实例的add_header()方法添加</li><li>origin_req_host<br>指的是请求方的host名称或者IP地址</li><li>unverifiable<br>标识这个请求是够是无法验证的，默认是False，也就是用户没有权限来选择接受这个请求的结果</li><li>method<br>指示请求使用的方法，POST、GET、PUT等</li></ol><h5 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h5><p>&emsp;&emsp;需要更高级的操作（Cookie处理、代理设置等）的时候，使用更加强大的工具Handler，简单的可以理解为各种处理器。<br>BaseHandler是其他所有Handler的父类，提供了最基本的方法。</p><ul><li>HTTPDefaultErrorHandler<br>&emsp;&emsp;用于处理HTTP响应错误  </li><li>HTTPRedirectHandler<br>&emsp;&emsp;用于处理重定向  </li><li>HTTPCookieProcesser<br>&emsp;&emsp;用于处理Cookie  </li><li>ProxyHandler<br>&emsp;&emsp;用于设置代理，默认代理为空</li><li>HTTPPasswordMgr<br>&emsp;&emsp;用于管理密码，维护了用户名和密码的表</li><li>HTTPBasicAuthHandler<br>&emsp;&emsp;用于管理认证</li></ul><h4 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h4><p>&emsp;&emsp;parse 模块，它定义了处理 URL 的标准接口，例如实现URL各部分的抽取、合并以及链接转换。 它支持如下协议的 URL 处理：file 、http、gopher、hdl、http、https、imap 、mailto、mms、news、nntp、prospero、rsync、rtsp、rtspu、sftp、sip、sips、snews、svn、svn+ssh、telnet和wais。  </p><h5 id="urlparse"><a href="#urlparse" class="headerlink" title="urlparse()"></a>urlparse()</h5><p>&emsp;&emsp;可以实现URL的识别和分段，解析为6部分: scheme（协议）、netloc（域名）、path（访问路径）、params（参数）、query（查询条件）和fragment（锚点）。</p><p>API—-&gt; urllib.parse.urlparse(urlstring, scheme=”, allow_fragments=True)</p><ol><li>urlstring<br>&emsp;&emsp;必填项，待解析的URL</li><li>scheme<br>&emsp;&emsp;默认的协议，如果链接没有带协议信息，会以此作为默认协议</li><li>allow_fragments<br>&emsp;&emsp;是够忽略 fragement。设置为false，fragement部分就会被忽略，解析为path、parameters、或者query的一部分</li></ol><h5 id="urlunparse"><a href="#urlunparse" class="headerlink" title="urlunparse()"></a>urlunparse()</h5><p>&emsp;&emsp;接受一个可迭代的且长度为6的对象作为参数，构造一个URL</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse <span class="keyword">as</span> parse</span><br><span class="line"></span><br><span class="line">data= [<span class="string">'http'</span>,<span class="string">'www.baidu.com'</span>,<span class="string">'index.html'</span>,<span class="string">'user'</span>, <span class="string">'a=6'</span>,<span class="string">'comment'</span>]</span><br><span class="line">print(parse.urlunparse(data))</span><br></pre></td></tr></table></figure><h5 id="urlsplit"><a href="#urlsplit" class="headerlink" title="urlsplit()"></a>urlsplit()</h5><p>&emsp;&emsp;与urlparse()类似，不过不再单独解析params部分，将其合并到path中</p><h5 id="urlunsplit"><a href="#urlunsplit" class="headerlink" title="urlunsplit()"></a>urlunsplit()</h5><p>&emsp;&emsp;与urlunparse()类似，接受一个可迭代的且长度为5的对象作为参数，构造一个URL</p><h5 id="urljoin"><a href="#urljoin" class="headerlink" title="urljoin()"></a>urljoin()</h5><p>&emsp;&emsp;提供一个base_url（基础链接）作为第一个参数，将新的链接作为第二个参数，该方法会分析base_url的scheme、netloc和path这3个内容并对新链接缺失的部分进行补充，最后返回结果。<br>&emsp;&emsp;base_url提供了三项内容scheme、netloc和path。如果这3项在新的链接里不存在，就予以补充；如果新的链接存在，就使用新的链接的部分。而base_url中的params、query和fragment是不起作用的。</p><h5 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode()"></a>urlencode()</h5><p>&emsp;&emsp;通过序列化将字典转换为GET请求参数</p><h5 id="parse-qs"><a href="#parse-qs" class="headerlink" title="parse_qs()"></a>parse_qs()</h5><p>&emsp;&emsp;通过反序列化将GET请求参数转换为字典</p><h5 id="parse-qsl"><a href="#parse-qsl" class="headerlink" title="parse_qsl()"></a>parse_qsl()</h5><p>&emsp;&emsp;将参数转化为元组组成的列表</p><h5 id="quote"><a href="#quote" class="headerlink" title="quote()"></a>quote()</h5><p>&emsp;&emsp;将内容转化为URL编码的格式</p><h5 id="unquote"><a href="#unquote" class="headerlink" title="unquote()"></a>unquote()</h5><p>&emsp;&emsp;将URL编码格式的内容解码</p><h4 id="robotparser"><a href="#robotparser" class="headerlink" title="robotparser"></a>robotparser</h4><h5 id="bobots协议"><a href="#bobots协议" class="headerlink" title="bobots协议"></a>bobots协议</h5><p>&emsp;&emsp;Robots协议也称作爬虫协议/机器人协议，全程网络爬虫排除协议(Robots Exclusion Protocol)，通常为一个robots.txt文本文件，存放于网站的根目录之下。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: I</span><br><span class="line">Allow: &#x2F;public&#x2F;</span><br></pre></td></tr></table></figure><h5 id="常见的爬虫名称"><a href="#常见的爬虫名称" class="headerlink" title="常见的爬虫名称"></a>常见的爬虫名称</h5><div class="table-container"><table><thead><tr><th>爬虫名称</th><th>名称</th><th>网站</th></tr></thead><tbody><tr><td>BaiduSpider</td><td>百度</td><td>www.baidu.com</td></tr><tr><td>Googlebot</td><td>谷歌</td><td>www.google.com</td></tr><tr><td>360Spider</td><td>360搜索</td><td>www.so.com</td></tr><tr><td>YodaoBot</td><td>有道</td><td>www.youdao.com</td></tr><tr><td>ia_archiver</td><td>Alexa</td><td>www.alexa.cn</td></tr><tr><td>Scooter</td><td>altavista</td><td>www.altavista.com</td></tr></tbody></table></div><h5 id="robotparser-1"><a href="#robotparser-1" class="headerlink" title="robotparser"></a>robotparser</h5><p>&emsp;&emsp;一些常用方法：</p><ul><li>set_url()： 用来设置robots.txt文件的链接。如果在创建RobotFileParser对象时传入了链接，那么就不需要再使用这个方法设置了 。</li><li>read()： 读取 robots.txt文件并进行分析。注意，这个方法执行一个读取和分析操作，如果不调用这个方法，接下来的判断都会为 False，所以一定记得调用这个方法。这个方法不会返回任何内容，但是执行了读取操作。</li><li>parse()： 用来解析robots.txt文件，传人的参数是robots.txt某些行的内容，它会按照 robots.txt的语法规则来分析这些内容。</li><li>can_fetch()： 该方法传人两个参数，第一个是 User-agent，第二个是要抓取的URL。返回的内容是该搜索引擎是否可以抓取这个URL，返回结果是True或False</li><li>mtime()： 返回的是上次抓取和分析robots.txt的时间，这对于长时间分析和抓取的搜索爬虫是很有必要的，你可能需要定期检查来抓取最新的robots.txt。</li><li>modified() ：它同样对长时间分析和抓取的搜索爬虫很有帮助，将当前时间设置为上次抓取和分析robots.txt的时间 。</li></ul><h3 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h3><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">'germey'</span>, <span class="string">'age'</span>:<span class="string">'22'</span>&#125;</span><br><span class="line">r = requests.post(<span class="string">"http://httpbin.org/post"</span>, data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>&emsp;&emsp;<a href="https://www.zhangbohan.xyz/2018/08/25/theory/regex/" target="_blank" rel="noopener">详情请看另一篇文章</a></p><h3 id="爬取猫眼top100"><a href="#爬取猫眼top100" class="headerlink" title="爬取猫眼top100"></a>爬取猫眼top100</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, features=<span class="string">'lxml'</span>)</span><br><span class="line">    select = soup.select(<span class="string">'dd'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> select:</span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'index'</span>:i.select(<span class="string">"i.board-index"</span>).pop().text,</span><br><span class="line">            <span class="string">'name'</span>: i.select(<span class="string">'p.name'</span>).pop().text,</span><br><span class="line">            <span class="string">'star'</span>:re.sub( <span class="string">"[\f\r\n\t\v ]"</span>,<span class="string">""</span>,i.select(<span class="string">'p.star'</span>).pop().text),</span><br><span class="line">            <span class="string">'releasetime'</span>: i.select(<span class="string">'p.releasetime'</span>).pop().text, </span><br><span class="line">            <span class="string">'score'</span>: i.select(<span class="string">'p.score'</span>).pop().text&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(offset = <span class="number">0</span>)</span>:</span></span><br><span class="line">    url = <span class="string">'https://maoyan.com/board/4?offset='</span>+str(offset)</span><br><span class="line">    html = get_one(url)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"result.txt"</span>,<span class="string">"a+"</span>,encoding=<span class="string">"utf-8"</span>,newline=<span class="string">""</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">            f.write(json.dumps(i,ensure_ascii=<span class="literal">False</span>)+<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        main(offset=i*<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.cuiqingcai.com" target="_blank" rel="noopener">崔庆才大佬</a>的《python3网络爬虫开发实战》</p>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--爬虫基础</title>
      <link href="/2019/02/21/machine%20learning/clawler/crawler-2/"/>
      <url>/2019/02/21/machine%20learning/clawler/crawler-2/</url>
      <content type="html"><![CDATA[<h3 id="HTTP基本原理"><a href="#HTTP基本原理" class="headerlink" title="HTTP基本原理"></a>HTTP基本原理</h3><h4 id="URI和URL"><a href="#URI和URL" class="headerlink" title="URI和URL"></a>URI和URL</h4><p>&emsp;&emsp;URI(Uniform Resource Identifier),统一资源标志符；URL(Uniform Resource Locator),统一资源定位符；URN(Uniform Resource Name),统一资源名称，只命名组员而不指定如何定位资源。URL和URN都是URI的子集。</p><h4 id="超文本hypertext"><a href="#超文本hypertext" class="headerlink" title="超文本hypertext"></a>超文本hypertext</h4><p>&emsp;&emsp;超文本是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。网页就是超文本的一种体现</p><h4 id="http和https"><a href="#http和https" class="headerlink" title="http和https"></a>http和https</h4><p>http(Hyper Text Transfer Protocol)超文本传输协议。用于从网络传输超文本数据到本地浏览器接收。<br>https(Hyper Text Transfer Protocol over Secure Socket Layer)，是以安全为目标的HTTP通道，在HTTP下加入SSL层。</p><h4 id="http请求过程"><a href="#http请求过程" class="headerlink" title="http请求过程"></a>http请求过程</h4><div class="table-container"><table><thead><tr><th></th><th>含义</th><th>解释</th></tr></thead><tbody><tr><td>Name</td><td>请求的名称</td><td>一般会将URL的最后一部分内容当做名称</td></tr><tr><td>Status</td><td>响应的状态码</td></tr><tr><td>Type</td><td>请求的文档类型</td></tr><tr><td>Initiator</td><td>请求源</td><td>用来标记请求是由那个对象或进程发起的</td></tr><tr><td>Size</td><td>从服务器下载的文件和请求的资源的大小</td></tr><tr><td>Time</td><td>发起请求到获取相应所用的总时间</td></tr><tr><td>WaterFall</td><td>网络请求的可视化瀑布流</td></tr></tbody></table></div><h4 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h4><p>&emsp;&emsp;请求可以分为4部分：请求方法(Request Method)、请求的网址(Request URL)、请求头(Request Header)、请求体(Request Body)。  </p><h5 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h5><p>&emsp;&emsp;常见请求方法有两种，GET和POST。除此之外还有PUT、DELETE、OPTIONS、CONNECT、TRACE等</p><div class="table-container"><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>GET</td><td>请求页面，并返回页面内容</td></tr><tr><td>HEAD</td><td>类似于GET，只不过返回的相应没有具体的内容，用于获取报头</td></tr><tr><td>POST</td><td>大多用于提交表单或者上传文件，数据包含在请求体中</td></tr><tr><td>PUT</td><td>从客户端向服务传送的数据取代指定文档中的内容</td></tr><tr><td>DELETE</td><td>请求服务器删除指定的页面</td></tr><tr><td>CONNECT</td><td>把服务器当做跳板，让服务器代替客户端访问其他页面</td></tr><tr><td>OPTIONS</td><td>允许客户端查看服务器的性能</td></tr><tr><td>TRACE</td><td>回显服务器收到得的请求，主要用于测试或者诊断</td></tr></tbody></table></div><h5 id="请求的地址"><a href="#请求的地址" class="headerlink" title="请求的地址"></a>请求的地址</h5><p>&emsp;&emsp;即URL，可以确定请求的资源</p><h5 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h5><p>&emsp;&emsp;用来说明服务器要是使用的附加信息</p><div class="table-container"><table><thead><tr><th>请求头信息</th><th>说明</th></tr></thead><tbody><tr><td>Accept</td><td>请求报头域，用于指定客户端可以接受那些类型的信息</td></tr><tr><td>Accept-Language</td><td>指定客户端可以接受的语言类型</td></tr><tr><td>Accept-Encoding</td><td>指定客户端可以接受的内容编码</td></tr><tr><td>Host</td><td>用于指定请求资源的主机IP和端口号，其内容为请求地址的原始服务器或者网关位置</td></tr><tr><td>Cookie(s)</td><td>网站为了辨别用户进行会话跟踪而存储在用户本地的数据</td></tr><tr><td>Referer</td><td>用来标识这个请求是从哪个页面发送过来的</td></tr><tr><td>User-Agent（UA）</td><td>可以使服务器是被客户使用的操作系统以及版本、浏览器以及版本信息</td></tr><tr><td>Content-Type</td><td>互联网媒体类型/MIME类型，用来表示具体请求中的媒体类型信息</td></tr></tbody></table></div><h5 id="请求体"><a href="#请求体" class="headerlink" title="请求体"></a>请求体</h5><p>   &emsp;&emsp;一般承载的内容是POSt请求中的表单数据，而对于GET请求，请求体为空</p><h4 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h4><p>&emsp;&emsp;由服务器返回给客户端，可以分为三部分:响应状态码(Response Status Code)、响应头(Response Header)、响应体(Response Body)</p><h5 id="响应的状态码"><a href="#响应的状态码" class="headerlink" title="响应的状态码"></a>响应的状态码</h5><p>&emsp;&emsp;表示服务器的响应状态。</p><div class="table-container"><table><thead><tr><th>状态码</th><th>说明</th><th>详情</th></tr></thead><tbody><tr><td>100</td><td>继续</td><td>请求者应当继续提出请求，服务器已经接受部分请求，正在等待其余部分</td></tr><tr><td>101</td><td>切换协议</td><td>请求者已要求服务器切换协议，服务器已确认并做好准备</td></tr><tr><td>200</td><td>成功</td><td>服务器已经处理好了请求</td></tr><tr><td>201</td><td>已创建</td><td>请求成功并且服务器创建了新的资源</td></tr><tr><td>202</td><td>已接受</td><td>服务器已经接受请求，但是尚未处理</td></tr><tr><td>203</td><td>非授权信息</td><td>服务器已成功处理了请求，但返回的信息可能来自另一个源</td></tr><tr><td>204</td><td>无内容</td><td>服务器已经处理了请求，但没有认可返回信息</td></tr><tr><td>205</td><td>重置内容</td><td>服务器成功处理了请求，内容被重置</td></tr><tr><td>206</td><td>部分内容</td><td>服务器成功处理了部分请求</td></tr><tr><td>300</td><td>多种选择</td><td>针对请求，服务器可执行多种选择</td></tr><tr><td>301</td><td>永久移动</td><td>请求的网页已经永久移动到新位置，即永久重定向</td></tr><tr><td>302</td><td>临时移动</td><td>请求的网页暂时跳转到其他页面，即临时重定向</td></tr><tr><td>303</td><td>查看其他位置</td><td>如果原来的请求是POST，重定向目标文档应该通过GET获取</td></tr><tr><td>304</td><td>未修改</td><td>此次请求返回的网页未修改，继续使用上次的资源</td></tr><tr><td>305</td><td>使用代理</td><td>请求者应该使用代理访问该页面</td></tr><tr><td>307</td><td>临时重定向</td><td>请求的资源临时从其他位置响应</td></tr><tr><td>400</td><td>错误请求</td><td>服务器无法解析该请求</td></tr><tr><td>401</td><td>未授权</td><td>请求没有进行身份验证或者验证未通过</td></tr><tr><td>403</td><td>禁止访问</td><td>服务器拒绝该请求</td></tr><tr><td>404</td><td>未找到</td><td>服务器找不到请求的页面</td></tr><tr><td>405</td><td>方法禁用</td><td>服务器禁用了请求中指定的方法</td></tr><tr><td>406</td><td>不接受</td><td>无法使用请求的内容相应请求的网页</td></tr><tr><td>407</td><td>需要代理授权</td><td>请求者需要代理授权</td></tr><tr><td>408</td><td>请求超时</td><td>服务器请求超时</td></tr><tr><td>409</td><td>冲突</td><td>服务器在完成请求时发生冲突</td></tr><tr><td>410</td><td>已删除</td><td>请求的资源已永久删除</td></tr><tr><td>411</td><td>需要有效长度</td><td>服务器不接受不含有有效长度标头字段的请求</td></tr><tr><td>412</td><td>为满足前提条件</td><td>服务器为满足请求者在请求中设置的一个前提条件</td></tr><tr><td>413</td><td>请求实体过大</td><td>请求实体过大，超出服务器处理范围</td></tr><tr><td>414</td><td>请求URI过长</td><td>请求网址过长，服务器无法处理</td></tr><tr><td>415</td><td>不支持类型</td><td>请求个事不被请求页面支持</td></tr><tr><td>416</td><td>请求范围不符</td><td>页面无法提供请求的范围</td></tr><tr><td>417</td><td>未满足期望值</td><td>服务器未满足期望请求标头字段的要求</td></tr><tr><td>500</td><td>服务器内部错误</td><td>服务器遇到错误，无法完成请求</td></tr><tr><td>501</td><td>未实现</td><td>服务器不具备完成请求的功能</td></tr><tr><td>502</td><td>错误网关</td><td>服务器作为网关或者代理，从上游服务器收到无效响应</td></tr><tr><td>503</td><td>服务不可用</td><td>服务器目前无法使用</td></tr><tr><td>504</td><td>网关超时</td><td>服务器作为网关或者代理，但是没有及时从上游服务器收到请求</td></tr><tr><td>505</td><td>HTTP版本不支持</td><td>服务器不支持请求中所用的HTTP协议版本</td></tr></tbody></table></div><h5 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h5><p>&emsp;&emsp;响应头包含了服务器对请求的应答信息，常见的应答信息：</p><div class="table-container"><table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>Date</td><td>标识响应产生的时间</td></tr><tr><td>Last-Modified</td><td>指定资源的最后修改时间</td></tr><tr><td>Content-Encoding</td><td>指定响应内容的编码</td></tr><tr><td>Server</td><td>包含服务器的信息（名称、版本号等）</td></tr><tr><td>Content-Type</td><td>文档类型</td></tr><tr><td>Set-Cookie</td><td>设置Cookie</td></tr><tr><td>Expires</td><td>指定响应的过期时间，可以使用代理服务器或者浏览器将加载的内容更新到缓存中</td></tr></tbody></table></div><h5 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h5><p>&emsp;&emsp; 相应的正文</p><h3 id="爬虫原理"><a href="#爬虫原理" class="headerlink" title="爬虫原理"></a>爬虫原理</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>&emsp;&emsp;爬虫就是获取网页并提取保存信息的自动化程序。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.cuiqingcai.com" target="_blank" rel="noopener">崔庆才大佬</a>的《python3网络爬虫开发实战》</p>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据挖掘--爬虫--准备工作</title>
      <link href="/2019/02/21/machine%20learning/clawler/crawler-1/"/>
      <url>/2019/02/21/machine%20learning/clawler/crawler-1/</url>
      <content type="html"><![CDATA[<h3 id="python环境的准备工作"><a href="#python环境的准备工作" class="headerlink" title="python环境的准备工作"></a>python环境的准备工作</h3><p>&emsp;&emsp;博主在这使用windows作为系统环境，安装anaconda3作为python运行与库管理环境。<br>&emsp;&emsp;anaconda<a href="https://www.anaconda.com/" target="_blank" rel="noopener">官方网站</a><br>&emsp;&emsp;如果下载速度过慢，可以选择使用<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">清华大学镜像</a>，<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">使用说明</a></p><h3 id="请求库的安装"><a href="#请求库的安装" class="headerlink" title="请求库的安装"></a>请求库的安装</h3><h4 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h4><pre><code>&amp;emsp;&amp;emsp;阻塞式http请求库</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests</span><br></pre></td></tr></table></figure><h4 id="selenuim库"><a href="#selenuim库" class="headerlink" title="selenuim库"></a>selenuim库</h4><p>   &emsp;&emsp;selenuim是一个自动化测试工具，可以使用它驱动浏览器执行特定的动作。如点击，下拉等等</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenuim</span><br></pre></td></tr></table></figure><h4 id="Google-Chrome-以及其驱动-ChromeDriver"><a href="#Google-Chrome-以及其驱动-ChromeDriver" class="headerlink" title="Google Chrome 以及其驱动 ChromeDriver"></a>Google Chrome 以及其驱动 ChromeDriver</h4><pre><code>&amp;emsp;&amp;emsp;Google Chrome[下载](https://chrome.en.softonic.com/)&amp;emsp;&amp;emsp; ChromeDriver[下载](https://chromedriver.storage.googleapis.com/index.html)  &lt;font color=&quot;red&quot;&gt;注意：安装的chromedriver版本要和google chrome版本相匹配&lt;/font&gt;  &amp;emsp;&amp;emsp;将下载下来的chromedriver添加到环境变量，在命令行中进行测试是否成功</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromedriver</span><br></pre></td></tr></table></figure><pre><code>显示以下类似内容说明成功</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting ChromeDriver 72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38) on port 9515</span><br><span class="line">Only local connections are allowed.</span><br><span class="line">Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code</span><br></pre></td></tr></table></figure><pre><code>在python中进行测试</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  </span><br><span class="line">brower = webdriver.Chrome()</span><br></pre></td></tr></table></figure><pre><code>运行打开一个新的chrome窗口</code></pre><h4 id="Firefox以及其驱动-GeckoDriver"><a href="#Firefox以及其驱动-GeckoDriver" class="headerlink" title="Firefox以及其驱动 GeckoDriver"></a>Firefox以及其驱动 GeckoDriver</h4><pre><code>FireFox[下载](http://www.firefox.com.cn/)&amp;emsp;&amp;emsp;GeckoDriver[下载](https://github.com/mozilla/geckodriver/releases)  &lt;font color=&quot;red&quot;&gt;注意：安装的geckodriver版本要和firefox版本相匹配,geckodriver下载界面有版本要求说明，如果geckodriver未起作用，请尝试重装firefox最新版本并重启电脑&lt;/font&gt;  &amp;emsp;&amp;emsp;将下载下来的geckodriver添加到环境变量，在命令行中进行测试是否成功</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geckodriver</span><br></pre></td></tr></table></figure><pre><code>在python中进行测试</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">brower = webdriver.Firefox()</span><br></pre></td></tr></table></figure><pre><code>运行打开一个新的firefox窗口</code></pre><h4 id="PhantomJS"><a href="#PhantomJS" class="headerlink" title="PhantomJS"></a>PhantomJS</h4><p>   &emsp;&emsp;PhantomJS是一个无界面的、可脚本编程的webkit浏览器引擎，<a href="http://phantomjs.org/download.html" target="_blank" rel="noopener">下载</a><br>   &emsp;&emsp;将下载下来的bin文件夹下的phantomjs.exe添加到环境变量，在命令行中进行测试是否成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phantomjs</span><br></pre></td></tr></table></figure><pre><code>出现以下内容说明可用</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phantomjs&gt;</span><br></pre></td></tr></table></figure><pre><code>在python中进行测试</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">brower = webdriver.PhantomJS()</span><br><span class="line">brower.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">print(brower.current_url))</span><br></pre></td></tr></table></figure><pre><code>使用PhantonJs不会打开一个新的窗口，但实际上已经在后台运行</code></pre><h4 id="aiohttp"><a href="#aiohttp" class="headerlink" title="aiohttp"></a>aiohttp</h4><pre><code>异步web服务库</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install aiohttp</span><br></pre></td></tr></table></figure><pre><code>此外，官方还推荐安装cchardet（字符编码检测库）和aiodns（加速dns解析库），</code></pre><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install cchardet aiodns</span><br></pre></td></tr></table></figure><h3 id="解析库的安装"><a href="#解析库的安装" class="headerlink" title="解析库的安装"></a>解析库的安装</h3><h4 id="lxml"><a href="#lxml" class="headerlink" title="lxml"></a>lxml</h4><p>   支持html和xml的解析，支持XPath解析方式，解析效率高</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install lxml</span><br></pre></td></tr></table></figure><h4 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install beautifulsoup4</span><br></pre></td></tr></table></figure><h4 id="pyquery"><a href="#pyquery" class="headerlink" title="pyquery"></a>pyquery</h4><p>&emsp;&emsp;pyquery 同样是一个强大的网页解析工具，它提供了和 jQuery 类似的语法来解析 HTML 文梢，支持 css 选择器，使用非常方便.</p>   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pyquery</span><br></pre></td></tr></table></figure><h4 id="tesserocr"><a href="#tesserocr" class="headerlink" title="tesserocr"></a>tesserocr</h4><p>   &emsp;&emsp;cor识别，识别各种各样的验证码。tesserocr是对tesseract的一层python封装，因此需要先<a href="https://digi.bib.uni-mannheim.de/tesseract/" target="_blank" rel="noopener">安装tesseract</a>,带dev的是开发版本，不稳定，不带dev的是稳定版本<br>    linux下</p>   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tesserocr pillow</span><br></pre></td></tr></table></figure><p>   windows下<br>    <a href="https://github.com/simonflueckiger/tesserocr-windows_build/releases" target="_blank" rel="noopener">whl安装文件下载地址</a></p><pre><code><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tesserocr-<span class="number">2</span>.<span class="number">4</span>.<span class="number">0</span>-cp36-cp36m-win_amd64.whl</span><br></pre></td></tr></table></figure></code></pre><p>保存<a href="https://raw.githubusercontent.com/Python3WebSpider/TestTess/master/image.png" target="_blank" rel="noopener">测试图片</a>到本地，分别对tesseract和tesserocr进行测试，看能否识别</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tesseract image.png result -l eng &amp;&amp; <span class="built_in">type</span> result.txt</span><br><span class="line">#运行结果</span><br><span class="line">#Tesseract Open Source OCR Engine v3.<span class="number">0</span>S .<span class="number">01</span> with Leptonica</span><br><span class="line">#Python3WebSpider</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tesserocr</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">image = Image.open(<span class="string">'D:\\temp\\test\\image.png'</span>)</span><br><span class="line">print(tesserocr.image_to_text(image))</span><br></pre></td></tr></table></figure><h3 id="数据库-略"><a href="#数据库-略" class="headerlink" title="数据库(略)"></a>数据库(略)</h3><h3 id="存储库"><a href="#存储库" class="headerlink" title="存储库"></a>存储库</h3><h4 id="PyMysql"><a href="#PyMysql" class="headerlink" title="PyMysql"></a>PyMysql</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pymysql</span><br></pre></td></tr></table></figure><h4 id="PyMongo"><a href="#PyMongo" class="headerlink" title="PyMongo"></a>PyMongo</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pymongo</span><br></pre></td></tr></table></figure><h4 id="redis-py"><a href="#redis-py" class="headerlink" title="redis-py"></a>redis-py</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install redis</span><br></pre></td></tr></table></figure><h3 id="WEB库"><a href="#WEB库" class="headerlink" title="WEB库"></a>WEB库</h3><h4 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask</span><br></pre></td></tr></table></figure><h4 id="Tornado"><a href="#Tornado" class="headerlink" title="Tornado"></a>Tornado</h4><p>&emsp;&emsp;Tornado是一个支持异步的web框架，通过使用非阻塞I/O流，可以支撑成千上万的开放连接，效率非常高。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tornado</span><br></pre></td></tr></table></figure><h3 id="App爬取相关库-暂时放弃"><a href="#App爬取相关库-暂时放弃" class="headerlink" title="App爬取相关库(暂时放弃)"></a>App爬取相关库(暂时放弃)</h3><h3 id="爬虫框架"><a href="#爬虫框架" class="headerlink" title="爬虫框架"></a>爬虫框架</h3><h4 id="pyspider"><a href="#pyspider" class="headerlink" title="pyspider"></a>pyspider</h4><p>&emsp;&emsp;它带有强大的WebUI、脚本编辑器、任务监<br>控器、项目管理器以及结果处理器，同时支持多种数据库后端、多种消息队列，另外还支持JavaScript渲染页面的爬取<br>&emsp;&emsp;pyspider是支持JavaScript渲染的，而这个过程是依赖于PhantomJS的，所以还需要安装PhantomJS</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pyspider</span><br></pre></td></tr></table></figure><h4 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install scrapy</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://www.cuiqingcai.com" target="_blank" rel="noopener">崔庆才大佬</a>的《python3网络爬虫开发实战》</p>]]></content>
      
      <categories>
          
          <category> crawler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web crawler </tag>
            
            <tag> data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>向量</title>
      <link href="/2018/12/28/theory/algorithm/dsa/vector/"/>
      <url>/2018/12/28/theory/algorithm/dsa/vector/</url>
      <content type="html"><![CDATA[<h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><p>ADT(Aabstract data type)<br>&emsp;&emsp;抽象数据类型，数据模型+定义在该模型上的一组操作</p><p>DS(Data Structure)<br>&emsp;&emsp;数据结构, 基于某种特定语言，实现ADT的一整套算法  </p><p>&emsp;&emsp;c/c++语言中，数组A[]中的元素与[0,n)内的编号一一对应。每个元素均可以有编号唯一指代，并可以直接访问，也称之为线性数组。<br>&emsp;&emsp;向量是数组的抽象与泛化，由一组元素按线性次序封装而成.  </p><ol><li>各元素与[0,n)内的秩一一对应  (循秩访问)  </li><li>元素的类型不局限于基本类型  </li><li>操作、管理更加简化、统一与安全  </li><li>可更为便捷的参与复杂的数据类型的定制与实 现</li></ol><h3 id="向量ADT接口"><a href="#向量ADT接口" class="headerlink" title="向量ADT接口"></a>向量ADT接口</h3><div class="table-container"><table><thead><tr><th>操作</th><th>功能</th><th>适用对象</th></tr></thead><tbody><tr><td>size()</td><td>报告向量当前的规模(向量长度)</td><td>向量</td></tr><tr><td>Get(r)</td><td>获取秩为r的元素</td><td>向量</td></tr><tr><td>put(r,e)</td><td>用e替换秩为r元素的数值</td><td>向量</td></tr><tr><td>insert(r,e)</td><td>e作为秩为r元素插入，原后继元素依次后移</td><td>向量</td></tr><tr><td>Remove(r)</td><td>删除秩为r的元素，返回该元素中原本存放的对象</td><td>向量</td></tr><tr><td>disordered()</td><td>判断所有元素是否已按非降序排列</td><td>向量</td></tr><tr><td>sort()</td><td>调整各元素位置，使之按非降序排列</td><td>向量</td></tr><tr><td>find(e)</td><td>查找目标元素e</td><td>向量</td></tr><tr><td>search(e)</td><td>查找目标元素e，返回不大于e且秩最大的元素</td><td>有序向量</td></tr><tr><td>deduplicate()</td><td>剔除重复元素</td><td>向量</td></tr><tr><td>Uniquify</td><td>剔除重复元素</td><td>有序向量</td></tr><tr><td>traverse()</td><td>遍历向量并统一处理所有元素，处理方法由函数对象制定</td><td>向量</td></tr></tbody></table></div><h3 id="递增式扩容"><a href="#递增式扩容" class="headerlink" title="递增式扩容"></a>递增式扩容</h3><p>最坏情况：在初始容量为0的空向量中，连续插入n=m*I &gt;&gt; 2个元素…<br>在1，I+1,2I+1..都需要扩容</p><script type="math/tex; mode=display">总体耗时：I*(m-1)*m/2 = O(n^2) \;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;  平均分摊成本 O(n)</script><p>装填因子：100%</p><h3 id="加倍式扩容"><a href="#加倍式扩容" class="headerlink" title="加倍式扩容"></a>加倍式扩容</h3><p>最坏情况： 在初始容量为1的空向量中，连续插入$n=2^m &gt;&gt; 2$个元素<br>在1,2,4,8…都需要扩容  </p><script type="math/tex; mode=display">总体耗时：O(n) \;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;  平均分摊成本 O(1)</script><p>装填因子：50%</p>]]></content>
      
      <categories>
          
          <category> dsa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> dsa </tag>
            
            <tag> adt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ElasticSearch学习笔记（一）</title>
      <link href="/2018/12/04/theory/design/using/middleware/elk-1/"/>
      <url>/2018/12/04/theory/design/using/middleware/elk-1/</url>
      <content type="html"><![CDATA[<h2 id="ElasticSearch-ES-有关的基本概念"><a href="#ElasticSearch-ES-有关的基本概念" class="headerlink" title="ElasticSearch(ES)有关的基本概念"></a>ElasticSearch(ES)有关的基本概念</h2><ol><li>Cluster和Node<br>&emsp;&emsp;ES中的Cluster是对外提供搜索服务的集群，组成这个Cluster的各个节点叫做Node。<br>&emsp;&emsp;Node分类：IndexNode（提供读写），DataNode（只提供数据存储和访问，负载均衡等），节点之间关系对等，弱化的Master节点提供维护集群状态的功能</li><li>Shards<br>&emsp;&emsp;ES将一个完整的索引分成若干部分，每一个部分就是一个Shards，每一个Shards实际上是一个基于Lucene的索引，Shards数量一遍在创建索引前指定，且索引创建后不能修改，es的检索实际上是对多个Shards上的搜索结果的合并</li><li>Replicas<br>&emsp;&emsp;Replicas是索引的冗余备份，可用于放置数据丢失或用来做负载均衡</li><li>Recovery<br>&emsp;&emsp;在有节点加入或者退出集群的时候，ES会对索引分片Shards重新分配</li><li>River<br>&emsp;&emsp;River是一个运行在集群内部的插件，用来从外部获取异构数据，然后在ES里创建索引。常见的有RabbitMQ river Plugin、MongoDB river Plugin等</li><li>Gateway<br>&emsp;&emsp;是ES索引数据快照的存储方式，当ES关机重启的时候，就会从Gateway中读取索引快照</li><li>Discovery.zen<br>&emsp;&emsp;Es的自动发现节点机制，用来实现节点自动发现和Master节点选举，Master节点负责处理及节点的加入和退出以及分片Shards的重新分配</li><li>Transport<br>&emsp;&emsp;代表ES内部节点或者集群与客户端的交互方式。默认TCP，同时支持HTTP（JSON）、Thrift、Servlet等</li><li>Index、Type、Document、Field<br> &emsp;&emsp;Index是ES存储数据的地方，类似RDBMS的Database;Type类似于table;Document是一行数据，可以有不同字段集合;Field是最小存储单位</li><li>Mapping<br>&emsp;&emsp;定义索引下Type的字段处理规则</li></ol><h2 id="ES默认端口"><a href="#ES默认端口" class="headerlink" title="ES默认端口"></a>ES默认端口</h2><p>9200 是HTTP端口，9300 是Transport端口</p><h2 id="ES索引机器构建"><a href="#ES索引机器构建" class="headerlink" title="ES索引机器构建"></a>ES索引机器构建</h2><p>&emsp;&emsp;ES是基于Luence构建的，采用倒排索引机制，将文件封装为索引，将文本信息切分为成为Token的信息单元，再利用这些Token构建倒排索引。</p>]]></content>
      
      <categories>
          
          <category> elk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> elk </tag>
            
            <tag> midedleware </tag>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ELK日志分析系统搭建过程以及使用说明</title>
      <link href="/2018/12/04/theory/design/using/middleware/elk/"/>
      <url>/2018/12/04/theory/design/using/middleware/elk/</url>
      <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="环境搭建说明"><a href="#环境搭建说明" class="headerlink" title="环境搭建说明"></a>环境搭建说明</h3><p>Centos 7 *2 + elastics 5.6.12 + logstash 5.6.12 + kibana 5.6.12 + filebeat 5.6.12</p><h3 id="ElasticSearch环境搭建"><a href="#ElasticSearch环境搭建" class="headerlink" title="ElasticSearch环境搭建"></a>ElasticSearch环境搭建</h3><ol><li><p>下载解压</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.12.tar.gz</span><br><span class="line">tar -zxvf elasticsearch-5.6.12.tar.gz -C /elk/elasticsearch/</span><br></pre></td></tr></table></figure></li><li><p>配置/config/elasticsearch.yml</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">network.hos<span class="variable">t:</span> <span class="number">0.0</span>.<span class="number">0.0</span> # 访问地址</span><br><span class="line">http.por<span class="variable">t:</span> <span class="number">9200</span>   #端口号</span><br><span class="line">cluster.name: nmtx-cluster</span><br><span class="line">node.name: node-<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>运行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/elasticsearch &gt; ../logs/elasticsearch.log  2&gt;&amp;1 &amp; <span class="built_in">echo</span> $! &gt; process.pid</span><br><span class="line"><span class="comment">#在后台运行，日志打印到../logs/elasticsearch.log，进程号保存至process.pid</span></span><br></pre></td></tr></table></figure></li><li><p>踩过的坑</p><ol><li>不要使用root账户启动elasticsearch，这是出于系统安全考虑设置的条件。</li><li><p>max virtual memory areas vm.max_map_count [65530] is too low, increase to at ，需要调整虚拟内存设置  </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="comment">#添加如下信息并保存</span></span><br><span class="line">vm.max_map_count=655360</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行以生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li><li><p>需要修改linux对文件、线程的限制</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改系统文件</span></span><br><span class="line">vim /etc/security/limits.d/20-nproc.conf</span><br><span class="line"><span class="comment">#调整成以下配置</span></span><br><span class="line">*       soft    nproc    4096</span><br><span class="line">root    soft    nproc    unlimited</span><br></pre></td></tr></table></figure></li></ol></li><li><p>验证  </p><p> &emsp;&emsp;访问9200端口看到如下类似信息即可  </p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span> : <span class="string">"node-1"</span>,</span><br><span class="line"><span class="attr">"cluster_name"</span> : <span class="string">"nmtx-cluster"</span>,</span><br><span class="line"><span class="attr">"cluster_uuid"</span> : <span class="string">"plk3ql1SQ2umnqSpyBGI_w"</span>,</span><br><span class="line"><span class="attr">"version"</span> : &#123;</span><br><span class="line">    <span class="attr">"number"</span> : <span class="string">"5.6.12"</span>,</span><br><span class="line">    <span class="attr">"build_hash"</span> : <span class="string">"cfe3d9f"</span>,</span><br><span class="line">    <span class="attr">"build_date"</span> : <span class="string">"2018-09-10T20:12:43.732Z"</span>,</span><br><span class="line">    <span class="attr">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"lucene_version"</span> : <span class="string">"6.6.1"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="filebeat环境搭建"><a href="#filebeat环境搭建" class="headerlink" title="filebeat环境搭建"></a>filebeat环境搭建</h3><h4 id="什么是Beats"><a href="#什么是Beats" class="headerlink" title="什么是Beats"></a>什么是Beats</h4><p>&emsp;&emsp;Beats 是安装在服务器上的数据中转代理，Beats 可以将数据直接传输到 Elasticsearch 或传输到 Logstash 。常见的Beats：</p><ul><li>Packetbeat：网络数据包分析器，提供有关您的应用程序服务器之间交换的事务的信息。  </li><li>Filebeat：从您的服务器发送日志文件。  </li><li>Metricbeat：是一个服务器监视代理程序，它定期从服务器上运行的操作系统和服务收集指标。</li><li>Winlogbeat：提供Windows事件日志。</li></ul><h4 id="为什么使用filebeat"><a href="#为什么使用filebeat" class="headerlink" title="为什么使用filebeat"></a>为什么使用filebeat</h4><p>&emsp;&emsp;相比 Logstash，FileBeat 更加<font color="red">轻量化</font>。在任何环境下，应用程序都有停机的可能性。 Filebeat 读取并转发日志行，<font color="red">如果中断，则会记住所有事件恢复联机状态时所在位置</font>。Filebeat带有内部模块（auditd，Apache，Nginx，System和MySQL），可通过一个指定命令来简化通用日志格式的收集，解析和可视化。<br>FileBeat <font color="red">不会让你的管道超负荷</font>。FileBeat 如果是向 Logstash 传输数据，当 Logstash 忙于处理数据，会通知 FileBeat 放慢读取速度。一旦拥塞得到解决，FileBeat 将恢复到原来的速度并继续传播。</p><ol><li><p>下载与安装</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.6.12-linux-x86_64.tar.gz</span><br><span class="line">tar -zxvf ilebeat-5.6.12-linux-x86_64.tar.gz -C /elk/filebeat/</span><br></pre></td></tr></table></figure></li><li><p>配置filebeat.yml</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">filebeat.prospector<span class="variable">s:</span></span><br><span class="line"></span><br><span class="line"># Each - <span class="keyword">is</span> <span class="keyword">a</span> prospector. Most <span class="keyword">options</span> can <span class="keyword">be</span> <span class="keyword">set</span> at the prospector level, <span class="keyword">so</span></span><br><span class="line"># you can use different prospectors <span class="keyword">for</span> various configurations.</span><br><span class="line"># Below are the prospector specific configurations.</span><br><span class="line"></span><br><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"># Paths that should <span class="keyword">be</span> crawled <span class="built_in">and</span> fetched. Glob based paths.</span><br><span class="line">path<span class="variable">s:</span></span><br><span class="line">    - /var/<span class="built_in">log</span>/*-info.<span class="built_in">log</span>    #监听文件目录以及正则匹配规则</span><br><span class="line">    #- <span class="keyword">c</span>:\programdata\elasticsearch\logs\*  windows下的路径</span><br><span class="line">multiline: # 日志多行处理，列如java的堆栈信息</span><br><span class="line">    pattern: ^\d&#123;<span class="number">4</span>&#125; # 匹配前缀为数字开头，如果不是日期，该行日志接到上一行后尾</span><br><span class="line">    negate: true</span><br><span class="line">    <span class="keyword">match</span>: after</span><br><span class="line"></span><br><span class="line">field<span class="variable">s:</span> # 自定义属性，用于 Logstash 中</span><br><span class="line">    service_name: customer # 产生日志的服务名</span><br><span class="line">    log_type: info # 日志文件类型</span><br><span class="line">    server_id: ip-address # 服务器ip地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#----------------------------- Logstash output --------------------------------</span><br><span class="line">output.logstash:</span><br><span class="line"># The Logstash hosts</span><br><span class="line">host<span class="variable">s:</span> [<span class="string">"localhost:5043"</span>]  #这里是发送到本地的logstash，要与logstash的<span class="built_in">input</span>对应，也可以设置为elasticsearch</span><br></pre></td></tr></table></figure></li><li><p>运行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./filebeat -e -c filebeat.yml &gt; ../logs/filebeat.log 2&gt;&amp;1 &amp;  <span class="built_in">echo</span> $! &gt; process.pid</span><br></pre></td></tr></table></figure></li></ol><h3 id="logstash环境搭建"><a href="#logstash环境搭建" class="headerlink" title="logstash环境搭建"></a>logstash环境搭建</h3><ol><li><p>下载与安装</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-5.6.12.tar.gz</span><br><span class="line">tar -zxvf logstash-5.6.12.tar.gz -C /elk/logstash/</span><br></pre></td></tr></table></figure></li><li><p>配置logstash /config/logstash.conf</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">input</span> &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        host =&gt; <span class="string">"localhost"</span>  #监听本地访问的<span class="number">5043</span>端口</span><br><span class="line">        port =&gt; <span class="string">"5043"</span></span><br><span class="line">    &#125;</span><br><span class="line">    beats&#123;</span><br><span class="line">        host =&gt; <span class="string">"0.0.0.0"</span>  #监听任何地址都可访问的<span class="number">5044</span>端口</span><br><span class="line">        port =&gt; <span class="string">"5044"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">filter</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> [fields][log_type] == <span class="string">'error'</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        <span class="keyword">match</span> =&gt; &#123; <span class="string">"message"</span> =&gt; <span class="string">"%&#123;TIMESTAMP_ISO8601:logdate&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;JAVACLASS:class&#125; %&#123;NUMBER:thread&#125; %&#123;JAVALOGMESSAGE:logmsg&#125;"</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        date &#123; # 将 kibana 的查询时间改成日志的打印时间，方便之后查询，如果不改的话，kibana会有自己的时间，导致查询不方便</span><br><span class="line">            <span class="keyword">match</span> =&gt; [<span class="string">"logdate"</span>, <span class="string">"yyyy-MM-dd HH:mm:ss Z"</span>, <span class="string">"ISO8601"</span>]</span><br><span class="line">            target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [fields][log_type] == <span class="string">'info'</span> &#123; # 如果是info类型该怎么格式，这里是重复的，如果有日志格式不一样比如nginx的日志类型，可以在这里自己定义</span><br><span class="line">        grok &#123;</span><br><span class="line">        <span class="keyword">match</span> =&gt; &#123; <span class="string">"message"</span> =&gt; <span class="string">"%&#123;TIMESTAMP_ISO8601:logdate&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;JAVACLASS:class&#125; %&#123;NUMBER:thread&#125; %&#123;JAVALOGMESSAGE:logmsg&#125;"</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        date &#123;</span><br><span class="line">            <span class="keyword">match</span> =&gt; [<span class="string">"logdate"</span>, <span class="string">"yyyy-MM-dd HH:mm:ss Z"</span>, <span class="string">"ISO8601"</span>]</span><br><span class="line">            target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [<span class="string">"localhost:9200"</span>]</span><br><span class="line">        <span class="built_in">index</span> =&gt; <span class="string">"%&#123;[fields][service_name]&#125;-%&#123;+YYYY.MM.dd&#125;"</span> # 在es中存储的索引格式，按照“服务名-日期”进行索引</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup bin/logstash -f config/logstash.conf &gt; ../logs/logstash.log  2&gt;&amp;1 &amp; <span class="built_in">echo</span> $! &gt; process.pid</span><br></pre></td></tr></table></figure></li></ol><h3 id="kibana环境搭建"><a href="#kibana环境搭建" class="headerlink" title="kibana环境搭建"></a>kibana环境搭建</h3><ol><li><p>下载与安装</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.12-linux-x86_64.tar.gz</span><br><span class="line">tar -zxvf kibana-5.6.12-linux-x86_64.tar.gz -C /elk/kibana/</span><br></pre></td></tr></table></figure></li><li><p>配置kibana /config/kibana.log</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.por<span class="variable">t:</span> <span class="number">5601</span></span><br><span class="line">server.hos<span class="variable">t:</span> <span class="string">"0.0.0.0"</span> #允许其他终端访问</span><br><span class="line">elasticsearch.ur<span class="variable">l:</span> <span class="string">"http://localhost:9200"</span> #elasticsearch访问地址</span><br></pre></td></tr></table></figure></li><li><p>运行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup bin/kibana &gt; ../logs/kibana.log 2&gt;&amp;1 &amp; <span class="built_in">echo</span> $! &gt; process.pid</span><br></pre></td></tr></table></figure></li><li><p>验证<br>&emsp;&emsp;访问5601端口有页面即为正常</p></li></ol><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="Kibana使用说明"><a href="#Kibana使用说明" class="headerlink" title="Kibana使用说明"></a>Kibana使用说明</h3><ol><li>查看系统运行状态<br>&emsp;&emsp;访问<a href="http://localhsot:5601/status" target="_blank" rel="noopener">http://localhsot:5601/status</a></li><li>基本使用<br>&emsp;&emsp;在 Discover 页搜索和浏览数据；在 Visualize 页做数据图表映射；在 Dashboard 页创建并查看自定义仪表板。</li></ol><p>参考资料：<br><a href="https://www.elastic.co/guide/cn/kibana/current/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/cn/kibana/current/index.html</a></p><h3 id="elasticsearch查询语法"><a href="#elasticsearch查询语法" class="headerlink" title="elasticsearch查询语法"></a>elasticsearch查询语法</h3><ol><li>其中status字段包含active &emsp;&emsp;-&gt;&emsp;&emsp;  status:active</li><li>其中title字段包含quick或brown。如果省略OR运算符，将使用默认运算符 &emsp;&emsp; -&gt; &emsp;&emsp; title:(quick OR brown)  或者是title:(quick brown)</li><li>其中author字段包含精确短语”john smith” &emsp;&emsp; -&gt; &emsp;&emsp; author:”john smith”</li><li>其中任何字段book.title，book.content或book.date包含 quick或brown（注意我们需要如何*使用反斜杠转义） &emsp;&emsp; -&gt; &emsp;&emsp;</li><li>该字段title具有任何非null值：&emsp;&emsp;-&gt;&emsp;&emsp;_exists_:title</li><li>通配符搜索可以在单个术语上运行，使用?替换单个字符，并*替换零个或多个字符  <font color="red">请注意，通配符查询可能会占用大量内存并执行得非常糟糕 - 只需考虑需要查询多少个术语以匹配查询字符串"a* b* c*"。</font></li><li>正则表达式 &emsp;&emsp;-&gt;&emsp;&emsp;  /pattern/</li><li>模糊 &emsp;&emsp;-&gt;&emsp;&emsp; quikc~brwn~foks~</li><li>邻近搜索 邻近搜索允许我们指定短语中单词的最大编辑距离：&emsp;&emsp;-&gt;&emsp;&emsp;”fox quick”~5</li><li>范围 可以为日期，数字或字符串字段指定范围。包含范围用方括号指定，[min TO max]排他范围用大括号指定{min TO max}。</li><li>保留字符   + - = &amp;&amp; || &gt; &lt; ! ( ) { } [ ] ^ “ ~ * ? : \ /</li><li>分组 可以将多个术语或子句与括号组合在一起，以形成子查询：</li><li>布尔运算符 首选运算符+（此术语必须存在）和- （此术语不得出现）。</li><li>提升 使用boost运算符^使一个术语比另一个术语更相关。例如，如果我们想要找到关于fox的所有文件，但我们对quick fox特别感兴趣  &emsp;&emsp;-&gt;&emsp;&emsp; quick^2 fox</li></ol><p>参考资料<br> <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/query-dsl-query-string-query.html#_boosting" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.0/query-dsl-query-string-query.html#_boosting</a></p>]]></content>
      
      <categories>
          
          <category> elk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> elk </tag>
            
            <tag> midedleware </tag>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shiro框架基础知识</title>
      <link href="/2018/11/24/theory/design/using/java/framework/shiro/"/>
      <url>/2018/11/24/theory/design/using/java/framework/shiro/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>&emsp;&emsp;Shiro是java的一个安全框架。可以帮助我们完成：认证、授权、加密、会话管理、与web集成、缓存等功能。<br>&emsp;&emsp;Shiro不会去维护用户、维护权限，需要我们自己去提供设计，然后通过相应接口注入给shiro。</p><h2 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h2><p>&emsp;&emsp;在shiro中，用户需要提供principals(身份)credentials(证明)，从而验证用户身份。</p><ol><li>principals： 身份，及主体的标识属性，唯一即可。一个主题可以有多个principals，但是只能拥有一个primary principal。</li><li>credentials： 证明/凭证，只有主体知道的安全值。如密码/数字证书等</li></ol><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><h3 id="主体"><a href="#主体" class="headerlink" title="主体"></a>主体</h3><p>&emsp;&emsp;即访问应用的用户，在shiro中使用Subject代表该用户，用户只有在授权后才允许访问相应的资源。</p><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><p>&emsp;&emsp;在应用中用户可以访问的任何东西，比如：页面，查看/编辑数据,访问某个业务方法、打印文本等。用户只有授权后才能访问。</p><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>&emsp;&emsp;安全策略中的原子授权单位，权限代表在用户中能不能访问某个资源。<br>Shiro支持粗颗粒权限（如用户模块的所有权限）和细颗粒权限（操作某个用户的权限）。</p><h3 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h3><p>&emsp;&emsp;角色代表了操作集合，可以理解为权限的集合，一般情况下，我们会赋予用户角色而不是权限。</p><h4 id="隐式角色"><a href="#隐式角色" class="headerlink" title="隐式角色"></a>隐式角色</h4><p>&emsp;&emsp;直接通过角色来验证用户有没有操作权限。粒度是以角色为单位进行访问控制的，粒度较粗；如果进行修改可能造成多处代码修改。</p><h4 id="显示角色"><a href="#显示角色" class="headerlink" title="显示角色"></a>显示角色</h4><p>&emsp;&emsp;在程序中通过权限控制水能访问某个资源，角色聚合一组权限集合。粒度是以资源/实例为单位的，粒度较细。</p><h3 id="Permission"><a href="#Permission" class="headerlink" title="Permission"></a>Permission</h3><h4 id="字符通配符权限"><a href="#字符通配符权限" class="headerlink" title="字符通配符权限"></a>字符通配符权限</h4><p>&emsp;&emsp;规则：“资源通配符:操作:对象实例id” ，即对那个资源可以进行什么操作。“:”代表资源/操作/实例的分割；“,”表示操作的分割；“*”表示任意资源/操作/实例。</p><h4 id="性能问题"><a href="#性能问题" class="headerlink" title="性能问题"></a>性能问题</h4><p>&emsp;&emsp;可以考虑配合缓存来提供其性能，如果这样性能还打不到要求，我们可以实现位操作算法实现性能更好的权限匹配。也可以考虑在sql查询的时候加上权限字符串以在查询时就完成权限匹配。</p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大数据环境搭建过程记录</title>
      <link href="/2018/11/23/theory/design/using/bigdata/bigdata-server-environment-construct/"/>
      <url>/2018/11/23/theory/design/using/bigdata/bigdata-server-environment-construct/</url>
      <content type="html"><![CDATA[<h3 id="步骤一、配置免密登录"><a href="#步骤一、配置免密登录" class="headerlink" title="步骤一、配置免密登录"></a>步骤一、配置免密登录</h3><p>&emsp;&emsp;配置服务器间ssh免密登录<a href="https://atbulbs.github.io/2018/02/03/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">https://atbulbs.github.io/2018/02/03/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BD%BF%E7%94%A8/</a></p><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><ol><li>系统已经安装有ssh</li><li>操作用户最好拥有/etc/hosts文件的读写权限或者用户拥有sudo权限</li><li>操作用户拥有ssh-keygen命令权限</li></ol><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><ol><li><p>修改hostss文件(/etc/hosts)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><p>添加以下内容</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168</span>.<span class="number">126.150</span> hadoop1</span><br><span class="line"><span class="number">192.168</span>.<span class="number">126.151</span> hadoop2</span><br><span class="line"><span class="number">192.168</span>.<span class="number">126.152</span> hadoop3</span><br></pre></td></tr></table></figure></li><li><p>在每一台服务器上生成ssh登录密钥</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在~文件夹（当前用户个人目录）下生成.ssh隐藏文件夹以及id_rsa  id_rsa.pub文件，id_rsa是私钥文件，id_rsa.pub是公钥文件</p></li><li><p>分别将所有的（这里指三台服务器）id_rsa.pub内的内容拼接到一个文件中(authorized_keys),内容如下</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA9&#x2F;09V+rJxmK1Qpoh3q1egXc1XLaBhO&#x2F;gZCvQYzdC3CqN3Bv+IYduernvSXCLGZGweDP3Caw223&#x2F;QiDDe2g2FB3+XmUSlkldpaRS5fGMIO4OAM5MjNtmkiruLuH0d8OQubxkzT8TTCfJLosfnT0jbls6cYPHmidcy1jAU82TpExCgz73zrJNLRXnS7tPPMW4IK9A0mChg11Ohn+ldZOqK7P80kR5951rHBd97fCLl8xl5UZ1Ep5XslT+Q+DLUhYPXk0NWNnDCPNsnNEAdF&#x2F;jfBOOscrZkU0ahz1rYP6Zz9xDcC2kxhEDwf9aXD&#x2F;wLOXJv4B&#x2F;hv6&#x2F;RUtrbYVrl3Fk30w&#x3D;&#x3D; test@hadoop01</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4Sd0LKEhnuHhYdI&#x2F;nM8diQZSKjeJ4LYIjyVqqdp1igKXFBxU2EcVADkq4S&#x2F;Uupx5GBlTxmVWWREp5W3pcK0Z+I8FCpr4AAVpKqOOua5RUJg7NzmTiWf9tUnVKerwa7IYi&#x2F;n0wuwBNyps123ajOtNkC4oFez3NQgXywpMX7wIQVLCldtRQCm2UHZQHMU55qHnEj3BzZqNg4vdPRygxDZubB65pQJVIBWp03LsKUahm3bL3hUL7A2mlUwCz&#x2F;mXZrZUc1q&#x2F;DSmGIGpxc2jc&#x2F;ukSV&#x2F;gG5APgyxTiEkvSIECPWhP9fJCGlTbng+NXVFtbPQ6vI0Mblb02s4G8tMWvRB9Jrw&#x3D;&#x3D; test@hadoop02</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3GLFdnz5aOG3XLT+8GR&#x2F;YzqJXG2K+b7M+CRiVRPcqJJvqe9UFu8&#x2F;IydM&#x2F;jQTIi5OhHBXqnGMcAjK76fEkMiWaPdmILbiMYr11Lx56ZhqRqsVvE8ndO2f5j45vvADZbGAJWGEVIr6tnf6QBocBg&#x2F;j4h9BWryFvgfhdzM+C3CZmyRyOUJwz8NNmkXySIH&#x2F;1EUHOSrwmOnO12HwLW3&#x2F;nXaowR9KfyYbz2tjNJdGApeQwVQgkKeFZ8Pqq8UZBcFZeg3Zbzdwxo86y1lUxL896Wgh++jhys5eyKgruOgnSgbqy0kOu32R&#x2F;uRaSt9IrnkPMPGaEi340x9+mcm9c8&#x2F;PoU36Cw&#x3D;&#x3D; test@hadoop03</span><br></pre></td></tr></table></figure></li><li><p>将authorized_keys文件上传到每一台服务器下的~/.ssh/下</p></li><li>修改.ssh文件夹以及authorized_keys文件的权限 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li></ol><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>&emsp;&emsp;使用ssh命令登录其他两台服务器，成功即可，如果服务器间的用户名相同，则可以忽略用户名</p><h3 id="步骤二、jdk安装与配置"><a href="#步骤二、jdk安装与配置" class="headerlink" title="步骤二、jdk安装与配置"></a>步骤二、jdk安装与配置</h3><p>&emsp;&emsp;下载安装jdk并配置环境变量</p><h4 id="前提条件-1"><a href="#前提条件-1" class="headerlink" title="前提条件"></a>前提条件</h4><ol><li>已经下载jdk的安装包（这里选用tar.gz压缩包文件）</li><li>操作用户最好拥有/etc/profile文件的读写权限或者用户拥有sudo权限</li></ol><h4 id="安装配置过程"><a href="#安装配置过程" class="headerlink" title="安装配置过程"></a>安装配置过程</h4><ol><li><p>解压</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/java</span><br><span class="line">tar -zxvf jdk-8u201-linux-x64.tar.gz -C /opt/java</span><br></pre></td></tr></table></figure></li><li><p>修改环境变量</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p> 在profile文件末尾添加</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/<span class="keyword">opt</span>/java/jdk1.<span class="number">8.0</span>_201</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin</span><br><span class="line">export CLASSPATH=.$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><p> 使修改的profile立刻生效</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤三、zookeeper安装与配置"><a href="#步骤三、zookeeper安装与配置" class="headerlink" title="步骤三、zookeeper安装与配置"></a>步骤三、zookeeper安装与配置</h3><p>&emsp;&emsp;配置zookeeper集群</p><h4 id="前提条件-2"><a href="#前提条件-2" class="headerlink" title="前提条件"></a>前提条件</h4><ol><li>已经下载zookeeper的安装包</li></ol><h4 id="安装配置过程-1"><a href="#安装配置过程-1" class="headerlink" title="安装配置过程"></a>安装配置过程</h4><ol><li><p>解压安装包</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/zookeeper</span><br><span class="line">tar -zxvf zookeeper.tar.gz -C /opt/zookeeper</span><br></pre></td></tr></table></figure></li><li><p>配置zoo.cfg<br> 在zookeeper/conf目录下，将zoo_sample.cfg复制为zoo.cfg，在其中配置</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tickTime=<span class="number">4000</span></span><br><span class="line">initLimit=<span class="number">20</span></span><br><span class="line">dataDir=/<span class="keyword">opt</span>/zookeeper/data</span><br><span class="line">clientPort=<span class="number">2181</span></span><br><span class="line">server.<span class="number">1</span>=<span class="number">192.168</span>.<span class="number">126.150</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line">server.<span class="number">2</span>=<span class="number">192.168</span>.<span class="number">126.151</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line">server.<span class="number">3</span>=<span class="number">192.168</span>.<span class="number">126.152</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br></pre></td></tr></table></figure> <font color="red">注意，zookeeper集群中所有节点的zoo.cfg文件一致。</font></li><li>在zoo.cfg配置的dataDir下创建myid文件，其中只有一个数字，表明当前节点的server.id，与zoo.cfg中配置一致。</li><li><p>修改日志文件输出位置(红色为需要修改的地方)，按天输出到指定文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/<span class="built_in">log</span>/zookeeper</span><br><span class="line">vim /opt/zookeeper/bin/zkEnv.sh</span><br></pre></td></tr></table></figure> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">"x$&#123;ZOO_LOG_DIR&#125;"</span> = <span class="string">"x"</span> ]</span><br><span class="line">then</span><br><span class="line">ZOO_LOG_DIR=<span class="string">"/opt/log/zookeeper/"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x$&#123;ZOO_LOG4J_PROP&#125;"</span> = <span class="string">"x"</span> ]</span><br><span class="line">then</span><br><span class="line">ZOO_LOG4J_PROP=<span class="string">"INFO,ROLLINGFILE"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/zookeeper/conf/log4j.properties</span><br></pre></td></tr></table></figure> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zookeeper.root.logger=INFO, ROLLINGFILE</span><br><span class="line">log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender</span><br></pre></td></tr></table></figure></li><li><p>启动zk服务：zkServer.sh start（启动应尽量所有节点同时启动）<br> 停止zk服务：zkServer.sh stop<br> 查看zk状态：zkServer.sh status<br> 重启zk服务：zkServer.sh restart  </p></li></ol><h3 id="步骤四、hadoop安装与配置"><a href="#步骤四、hadoop安装与配置" class="headerlink" title="步骤四、hadoop安装与配置"></a>步骤四、hadoop安装与配置</h3><ol><li><p>安装和配置hadoop1节点的hadoop</p><ol><li>配置hadoop-env.sh</li><li>配置jdk安装目录</li><li>配置hadoop配置文件目录</li><li>配置环境变量 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/java/jdk1.8.0_201</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop</span><br></pre></td></tr></table></figure></li></ol></li><li><p>配置core-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/log/hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:2181,hadoop2:2181,hadoop3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置hdfs-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.ns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.ns.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.ns.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop3:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop3:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://hadoop1:8485;hadoop2:8485;hadoop3:8485/ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/hadoop/journal<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.ns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>sshfence<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/sysmon/.ssh/id_rsa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/log/hadoop/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/log/hadoop/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置mapred-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置yarn-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.recovery.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.store.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:2181,hadoop2:2181,hadoop3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn-ha<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.resource.cpu-vcores<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>4<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>4096<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/java/jdk1.8.0_201</span><br><span class="line">export ZOO_HOME=/opt/zookeeper</span><br><span class="line">export HADOOP_HOME=/opt/hadoop</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$ZOO_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br><span class="line">export CLASSPATH=.$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure></li><li><p>根据配置文件，创建相关文件夹，用来存放对应数据<br> 在hadoop目录下创建 journal目录<br> 在/opt/log/hadoop/目录下 创建namenode，datanode目录  </p></li><li>通过scp命令，将hadoop安装目录远程cp到其他节点</li><li><p>启动zookeeper集群</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure></li><li><p>格式化zookeeper<br>在有namenode的节点上 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs zkfc -formatZK <span class="comment">#这个指令的作用是在zookeeper集群上生成ha节点</span></span><br></pre></td></tr></table></figure></li><li><p>启动journalnode集群<br>在三个节点上分别执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start journalnode</span><br></pre></td></tr></table></figure></li><li><p>在hadoop1节点上格式化namenode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop namenode -format</span><br></pre></td></tr></table></figure></li><li><p>启动hadoop1节点的namenode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start namenode</span><br></pre></td></tr></table></figure></li><li><p>把hadoop3节点变为 standby namenode节点<br>在hadoop3节点上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -bootstrapStandby</span><br><span class="line">hadoop-daemod.sh start namenode</span><br></pre></td></tr></table></figure></li><li><p>在三个节点上启动datanode节点，分别执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start datanode</span><br></pre></td></tr></table></figure></li><li><p>启动zkfc（启动FalioverControllerActive）<br>在hadoop1，hadoop3节点上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop-daemon.sh start zkfc</span><br></pre></td></tr></table></figure></li><li><p>在hadoop1节点上启动resourcemanager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure></li><li><p>在hadoop2节点上启动副resourcemanager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn-daemon.sh start resourcemanager</span><br></pre></td></tr></table></figure></li><li><p>启动之后<br>hadoop1节点的进程状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">15376 ResourceManager</span><br><span class="line">20610 Jps</span><br><span class="line">20468 Kafka</span><br><span class="line">18838 QuorumPeerMain</span><br><span class="line">14999 DataNode</span><br><span class="line">14809 NameNode</span><br><span class="line">15484 NodeManager</span><br><span class="line">14590 JournalNode</span><br><span class="line">15182 DFSZKFailoverController</span><br></pre></td></tr></table></figure><p>hadoop2节点的进程状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">23554 DataNode</span><br><span class="line">23842 ResourceManager</span><br><span class="line">24068 NodeManager</span><br><span class="line">24965 Jps</span><br><span class="line">25690 QuorumPeerMain</span><br><span class="line">23324 JournalNode</span><br></pre></td></tr></table></figure><p>hadoop3节点进程状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">22340 Jps</span><br><span class="line">16391 JournalNode</span><br><span class="line">16872 DataNode</span><br><span class="line">17081 DFSZKFailoverController</span><br><span class="line">22092 Kafka</span><br><span class="line">25932 QuorumPeerMain</span><br><span class="line">17437 NodeManager</span><br><span class="line">16719 NameNode</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤五、kafka安装"><a href="#步骤五、kafka安装" class="headerlink" title="步骤五、kafka安装"></a>步骤五、kafka安装</h3><ol><li><p>解压软件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/kafka</span><br><span class="line">tar -zxvf kafka_2.11-1.0.2\ .tgz -C /opt/kafka</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件 config/server.properties   —-<font color="red">红色</font>为修改内容，黑色为原先内容，<font color="blue">蓝色</font>为添加内容  </p> <font color="red">broker.id=0  #集群内kafka的id，每一台都不能一样</font> <font color="blue">   host.name=192.168.126.150   </font> log.retention.hours=168 <font color="blue">   message.max.byte=5242880   default.replication.factor=2   replica.fetch.max.bytes=5242880</font></li><li><p>启动（每一台集群内的服务器）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/kafka/kafka_2.11-1.0.2/bin</span><br><span class="line">./kafka-server-start.sh -daemon ../config/server.properties</span><br></pre></td></tr></table></figure></li><li><p>测试</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一台服务器中创建消息队列test1，指定2个副本，1个分区</span></span><br><span class="line">./kafka-topics.sh --create --zookeeper hadoop1:2181,hadoop2:2181,hadoop3:2181 --replication-factor 2 --partitions 1 --topic test1</span><br><span class="line">./kafka-console-consumer.sh --zookeeper mater:2181,hadoop2:2181,hadoop3:2181 --topiv test1</span><br><span class="line"><span class="comment">#以下命令在另一台服务器中操作</span></span><br><span class="line">./kafka-console-producer.sh --broker-list hadoop1:9092,hadoop2:9092,hadoop3:9092 --topic test1</span><br></pre></td></tr></table></figure><p> 在生产者中输入文字，在消费者中查看，验证</p></li></ol><h3 id="步骤六、hive安装与配置"><a href="#步骤六、hive安装与配置" class="headerlink" title="步骤六、hive安装与配置"></a>步骤六、hive安装与配置</h3><ol><li>hive不需要任何配置就可以运行，但需配置更改mysql元数据存储</li><li><p>删除hdfs中的/user/hive（之前运行过hive后，才会出现此目录）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -rmr /user/hive</span><br></pre></td></tr></table></figure></li><li><p>复制hive/conf/hive-default.xml.template为hive-site.xml，然后在配置中修改：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.126.154:3306/hive?useSSL=false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>account<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>password<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 将mysql的链接jar包拷贝到hive到lib目录下。<br> 还有，将hive-site.xml配置文件里的 value值带：的，都改成绝对路径，否则报错，hadoop不认带：的路径。（所有的 ${system:java.io.tmpdir} 改成 /tmp/）</p></li><li><p>mysql中要手动创建hive数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> hive <span class="built_in">character</span> <span class="keyword">set</span> latin1;</span><br></pre></td></tr></table></figure><p> 如果出现没有权限的问题，在mysql中授权（在安装mysql的机器上执行）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -r root -p</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'root'</span> <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'hadoop1'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'root'</span> <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure></li><li><p>初始化元数据</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schematool -initSchema -dbType mysql</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤七、hbase安装与配置"><a href="#步骤七、hbase安装与配置" class="headerlink" title="步骤七、hbase安装与配置"></a>步骤七、hbase安装与配置</h3><ol><li><p>修改conf/hbase-env.sh</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/<span class="keyword">opt</span>/java/jdk1.<span class="number">8.0</span>_201</span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br></pre></td></tr></table></figure></li><li><p>修改hbase-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop1:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop1:2181,hadoop2:2181,hadoop3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改conf/regionservers文件，其中配置所有hbase主机，每个主机独占一行，hbase启动或关闭时会按照此配置顺序执行。</p></li><li><p>启动<br> 主节点：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-hbae.sh</span><br></pre></td></tr></table></figure><p> 在一从节点启动备用hhadoop1实现高可用：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hbase-daemon.sh start hadoop1</span><br></pre></td></tr></table></figure><p> 关闭集群：<code>stop-hbase.sh</code></p></li></ol>]]></content>
      
      <categories>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> bigdata </tag>
            
            <tag> environment construct </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>myabtis进阶</title>
      <link href="/2018/11/17/theory/design/using/java/framework/springboot-myabtis/"/>
      <url>/2018/11/17/theory/design/using/java/framework/springboot-myabtis/</url>
      <content type="html"><![CDATA[<ol><li><p>逆向工程  </p><ol><li>在数据库中建好表  </li><li>配置好xml，通过逆向工程生成dao接口、实体类、xml映射文件  </li><li><p>当需要添加数据操作的时候，先在xml中写好CRUD语句，然后在DAO接口层写接口，最后到映射文件  </p><p>&emsp;&emsp;随着数据库表的增加、修改，我们需要做的修改随之增加，增加了不少的工作量。</p></li></ol></li><li><p>无xml的myabtis之路</p><ol><li>设计需要的实体类</li><li>根据实体层在数据库中建表，逆向工程在数据库中生成</li><li><p>当需要进行增删改查的时候，只需要在Mapper映射文件中，用对应的注解@Select、@Delete等进行相应的操作即可</p><p>&emsp;&emsp;依然没有自动生成的代码</p></li></ol></li><li></li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> orm </tag>
            
            <tag> myabtis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot使用过程中踩过的坑</title>
      <link href="/2018/11/05/theory/design/using/java/framework/springboot-question/"/>
      <url>/2018/11/05/theory/design/using/java/framework/springboot-question/</url>
      <content type="html"><![CDATA[<ol><li><p>SpringBoot项目启动过程中出现类似Could not resolve placeholder ‘td.pathprefix’ in value “${td.pathprefix}”的错误。<br>&emsp;&emsp;问题的产生是由于有多个properties文件造成的，如果再第一个properties文件中没有找，就不认为没有了，不继续找下一个properties文件</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer <span class="title">placeholderConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    PropertySourcesPlaceholderConfigurer c = <span class="keyword">new</span> PropertySourcesPlaceholderConfigurer();</span><br><span class="line">    c.setIgnoreUnresolvablePlaceholders(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>项目中用到什么依赖加载什么依赖，不要一股脑都添加上去，springboot会做各种初始设置，可能引起报错</p></li><li></li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sklearn学习（一）----广义线性模型</title>
      <link href="/2018/10/19/theory/algorithm/machinelearning/sklearn/sklearn-1/"/>
      <url>/2018/10/19/theory/algorithm/machinelearning/sklearn/sklearn-1/</url>
      <content type="html"><![CDATA[<h3 id="学习环境"><a href="#学习环境" class="headerlink" title="学习环境"></a>学习环境</h3><p>Windows 10 + pycharm + anaconda3</p><h3 id="广义线性模型"><a href="#广义线性模型" class="headerlink" title="广义线性模型"></a>广义线性模型</h3><p>&emsp;&emsp;目标值y是变量x的线性组合，$\hat{y}$是预测值</p><script type="math/tex; mode=display">\hat{y}(\omega,x)=\omega_0+\omega_1x_1+...+\omega_px_p</script><p>&emsp;&emsp;定义向量 $\omega=(\omega_1,\omega_2,…,\omega_p)$作为conf_,定义 $\omega_0$作为intercept_</p><h3 id="普通最小二乘法"><a href="#普通最小二乘法" class="headerlink" title="普通最小二乘法"></a>普通最小二乘法</h3><p>&emsp;&emsp;（LinearRegression ）拟合一个带有系数 w = (w_1, …, w_p) 的线性模型，使得数据集实际观测数据和预测数据（估计值）之间的残差平方和最小。  </p><script type="math/tex; mode=display">\min_{\omega}{||X_\omega-y||_2}^2\qquad也就是求\sum_{i=1}^{\omega}(X_i-y)^2的最小值</script><h4 id="算法复杂度："><a href="#算法复杂度：" class="headerlink" title="算法复杂度："></a>算法复杂度：</h4><p>该方法使用 X 的奇异值分解来计算最小二乘解。如果 X 是一个 size 为 (n, p) 的矩阵，设 n \geq p ，则该方法的复杂度为 O(n p^2).</p><h3 id="岭回归"><a href="#岭回归" class="headerlink" title="岭回归"></a>岭回归</h3><p>&emsp;&emsp;岭（Ridge）回归，又称脊回归、吉洪诺夫正则化（Tikhonov regularization），是对不适定问题（ill-posed problem)进行回归分析时最经常使用的一种正则化方法。实际上是一种最小二乘法的改良，放弃了最小二乘法的无偏性，以损失部分信息、降低精度为代价获得更为符合实际和可靠的回归系数的回归方法，对于病态数据的拟合要强于最小二乘法。岭回归通过对系数的大小施加惩罚来解决 普通最小二乘法 的一些问题。 岭系数最小化的是带罚项的残差平方和。  </p><script type="math/tex; mode=display">\min_\omega{||X_\omega-y||_2}^2+\alpha{||\omega||_2}^2</script><p>其中， $\alpha \geq 0$ 是控制系数收缩量的复杂性参数： $\alpha$ 的值越大，收缩量越大，这样系数对共线性的鲁棒性也更强。  </p><h4 id="算法复杂度：-1"><a href="#算法复杂度：-1" class="headerlink" title="算法复杂度："></a>算法复杂度：</h4><p>该方法使用 X 的奇异值分解来计算最小二乘解。如果 X 是一个 size 为 (n, p) 的矩阵，设 n \geq p ，则该方法的复杂度为 O(n p^2).</p><h4 id="设置正则化参数：广义交叉验证"><a href="#设置正则化参数：广义交叉验证" class="headerlink" title="设置正则化参数：广义交叉验证"></a>设置正则化参数：广义交叉验证</h4><p>&emsp;&emsp;RidgeCV 通过内置的 Alpha 参数的交叉验证来实现岭回归。 该对象与 GridSearchCV 的使用方法相同，只是它默认为 Generalized Cross-Validation(广义交叉验证 GCV)，这是一种有效的留一验证方法（LOO-CV）:</p><h3 id="Lasso"><a href="#Lasso" class="headerlink" title="Lasso"></a>Lasso</h3><p>&emsp;&emsp;估计稀疏系数的线性模型。倾向于使用具有较少参数值的情况，有效地减少给定解决方案所依赖变量的数量。 因此，Lasso 及其变体是压缩感知领域的基础。 在一定条件下，它可以恢复一组非零权重的精确集.</p><p>最小化的目标函数是：</p><script type="math/tex; mode=display">\min_\omega\frac{1}{2n_{samples}}{||X_\omega-y||_2}^2+\alpha||\omega||_1</script><p>&emsp;&emsp;其中，$\alpha$ 是一个常数， $||w||_1$ 是参数向量的 $\ell_1-norm$ 范数。</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol><li><a href="http://sklearn.apachecn.org/cn/0.19.0/modules/linear_model.html#ridge-regression" target="_blank" rel="noopener">http://sklearn.apachecn.org/cn/0.19.0/modules/linear_model.html#ridge-regression</a></li></ol>]]></content>
      
      <categories>
          
          <category> sklearn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Machine Learning </tag>
            
            <tag> Algorithm </tag>
            
            <tag> sklearn </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(六) Zuul</title>
      <link href="/2018/10/17/theory/design/using/java/framework/springcloud-6/"/>
      <url>/2018/10/17/theory/design/using/java/framework/springcloud-6/</url>
      <content type="html"><![CDATA[<h2 id="API网关服务-：-Spring-Cloud-Zuul"><a href="#API网关服务-：-Spring-Cloud-Zuul" class="headerlink" title="API网关服务 ： Spring Cloud Zuul"></a>API网关服务 ： Spring Cloud Zuul</h2><p>&emsp;&emsp;Spring Cloud Zuul通过与Spring Cloud Eureka进行整合，将自身注册为Eureka服务治理下的应用，同时从Eureka中获得所有其他微服务的实力信息，使得自动完成维护服务实例的工作。对于路由规则的维护，Zuul默认会通过服务名作为ContextPath的方式来创建路由映射。</p><p>&emsp;&emsp;开发者可以通过使用Zuul来创建各种检校过滤器，然后指定那些规则的请求需要执行检校逻辑，只有通过检校的才会被路由到具体的微服务里接口，否则返回错误提示。</p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><h4 id="构建网关"><a href="#构建网关" class="headerlink" title="构建网关"></a>构建网关</h4><ol><li><p>构建spring boot工程，引入依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建启动类，添加EnableZuulProxy注解开启API网关服务功能</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringCloudApplication</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApigatewayApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(ApigatewayApplication<span class="class">.<span class="keyword">class</span>).<span class="title">web</span>(<span class="title">true</span>).<span class="title">run</span>(<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">1501</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="请求路由"><a href="#请求路由" class="headerlink" title="请求路由"></a>请求路由</h4><h5 id="传统路由方式"><a href="#传统路由方式" class="headerlink" title="传统路由方式"></a>传统路由方式</h5><p>/api-a-url/**的路由都会到<a href="http://localhost:8080/；如：访问http://localhost:1501/api-a-url/hello会到http://localhost:8080/hello" target="_blank" rel="noopener">http://localhost:8080/；如：访问http://localhost:1501/api-a-url/hello会到http://localhost:8080/hello</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">api-a-url:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/api-a-url/**</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">http://localhost:8080/</span></span><br></pre></td></tr></table></figure><h5 id="面向服务的路由"><a href="#面向服务的路由" class="headerlink" title="面向服务的路由"></a>面向服务的路由</h5><p>&emsp;&emsp;具体的路由由Eureka服务发现机制负责自动维护</p><ol><li><p>添加Eureka的依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置服务路由</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">    <span class="attr">routes:</span></span><br><span class="line">        <span class="attr">api-b:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/api-a/**</span></span><br><span class="line">        <span class="attr">serviceId:</span> <span class="string">hello-service</span></span><br><span class="line">        <span class="attr">api-b:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/api-b/**</span></span><br><span class="line">        <span class="attr">serviceId:</span> <span class="string">feign-consurme</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="请求过滤"><a href="#请求过滤" class="headerlink" title="请求过滤"></a>请求过滤</h4><p>&emsp;&emsp;继承ZuulFilter抽象类并实现定义的4个抽象函数就可以完成对请求的拦截和过滤。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Log</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoleFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器类型，决定过滤器在请求的哪个周期中执行</span></span><br><span class="line"><span class="comment">     * 定义为pre，在请求被路由之前执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"pre"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器的执行顺序，当一个阶段中存在多个过滤器的时候，根据该方法返回值一次执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断该过滤器是否需要执行。这里我们直接返回true，因此该过滤器对所有请求都生效。实际中利用该函数来指定过滤器的有效范围</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器的具体逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> ZuulException </span>&#123;</span><br><span class="line">        RequestContext currentContext = RequestContext.getCurrentContext();</span><br><span class="line">        HttpServletRequest request = currentContext.getRequest();</span><br><span class="line">        log.info(String.format(<span class="string">"send %s request to %s"</span>,request.getMethod(),request.getRequestURL().toString()));</span><br><span class="line">        String accessToken = request.getParameter(<span class="string">"accessToken"</span>);</span><br><span class="line">        <span class="keyword">if</span> (accessToken == <span class="keyword">null</span>) &#123;</span><br><span class="line">            log.warn(<span class="string">"access token is empty"</span>);</span><br><span class="line">            currentContext.setSendZuulResponse(<span class="keyword">false</span>); <span class="comment">//设置不对其进行路由</span></span><br><span class="line">            currentContext.setResponseStatusCode(<span class="number">401</span>); <span class="comment">//设置错误返回码</span></span><br><span class="line">            currentContext.setResponseBody(<span class="string">"没有access token"</span>);  <span class="comment">//设置返回的body内容</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">"access token ok"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;设置具体的配置类配置bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RoleFilter <span class="title">roleFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RoleFilter();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机器学习（二）---- 单变量线性回归</title>
      <link href="/2018/10/15/theory/algorithm/machinelearning/machinelearning-2/"/>
      <url>/2018/10/15/theory/algorithm/machinelearning/machinelearning-2/</url>
      <content type="html"><![CDATA[<h3 id="模型表示"><a href="#模型表示" class="headerlink" title="模型表示"></a>模型表示</h3><p>&emsp;&emsp;在监督学习中，有一个数据集，这个数据集被称为训练集。</p><h4 id="例"><a href="#例" class="headerlink" title="例"></a>例</h4><p>&emsp;&emsp;以房屋交易为例，假如我们的Training Set（训练集）如表</p><div class="table-container"><table><thead><tr><th><div style="text-align:center;">Size in feet<sup>2</sup>(x)</div></th><th><div style="text-align:center;">Price($) in 1000's(y)</div></th></tr></thead><tbody><tr><td><div style="text-align:center;">2104</div></td><td><div style="text-align:center;">460</div></td></tr><tr><td><div style="text-align:center;"> 1416</div></td><td><div style="text-align:center;">232</div></td></tr><tr><td><div style="text-align:center;"> 1534</div></td><td><div style="text-align:center;">315</div></td></tr><tr><td><div style="text-align:center;">852</div></td><td><div style="text-align:center;">178</div></td></tr><tr><td><div style="text-align:center;">...</div></td><td><div style="text-align:center;">...</div></td></tr></tbody></table></div><p>&emsp;&emsp;&emsp;&emsp;<i>m</i>代表训练集中的实例数目<br>&emsp;&emsp;&emsp;&emsp;<i>x</i>代表特征/输入变量<br>&emsp;&emsp;&emsp;&emsp;<i>y</i>代表目标变量/输出变量<br>&emsp;&emsp;&emsp;&emsp;<i>(x,y)</i>代表训练集中的实例<br>&emsp;&emsp;&emsp;&emsp;$(x^{(i)},y^{(i)})$代表第i个观察实例<br>&emsp;&emsp;&emsp;&emsp;<i>h</i>代表学习算法的解决方案或函数也称为假设（Hypothesis）<br>&emsp;&emsp;<i>h</i>的一种可能的表达式 $h(x)=\theta_0+\theta_1(x)$,即单变量线性回归  </p><h3 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h3><p>&emsp;&emsp;代价函数，有时候也称为平方误差函数/平方误差代价函数</p><h4 id="例-1"><a href="#例-1" class="headerlink" title="例"></a>例</h4><script type="math/tex; mode=display">J(θ_0,θ_1)=\frac{1}{2m}\sum_{i=1}^m (h_\theta(x^{(i)}-y^{(1)}))^2</script><p>注：$J(θ_0,θ_1)$就是代价函数（cost function）<br>&emsp;&emsp;m:样本空间容量<br>$h_\theta(x^{(i)})=\theta_0+\theta_1(x^{(i)})$</p><p>$^{minimize}_{θ_0,θ_1}J(θ_0,θ_1)$既是我们所想达到的目的</p><h3 id="梯度下降算法"><a href="#梯度下降算法" class="headerlink" title="梯度下降算法"></a>梯度下降算法</h3><script type="math/tex; mode=display">\theta_j := \theta_j-\alpha \frac{\partial}{\partial \theta_j}J(θ_0,θ_1)\qquad(for\;i = 0\;and\;j =1)</script><p>注：$\alpha$为一个数字，代表学习效率；如果太大，会导致结果不准确甚至无法收敛；如果太小，会导致算法效率低下。  </p><p><font color="red">注意：$\theta_0:=\theta_0 , \theta_1:=\theta_1$应该同时更新</font>  也就是：<br>&emsp;&emsp;$temp0 = \theta_0 -\alpha \frac{\partial}{\partial \theta_0}J(θ_0,θ_1)$<br>&emsp;&emsp;$temp1 = \theta_1 -\alpha \frac{\partial}{\partial \theta_1}J(θ_0,θ_1)$<br>&emsp;&emsp;$\theta_0:=temp0$<br>&emsp;&emsp;$\theta_1:=temp1$</p><p>对上述化简计算可得梯度下降算法  :  </p><script type="math/tex; mode=display">\theta_0:=\theta_0-\alpha\frac{1}{m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})</script><script type="math/tex; mode=display">\theta_1:=\theta_1-\alpha\frac{1}{m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})x^{(i)}</script><h4 id="梯度下降，随机梯度下降和批量梯度下降以及小批量梯度下降的联系与区别。"><a href="#梯度下降，随机梯度下降和批量梯度下降以及小批量梯度下降的联系与区别。" class="headerlink" title="梯度下降，随机梯度下降和批量梯度下降以及小批量梯度下降的联系与区别。"></a>梯度下降，随机梯度下降和批量梯度下降以及小批量梯度下降的联系与区别。</h4><p>&emsp;&emsp;</p><ol><li>批量梯度下降：<br>&emsp;&emsp;使误差函数尽可能的小，每次迭代需要整个样本来对参数进行更新，当样本数目变大时，训练速度回逐渐变慢</li><li>随机梯度下降：<br>&emsp;&emsp;不同于批量梯度下降，随机梯度下降是每次迭代使用一个样本来对参数进行更新。使得训练速度加快，但是准确度会降低</li><li><p>小批量梯度下降：<br>&emsp;&emsp;是对批量梯度下降以及随机梯度下降的一个折中办法。其思想是：每次迭代 使用batch_size个样本来对参数进行更新。  </p><blockquote><p>batcha_size的选择带来的影响：  </p><ol><li>在合理地范围内，增大batch_size的好处：<br>a. 内存利用率提高了，大矩阵乘法的并行化效率提高。<br>b. 跑完一次 epoch（全数据集）所需的迭代次数减少，对于相同数据量的处理速度进一步加快。<br>c. 在一定范围内，一般来说 Batch_Size 越大，其确定的下降方向越准，引起训练震荡越小。  </li><li>盲目增大batch_size的坏处：<br>a. 内存利用率提高了，但是内存容量可能撑不住了。<br>b. 跑完一次 epoch（全数据集）所需的迭代次数减少，要想达到相同的精度，其所花费的时间大大增加了，从而对参数的修正也就显得更加缓慢。<br>c. Batch_Size 增大到一定程度，其确定的下降方向已经基&gt;本不再变化。  </li></ol></blockquote></li></ol>]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Machine Learning </tag>
            
            <tag> AI </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机器学习（一）---初识</title>
      <link href="/2018/10/15/theory/algorithm/machinelearning/machinelearning-1/"/>
      <url>/2018/10/15/theory/algorithm/machinelearning/machinelearning-1/</url>
      <content type="html"><![CDATA[<h3 id="什么是机器学习？"><a href="#什么是机器学习？" class="headerlink" title="什么是机器学习？"></a>什么是机器学习？</h3><ol><li>在没有明确设置的情况下，使得计算机具有学习能力的研究领域。 <div style="text-align:right">----Arthur Samuel&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</div></li><li>一个程序被认为能从经验E中学习，解决任务T，达到性能度量值P，当且仅当，有了经验E，经过P评判，程序在处理T时的性能有所提升。 <div style="text-align:right">----Tom Mitchell&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</div></li></ol><h3 id="什么是监督学习？"><a href="#什么是监督学习？" class="headerlink" title="什么是监督学习？"></a>什么是监督学习？</h3><p>&emsp;&emsp;给算法一个数据集，该数据集内包含有正确的答案，让算法给出更多的准确答案。 </p><h4 id="属性（特征）"><a href="#属性（特征）" class="headerlink" title="属性（特征）"></a>属性（特征）</h4><p>&emsp;&emsp;一般来说，一个学习问题通常会考虑一系列 n 个 样本 数据，然后尝试预测未知数据的属性。 如果每个样本是 多个属性的数据 （比如说是一个多维记录），就说它有许多“属性”，或称 features(特征) 。</p><h4 id="回归问题"><a href="#回归问题" class="headerlink" title="回归问题"></a>回归问题</h4><p>&emsp;&emsp;回归指的是，我们在试着推测出一系列的连续值属性。<br>&emsp;&emsp;回归问题的一个例子是预测鲑鱼的长度是其年龄和体重的函数。</p><h4 id="分类问题"><a href="#分类问题" class="headerlink" title="分类问题"></a>分类问题</h4><p>&emsp;&emsp;分类指的是，样本属于两个或更多个类，我们想从已经标记的数据中学习如何预测未标记数据的类别。<br>&emsp;&emsp;分类问题的一个例子是手写数字识别，其目的是将每个输入向量分配给有限数目的离散类别之一。 我们通常把分类视作监督学习的一个离散形式（区别于连续形式），从有限的类别中，给每个样本贴上正确的标签。</p><h3 id="什么是无监督学习？"><a href="#什么是无监督学习？" class="headerlink" title="什么是无监督学习？"></a>什么是无监督学习？</h3><p>&emsp;&emsp;给算法一个数据集，让算法自动的将该数据集分成n类。（与监督学习不同，数据集没有任何的标签：或者有相同的标签；或者没有标签）。<br>&emsp;&emsp; 其中训练数据由没有任何相应目标值的一组输入向量x组成。这种问题的目标可能是在数据中发现彼此类似的示例所聚成的组，这种问题称为 聚类 , 或者，确定输入空间内的数据分布，称为 密度估计 ，又或从高维数据投影数据空间缩小到二维或三维以进行 可视化。</p><h4 id="无监督学习的应用领域"><a href="#无监督学习的应用领域" class="headerlink" title="无监督学习的应用领域"></a>无监督学习的应用领域</h4><p>&emsp;&emsp;社交网络分析、细分市场、天文数据分析、组织大型计算机集群等</p><h3 id="什么是加速比"><a href="#什么是加速比" class="headerlink" title="什么是加速比"></a>什么是加速比</h3><p>&emsp;&emsp;一个程序的串行版本的运行时间和他的并行版本的运行时间的比值。</p><!-- ### 什么是加速效率 -->]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Machine Learning </tag>
            
            <tag> AI </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(五) Feign</title>
      <link href="/2018/10/15/theory/design/using/java/framework/springcloud-5/"/>
      <url>/2018/10/15/theory/design/using/java/framework/springcloud-5/</url>
      <content type="html"><![CDATA[<h2 id="声明式服务调用-：Spring-Cloud-Feign"><a href="#声明式服务调用-：Spring-Cloud-Feign" class="headerlink" title="声明式服务调用 ：Spring Cloud Feign"></a>声明式服务调用 ：Spring Cloud Feign</h2><p>&emsp;&emsp;Spring Cloud Feign基于Netflix Feign实现，整合了Spring Cloud Ribbon和Spring Cloud Hystrix，除此之外，还提供了一种声明式的Web服务端定义方式。</p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol><li><p>引入POM依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR4<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建启动类，并添加EnableFeignClients注释开启Spring Cloud Feign支持</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignconsumerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(FeignconsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写HelloService接口,通过FeignClient注解指定服务名来绑定服务，然后通过SpringMVC注解来绑定具体该服务提供的REST接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"hello-service"</span>)</span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">     <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">     <span class="function">String <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>编写Controller层，调用HelloService接口</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloController</span><span class="params">(HelloService helloService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.helloService = helloService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/feign-consumer"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloConsumer</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">1401</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">application:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">feign-consumer</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">client:</span></span><br><span class="line">        <span class="attr">serviceUrl:</span></span><br><span class="line">            <span class="attr">defaultZone:</span> <span class="string">http://localhost:1111/eureka/</span></span><br></pre></td></tr></table></figure></li><li><p>通过浏览<a href="http://localhost:1111/" target="_blank" rel="noopener">http://localhost:1111/</a>可以查看注册中心新增了feign-consumer,通过访问<a href="http://localhost:1401/feign-consumer" target="_blank" rel="noopener">http://localhost:1401/feign-consumer</a>查看结果</p></li></ol><h3 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h3><p>&emsp;&emsp;与SpringMVC不同，FeignClient中绑定参数必须通过value属性指定具体的参数名，不然会抛出IllegalStateException异常，value属性不能为空。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"hello-service"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function">String <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello1"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">hello</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello2"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">User <span class="title">hello</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name, @<span class="title">RequestParam</span><span class="params">(<span class="string">"age"</span>)</span> Integer age)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello3"</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function">String <span class="title">hello</span><span class="params">(@RequestBody User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继承特性"><a href="#继承特性" class="headerlink" title="继承特性"></a>继承特性</h3><p>&emsp;&emsp;可以将项目中的几个子系统的共同部分抽象出来作为一个子项目，在maven中使用依赖减少代码量，但是同时会导致项目耦合度增加，需要严格按照面向对象的开闭原则，，否则可能出现牵一发而动全身的后果，增加不必要的维护工作量。</p><h3 id="Ribbon配置"><a href="#Ribbon配置" class="headerlink" title="Ribbon配置"></a>Ribbon配置</h3><p>&emsp;&emsp;Spring Cloud Feign的客户端负载均衡是通过Spring Cloud Ribbon实现的，因此可以通过直接配置Ribbon客户端来实现自定义各个服务端调用的参数。</p><h4 id="Ribbon全局配置"><a href="#Ribbon全局配置" class="headerlink" title="Ribbon全局配置"></a>Ribbon全局配置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">    <span class="attr">ConnectTimeout:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">ReadTimeout:</span> <span class="number">500</span></span><br></pre></td></tr></table></figure><h4 id="指定服务配置"><a href="#指定服务配置" class="headerlink" title="指定服务配置"></a>指定服务配置</h4><p>&emsp;&emsp;在使用Spring Cloud Feign的时候，针对各个服务客户端进行个性化配置的方式和Ribbon一致，都是\<client>.ribbon.key=value,client是@FeignClient(value=”value”)中的value设置值。在我们使用@FeignClient(value=”value”)的同时创建了一个名为value的Ribbon客户端。</client></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">hello-service:</span>   <span class="comment">#对value为hello-service的客户端进行设置</span></span><br><span class="line">    <span class="attr">ribbon:</span></span><br><span class="line">        <span class="attr">ReadTimeout:</span> <span class="number">2000</span></span><br><span class="line">        <span class="attr">OkToRetryOnAllOperation:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">MaxAutoRetriesNextServer:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">MaxAutoRetries:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="重试机制"><a href="#重试机制" class="headerlink" title="重试机制"></a>重试机制</h3><p>&emsp;&emsp;在Spring Cloud Feign中，默认实现了请求的重试机制，上面的配置中我们已经做了相应配置</p><h3 id="Hystrix设置"><a href="#Hystrix设置" class="headerlink" title="Hystrix设置"></a>Hystrix设置</h3><p>&emsp;&emsp;默认情况下，Spring Cloud Feign会将所有Feign客户端的方法都封装到Hystrix命令中进行服务保护。</p><h4 id="Hystrix全局配置"><a href="#Hystrix全局配置" class="headerlink" title="Hystrix全局配置"></a>Hystrix全局配置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">    <span class="comment">#      execution:</span></span><br><span class="line">    <span class="comment">#        timeout:</span></span><br><span class="line">    <span class="comment">#          enabled: false #关闭熔断功能</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">            <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">5000</span></span><br><span class="line"><span class="comment">#feign:</span></span><br><span class="line"><span class="comment">#  hystrix:</span></span><br><span class="line"><span class="comment">#    enabled: false   #关闭Feign对Hystrix的支持</span></span><br></pre></td></tr></table></figure><h4 id="某个客户端关闭Hystrix"><a href="#某个客户端关闭Hystrix" class="headerlink" title="某个客户端关闭Hystrix"></a>某个客户端关闭Hystrix</h4><p>&emsp;&emsp;需要通过使用@Scope(“properte”)注解为指定的客户端配置Feign.Builder实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//配置类 DisableHystrixConfig.java</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DisableHystrixConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Scope</span>(<span class="string">"prototype"</span>)</span><br><span class="line">    <span class="keyword">public</span> Feign.<span class="function">Builder <span class="title">feignBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Feign.builder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对某个服务关闭Hystrix</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"hello-service"</span>,configuration = DisableHystrixConfig<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(四) Hystrix</title>
      <link href="/2018/10/13/theory/design/using/java/framework/springcloud-4/"/>
      <url>/2018/10/13/theory/design/using/java/framework/springcloud-4/</url>
      <content type="html"><![CDATA[<h2 id="服务容错保护：-Spring-Cloud-Hystrix"><a href="#服务容错保护：-Spring-Cloud-Hystrix" class="headerlink" title="服务容错保护： Spring Cloud Hystrix"></a>服务容错保护： Spring Cloud Hystrix</h2><p>&emsp;&emsp;在微服务架构中，我们将系统拆分为很多服务单元，因为各单元的应用间通过服务注册与订阅的方式相互依赖，并且各单元运行在不同的进程中，因此有可能因为网络原因或者自己问题出现调用服务故障或者延迟。随着服务数量的增加，故障亦随之累加，最后导致自身服务的瘫痪。为了解决这种问题，出现了断路器等一系列的保护机制。而Spring Cloud Hystrix就实现了断路器、线程隔离等一系列系统保护功能，为系统的延迟和故障提供更加强大的容错能力。</p><h3 id="实现容错保护"><a href="#实现容错保护" class="headerlink" title="实现容错保护"></a>实现容错保护</h3><ol><li><p>引入POM依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Hystrix依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改java类</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//启动类 RibbonconsumerApplication.java</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span>   <span class="comment">//开启服务发现功能</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span>  <span class="comment">//开启断路器功能</span></span><br><span class="line"><span class="comment">//@SpringCloudApplication //该注释包含了以上三个注释（一个SpringCloud标准应用包含服务发现以及断路器）</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonconsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(RibbonconsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Service层 service/impl/HelloServiceImpl.java</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloServiceImpl</span><span class="params">(RestTemplate restTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.restTemplate = restTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod = <span class="string">"helloFallback"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://hello-service/hello"</span>, String<span class="class">.<span class="keyword">class</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloFallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Controller controller/ConsumerController.java</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ConsumerController</span><span class="params">(RestTemplate restTemplate, HelloService helloService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.restTemplate = restTemplate;</span><br><span class="line">        <span class="keyword">this</span>.helloService = helloService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/ribbon-consumer"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloConsumer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://hello-service/hello"</span>, String<span class="class">.<span class="keyword">class</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/ribbon-consumer-hello-service"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloConsumerByHelloService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.helloService();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(三) Ribbon</title>
      <link href="/2018/10/12/theory/design/using/java/framework/springcloud-3/"/>
      <url>/2018/10/12/theory/design/using/java/framework/springcloud-3/</url>
      <content type="html"><![CDATA[<h2 id="客户端负载均衡：-Spring-Cloud-Ribbon"><a href="#客户端负载均衡：-Spring-Cloud-Ribbon" class="headerlink" title="客户端负载均衡： Spring Cloud Ribbon"></a>客户端负载均衡： Spring Cloud Ribbon</h2><p>&emsp;&emsp;Spring Cloud Ribbon是一个基于HTTP和TCP的客户端负载均衡工具，它基于Hetflix Ribbon实现。</p><h3 id="客户端负载均衡"><a href="#客户端负载均衡" class="headerlink" title="客户端负载均衡"></a>客户端负载均衡</h3><p>&emsp;&emsp;负载均衡是对一个系统的高可用、网络压力的缓解、和处理能力扩容的重要手段之一。通常说的负载均衡都指的是服务端负载均衡，主要分为软件负载均衡和硬件负载均衡。硬件负载均衡主要通过在服务器节点之间安装专门用于负载均衡的设备，比如F5。而软件负载均衡则是通过在服务器中安装一些具有负载均衡功能或者模块的软件来完成请求分发工作，比如Nginx。服务端负载均衡都是维护一个下挂可用的服务器清单，通过某种算法（轮询、按照权重、按照流量等）从可用的服务器清单中取出一台服务器的地址，然后进行转发。客户端负载均衡不同与服务端负载均衡的是所有的客户端都要维护自己要访问的服务器清单，这些清单都来自于注册中心。</p><h4 id="Spring-Cloud-Ribbon使用客户端负载均衡"><a href="#Spring-Cloud-Ribbon使用客户端负载均衡" class="headerlink" title="Spring Cloud Ribbon使用客户端负载均衡"></a>Spring Cloud Ribbon使用客户端负载均衡</h4><ol><li>服务提供者只需要启动多个服务实例并注册一个注册中心或者多个相关联的服务注册中心</li><li>服务注册者直接通过调用被@LoadBalanced注解修饰过的RestTemplate来实现面向服务的接口调用。</li></ol><h4 id="RestTemplate详解"><a href="#RestTemplate详解" class="headerlink" title="RestTemplate详解"></a>RestTemplate详解</h4><h5 id="GET请求（2种方法）"><a href="#GET请求（2种方法）" class="headerlink" title="GET请求（2种方法）"></a>GET请求（2种方法）</h5><h6 id="getForEntity函数"><a href="#getForEntity函数" class="headerlink" title="getForEntity函数"></a>getForEntity函数</h6><p>&emsp;&emsp;该方法返回ResponseEntity（Spring对HTTP请求相应的封装）</p><ol><li><p>getForEntity(String url, Class<t> responseType, Object… uriVariables)<br> url : 请求的地址<br> responseType : 请求响应体body的包装类型<br> uriVariables : url中的参数绑定，数组内容替代{1}这样的占位符。<br> 例：</t></p> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getForEntity("http://USER-SERVICE/user?name=&#123;1&#125;",String.class,"didi");</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(String url, Class<t> responseType, Map<string, ?> uriVariables)<br> 与1中只有uriVariables不同，替代的是制定参数的{key}这样的占位符。<br> 例:</string,></t></p> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getForEntity("http://USER-SERVICE/user?name=&#123;name&#125;",String.class,new HashMap&lt;&gt;().put("name","peter"));</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(URI url, Class<t> responseType)<br> 使用URI（统一资源标识符）来代替url</t></p></li></ol><h6 id="getForObject函数"><a href="#getForObject函数" class="headerlink" title="getForObject函数"></a>getForObject函数</h6><p>&emsp;&emsp;可以认为是getForEntity的进一步封装，通过HttpMessageConverterExtractor对HTTP的请求响应体进行对象转换。</p><ol><li>getForObject(String url, Class<t> responseType, Object… uriVariables)</t></li><li>getForObject(String url, Class<t> responseType, Map<string, ?> uriVariables)</string,></t></li><li>getForObject(URI url, Class<t> responseType)</t></li></ol><h5 id="POST请求（3种方法）"><a href="#POST请求（3种方法）" class="headerlink" title="POST请求（3种方法）"></a>POST请求（3种方法）</h5><h6 id="posrFotEntity函数"><a href="#posrFotEntity函数" class="headerlink" title="posrFotEntity函数"></a>posrFotEntity函数</h6><p>&emsp;&emsp;绝大部分和getForEntity用法相同  </p><ol><li>postForEntity(String url, Object request, Class<t> responseType, Object… uriVariables)<br>request : 可以是一个普通对象（REstTemlate会将其转化成一个HttpEntity来处理，类型为Object，request的内容被视为body内容），也可以是一个HttpEntity对象（完整的Http请求，包含body和header）</t></li><li>postForEntity(String url, Object request, Class<t> responseType, Map<string, ?> uriVariables)</string,></t></li><li>postForEntity(URI url, Object request, Class<t> responseType)</t></li></ol><h6 id="postForObject函数"><a href="#postForObject函数" class="headerlink" title="postForObject函数"></a>postForObject函数</h6><p>&emsp;&emsp;与getForObject类似</p><h6 id="postForLocation函数"><a href="#postForLocation函数" class="headerlink" title="postForLocation函数"></a>postForLocation函数</h6><p>&emsp;&emsp;以POST方式提交资源，并返回新资源的URI。因为返回新资源的URI，因此不需要指定responseType。</p><ol><li>postForLocation(String url, Object request, Object… uriVariables)</li><li>postForLocation(String url, Object request, Map<string, ?> uriVariables)</string,></li><li>postForLocation(URI url, Object request)</li></ol><h5 id="PUT请求"><a href="#PUT请求" class="headerlink" title="PUT请求"></a>PUT请求</h5><h6 id="put函数"><a href="#put函数" class="headerlink" title="put函数"></a>put函数</h6><p>&emsp;&emsp;put方法无返回值，因此也就没有responseType，其他与postForObject类似</p><ol><li>put(String url, Object request, Object… uriVariables)</li><li>put(String url, Object request, Map<string, ?> uriVariables)</string,></li><li>put(URI url, Object request)</li></ol><h5 id="DELETE请求"><a href="#DELETE请求" class="headerlink" title="DELETE请求"></a>DELETE请求</h5><h6 id="delete函数"><a href="#delete函数" class="headerlink" title="delete函数"></a>delete函数</h6><p>&emsp;&emsp;通常使用唯一标识，因此无需request的body信息。</p><ol><li>delete(String url, Object… uriVariables)</li><li>delete(String url, Map<string, ?> uriVariables)</string,></li><li>delete(URI url)</li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(二) Eureka</title>
      <link href="/2018/10/11/theory/design/using/java/framework/springcloud-2/"/>
      <url>/2018/10/11/theory/design/using/java/framework/springcloud-2/</url>
      <content type="html"><![CDATA[<h2 id="服务治理：Spring-Cloud-Eureka"><a href="#服务治理：Spring-Cloud-Eureka" class="headerlink" title="服务治理：Spring Cloud Eureka"></a>服务治理：Spring Cloud Eureka</h2><p>&emsp;&emsp;Spring Cloud Eureka是Spring Cloud Netflix的一部分，它是基于Netflix Eureka 做了二次的封装，主要完成微服务的服务治理功能。</p><h3 id="服务治理"><a href="#服务治理" class="headerlink" title="服务治理"></a>服务治理</h3><p>&emsp;&emsp;服务治理可以说是微服务架构中的最核心和最基础的模块，它主要用来实现各个微服务实例的自动化注册和发现。</p><h4 id="为什么需要服务治理"><a href="#为什么需要服务治理" class="headerlink" title="为什么需要服务治理"></a>为什么需要服务治理</h4><p>&emsp;&emsp;随着业务的发展，系统功能越来越复杂，相应的微服务不断增加，使用静态配置的话，就会变得越来越难以维护，并且面对不断发展业务，群集规模、服务位置、服务命名规则可能发生变化。</p><h5 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h5><p>&emsp;&emsp;在服务治理治理框架中，通常都会构建一个注册中心，每个服务单元向注册中心登记自己提供的服务，将主机与端口号、版本号、通信协议等一些附加信息告知注册中心，而注册中心形成一种清单来存储这些信息。另外，服务注册中心还需要以心跳的方式来监测清单中的服务是否可用，不可用则需要从清单中剔除。</p><h5 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h5><p>&emsp;&emsp;在服务治理框架下运转，服务间的调用不再通过具体的实例地址来实现，通过向服务名发起请求调用实现。因此，服务调用方在发起调用的时候并不知道服务实例的位置，因此，调用方需要向注册中心发出咨询服务来获取服务实例清单，以实现对具体服务实例的访问。</p><h3 id="Eureka和Ribbon"><a href="#Eureka和Ribbon" class="headerlink" title="Eureka和Ribbon"></a>Eureka和Ribbon</h3><h4 id="Eureka服务端"><a href="#Eureka服务端" class="headerlink" title="Eureka服务端"></a>Eureka服务端</h4><p>&emsp;&emsp;Eureka服务端，亦称之为服务注册中心，同其他服务注册中心一样，支持高可用配置。它依托于强一致性提供良好的服务实例可用性，可以应对多种不同的故障场景。</p><h5 id="搭建服务注册中心"><a href="#搭建服务注册中心" class="headerlink" title="搭建服务注册中心"></a>搭建服务注册中心</h5><ol><li><p>创建SprinBoot工程（略），在此，我命名为eurekaserver，添加maven依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR4<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过注解EnableEurekaServer启动一个注册服务中心提供给其他应用进行对话</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaServerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>默认配置下，该注册服务中心会将自己作为客户端来尝试注册他自己，通过配置application.yml/application.properties来增加配置来禁用它的客户端注册行为。</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">1111</span>    <span class="comment">#在同一个服务器下进行学习测试，需要修改端口</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">instance:</span></span><br><span class="line">        <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>   <span class="comment">#设置为false，不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#注册中心的职责是维护服务实例，因此不需要去检索服务</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">        <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure></li><li><p>通过浏览<a href="http://localhost:1111/" target="_blank" rel="noopener">http://localhost:1111/</a>可以查看注册中心的控制台信息</p></li></ol><h5 id="高可用注册中心"><a href="#高可用注册中心" class="headerlink" title="高可用注册中心"></a>高可用注册中心</h5><p>&emsp;&emsp;在微服务架构的分布式环境中，我们需要充分考虑发生故障的情况，所以在生产中我们需要进行高可用部署。对于服务中心，亦是如此。<br>&emsp;&emsp;Eureka Server设计之初就好率了高可用的问题，在Eureka的服务治理设计中，所有节点既是服务提供方，也是服务消费方，Eureka Server的高可用实际上就是将自己做为服务向其他注册中心注册自己 ，形成一组互相注册的服务注册中心，实现服务清单的互相同步，实现高可用的效果。</p><ol><li><p>在以前搭建注册中心的基础上，添加application-peer1.yml和application-peer2.yml</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##### application-peer1.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">1111</span>    <span class="comment">#在同一个服务器下进行学习测试，需要修改端口</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">peer1</span></span><br><span class="line"><span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>   <span class="comment">#设置为false，不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#注册中心的职责是维护服务实例，因此不需要去检索服务</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">    <span class="attr">defaultZone:</span> <span class="string">http://peer2:1112/eureka/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### application-peer2.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">1112</span>    <span class="comment">#在同一个服务器下进行学习测试，需要修改端口</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">peer2</span></span><br><span class="line"><span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>   <span class="comment">#设置为false，不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#注册中心的职责是维护服务实例，因此不需要去检索服务</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">    <span class="attr">defaultZone:</span> <span class="string">http://peer1:1111/eureka/</span></span><br></pre></td></tr></table></figure></li><li><p>因为在同一台服务器下操作，需要在hosts文件中添加peer1和peer2的转换，修改/etc/hosts,新增以下内容</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span> peer1</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span> peer2</span><br></pre></td></tr></table></figure></li><li><p>通过spring.profiles.active属性分别启动peer1和peer2，启动指令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar eurekserver-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer2</span><br><span class="line">java -jar eurekserver-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer1</span><br></pre></td></tr></table></figure></li></ol><h4 id="Eureka客户端"><a href="#Eureka客户端" class="headerlink" title="Eureka客户端"></a>Eureka客户端</h4><p>&emsp;&emsp;Eureka客户端，主要处理服务的注册与发现，Eureka客户端向注册中心注册自身提供的服务并周期性地发送心跳来更新它的租服务租约，同时，他也能从服务段查询当前注册的服务信息并把它们缓存到本地并周期性地刷新服务状态。</p><h5 id="注册服务提供"><a href="#注册服务提供" class="headerlink" title="注册服务提供"></a>注册服务提供</h5><ol><li><p>创建SprinBoot工程（略），在此，我命名为eurekaclient，添加maven依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR4<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写/hello请求处理接口，在日志中打印出服务相关</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Log</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient client;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> Registration registration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//getLocalServiceInstance 方法已经过时，可以采用下边的testBalance</span></span><br><span class="line">        ServiceInstance instance = client.getLocalServiceInstance();</span><br><span class="line">        log.info(</span><br><span class="line">                <span class="string">"/test, host:"</span> + instance.getHost() + <span class="string">", service_id:"</span> + instance.getServiceId() );</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"From Service-A"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/testBalance"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testBalance</span><span class="params">(@RequestParam String param)</span> </span>&#123;</span><br><span class="line">        ServiceInstance instance = serviceInstance();</span><br><span class="line">        String result = <span class="string">"/testBalance, host:port="</span> + instance.getUri()  + <span class="string">", "</span></span><br><span class="line">                + <span class="string">"service_id:"</span> + instance.getServiceId();</span><br><span class="line">        log.info(result);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"From Service-A , "</span> + result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceInstance <span class="title">serviceInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;ServiceInstance&gt; list = client.getInstances(registration.getServiceId());</span><br><span class="line">        <span class="keyword">if</span> (list != <span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(ServiceInstance itm : list)&#123;</span><br><span class="line">                <span class="keyword">if</span> (itm.getPort() == <span class="number">2001</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> itm;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在启动类上添加EnableDiscoveryClient注释，激活Eureka中的DiscoveryClient实现</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaclientApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaclientApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">1211</span> <span class="comment">#因为在同一台服务器下学习测试，需要修改端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">application:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">hello-service</span> <span class="comment">#为服务命名</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">    <span class="attr">client:</span></span><br><span class="line">        <span class="attr">serviceUrl:</span></span><br><span class="line">            <span class="attr">defaultZone:</span> <span class="string">http://localhost:1111/eureka/</span> <span class="comment"># 指定注册中心的地址</span></span><br></pre></td></tr></table></figure></li><li><p>通过浏览<a href="http://localhost:1111/" target="_blank" rel="noopener">http://localhost:1111/</a>可以查看注册中心中有hello-service，在注册中心的日志中可以发现</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018-10-12 04:07:43.379  INFO 11069 --- [nio-1111-exec-5] c.n.e.registry.AbstractInstanceRegistry  : Registered instance HELLO-SERVICE/bogon:hello-service:1211 with status UP (replication=<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p> 访问<a href="http://localhost:1211/hello" target="_blank" rel="noopener">http://localhost:1211/hello</a>之后，可以在控制台中发现以下日志信息</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018-10-12 04:19:53.087  INFO 11306 --- [nio-1211-exec-1] x.z.e.controller.HelloController         : /<span class="built_in">test</span>, host:bogon, service_id:hello-service</span><br></pre></td></tr></table></figure></li></ol><h5 id="服务发现与消费"><a href="#服务发现与消费" class="headerlink" title="服务发现与消费"></a>服务发现与消费</h5><p>&emsp;&emsp;服务消费者，主要完成发现服务以及服务消费。其中，发现服务由Eureka客户端完成，而服务消费则由Ribbon完成。</p><h6 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h6><p>&emsp;&emsp;Ribbon是一个基于HTTP和TCP的客户端负载均衡器，它可以通过客户端中配置的ribbonServerList服务端列表去轮询访问以达到负载均衡的作用；当Ribbon和Eureka联合使用，Ribbon的服务清单RibbonServerList会被DiscoveryEnableNIWSServerList重写，扩展成从Eureka注册中心来获取服务列表，同时，它也会用NIWSDiscoveryPing来代替IPing，将职责委托给Eureka来确定服务端是否已经启动。</p><h6 id="服务发现与服务消费示例"><a href="#服务发现与服务消费示例" class="headerlink" title="服务发现与服务消费示例"></a>服务发现与服务消费示例</h6><ol><li><p>启动之前的服务注册中心，启动两个hello-service</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动注册服务中心</span></span><br><span class="line">nohup java -jar /opt/eureka-server/eurekserver-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer1 &gt; /opt/<span class="built_in">log</span>/out-eureka-server-peer1.log &amp;</span><br><span class="line">nohup java -jar /opt/eureka-server/eurekserver-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer2 &gt; /opt/<span class="built_in">log</span>/out-eureka-server-peer2.log &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动两个hello-service</span></span><br><span class="line">nohup java -jar eurekaclient-0.0.1-SNAPSHOT.jar --server.port=1201 &gt; /opt/<span class="built_in">log</span>/out-eureka-client-1201.log &amp;</span><br><span class="line">nohup java -jar eurekaclient-0.0.1-SNAPSHOT.jar --server.port=1202 &gt; /opt/<span class="built_in">log</span>/out-eureka-client-1202.log &amp;</span><br></pre></td></tr></table></figure></li><li><p>创建SprinBoot工程（略），取名为sibbon-consumer，并引入以下依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Edgware.SR4<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在启动类上添加EnableDiscoveryClient注释，启动服务发现功能，编写配置类开启客户端负载均衡,编写controller实现ribbon-consumer接口</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//项目启动类 RibbonconsumerApplication.java</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonconsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(RibbonconsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置类 config/LoadBalanceConfig.java</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadBalanceConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span> <span class="comment">//开启客户端负载均衡</span></span><br><span class="line">    <span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现ribbon-consumer接口的 controller/ConsumerController.java</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/ribbon-comsumer"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloConsumer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://HELLO-SERVICE/hello"</span>, String<span class="class">.<span class="keyword">class</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">1301</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ribbon-consumer</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">    <span class="attr">defaultZone:</span> <span class="string">http://localhost:1111/eureka/</span></span><br></pre></td></tr></table></figure></li><li><p>启动项目，查看<a href="http://localhost:1301/ribbon-consumer" target="_blank" rel="noopener">http://localhost:1301/ribbon-consumer</a>,通过两个hello-service的日志可以看到确实是轮询实现的负载均衡</p></li></ol><h2 id="项目代码地址"><a href="#项目代码地址" class="headerlink" title="项目代码地址"></a>项目代码地址</h2><p><a href="https://github.com/ice1995/springcloudstudy" target="_blank" rel="noopener">Github</a></p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Cloud(一) 简介</title>
      <link href="/2018/10/11/theory/design/using/java/framework/springcloud-1/"/>
      <url>/2018/10/11/theory/design/using/java/framework/springcloud-1/</url>
      <content type="html"><![CDATA[<h4 id="Spring-Cloud简介"><a href="#Spring-Cloud简介" class="headerlink" title="Spring Cloud简介"></a>Spring Cloud简介</h4><ol><li><p>什么是微服务（Microservice）</p><p> &emsp;&emsp;微服务英文名称Microservice，Microservice架构模式就是将整个Web应用组织为一系列小的Web服务。这些小的Web服务可以独立地编译及部署，并通过各自暴露的API接口相互通讯。它们彼此相互协作，作为一个整体为用户提供功能，却可以独立地进行扩展。由于有了轻量级的通信协作基础，所以这个微服务可以通过不同的语言进行开发编写。<br> &emsp;&emsp;目前主流的微服务框架：Dubbo、 Spring Cloud、thrift、Hessian等。</p></li><li><p>微服务框架适合的场景  </p><ol><li>我们把整个系统根据业务拆分成几个子系统。  </li><li>每个子系统可以部署多个应用，多个应用之间使用负载均衡。  </li><li>需要一个服务注册中心，所有的服务都在注册中心注册，负载均衡也是通过在注册中心注册的服务来使用一定策略来实现。  </li><li>所有的客户端都通过同一个网关地址访问后台的服务，通过路由配置，网关来判断一个URL请求由哪个服务处理。请求转发到服务上的时候也使用负载均衡。  </li><li>服务之间有时候也需要相互访问。例如有一个用户模块，其他服务在处理一些业务的时候，要获取用户服务的用户数据。  </li><li>需要一个断路器，及时处理服务调用时的超时和错误，防止由于其中一个服务的问题而导致整体系统的瘫痪。  </li><li>还需要一个监控功能，监控每个服务调用花费的时间等。</li></ol></li></ol><h4 id="初探Spring-Cloud"><a href="#初探Spring-Cloud" class="headerlink" title="初探Spring Cloud"></a>初探Spring Cloud</h4><p>&emsp;&emsp;Spring Cloud是一个基于Spring Boot实现的微服务架构开发工具，为微服务架构中的配置管理、服务治理、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理等操作提供了一种简单的开发方式。<br>&emsp;&emsp;Spring Cloud包含多个子项目：</p><ol><li>Spring Cloud Config 配置管理工具，支持使用git存储配置内容，并支持客户端配置信息刷新、加密/解密配置内容等。</li><li>Spring Cloud Netflix 核心组件，对多个Netflix进行整合。<ol><li>Eureka 服务治理组件，包含服务注册中心、服务注册与发现机制的实现</li><li>Hystrix 容错管理组件，实现断路器模式，帮助服务依赖中出现的延迟启动和为故障提供强大的容错能力。</li><li>Ribbon 客户端负载均衡的服务调用组件</li><li>Feign 基于 Ribbon和Hystrix的声明式服务调用组件</li><li>Zuul 网关组件，提供智能路由、过滤访问等功能</li><li>Archaius 外部化配置组件</li></ol></li><li>Spring Cloud Bus 事件、消息总线，用于传播集群中的状态变化或者事件，以触发后续的处理，比如来动态刷新配置</li><li>Spring Cloud Cluster 针对ZooKeeper、Redis、Hazelacst、Consul的选举算法和通用状态模式的实现</li><li>Spring Cloud Cloudfoundry 与Pivotal Cloudfoundry的整合支持</li><li>Spring Cloud Consul 服务发现与配置管理工具</li><li>Spring Cloud Stream 通过Redis、Rabbit或者Kafka实现的消费微服务，可以通过简单的声明式模型来发送和接受消息。</li><li>Spring Cloud AWS 简化整合aws的组件</li><li>Spring Cloud Security 安全工具包，提供Zuul代理中对于OAuth2客户端请求中的中继器</li><li>Spring Cloud Sleuth Spring Cloud应用的分布式跟踪实现，可以完美整合ZipKin</li><li>Spring Cloud ZooKeeper 基于ZooKeeper的服务发现与配置管理组件</li><li>Spring Cloud Starters Spring Cloud的基础组件，基于Spring Boot风格项目的基础依赖模块</li><li>Spring Cloud CLI 用于Groovy中快速创建Spring Boot项目的Spring Boot CLI插件</li><li>…</li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> Microservice </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mariadb使用记录</title>
      <link href="/2018/09/29/theory/design/using/db/nosql/mariadb-using/"/>
      <url>/2018/09/29/theory/design/using/db/nosql/mariadb-using/</url>
      <content type="html"><![CDATA[<h4 id="MariaDB简介"><a href="#MariaDB简介" class="headerlink" title="MariaDB简介"></a>MariaDB简介</h4><p>&emsp;&emsp;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。在存储引擎方面，使用XtraDB（英语：XtraDB）来代替MySQL的InnoDB。</p><h4 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h4><p>&emsp;&emsp;记录Mariadb的安装配置过程  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server  <span class="comment">#安装mariadb的客户端与服务端</span></span><br><span class="line">systemctl start mariadb <span class="comment"># 启动mariadb</span></span><br><span class="line">mysql_secure_installation <span class="comment"># 进行初始的设置</span></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span></span><br><span class="line"><span class="comment">#       SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In order to log into MariaDB to secure it, we'll need the current</span></span><br><span class="line"><span class="comment"># password for the root user.  If you've just installed MariaDB, and</span></span><br><span class="line"><span class="comment"># you haven't set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="comment"># so you should just press enter here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enter current password for root (enter for none):  #默认无密码登录</span></span><br><span class="line"><span class="comment"># OK, successfully used password, moving on...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Setting the root password ensures that nobody can log into the MariaDB</span></span><br><span class="line"><span class="comment"># root user without the proper authorisation.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set root password? [Y/n] y # 是否设置新的root密码</span></span><br><span class="line"><span class="comment"># New password: </span></span><br><span class="line"><span class="comment"># Re-enter new password: </span></span><br><span class="line"><span class="comment"># Password updated successfully!</span></span><br><span class="line"><span class="comment"># Reloading privilege tables..</span></span><br><span class="line"><span class="comment">#  ... Success!</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># By default, a MariaDB installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="comment"># to log into MariaDB without having to have a user account created for</span></span><br><span class="line"><span class="comment"># them.  This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="comment"># go a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="comment"># production environment.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove anonymous users? [Y/n] Y # 是否删除匿名用户</span></span><br><span class="line"><span class="comment">#  ... Success!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Normally, root should only be allowed to connect from 'localhost'.  This</span></span><br><span class="line"><span class="comment"># ensures that someone cannot guess at the root password from the network.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disallow root login remotely? [Y/n] n # 是否禁止root账户远程登录</span></span><br><span class="line"><span class="comment">#  ... skipping.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># By default, MariaDB comes with a database named 'test' that anyone can</span></span><br><span class="line"><span class="comment"># access.  This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="comment"># before moving into a production environment.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove test database and access to it? [Y/n] n # 是否删除test数据库</span></span><br><span class="line"><span class="comment">#  ... skipping.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reloading the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="comment"># will take effect immediately.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reload privilege tables now? [Y/n] y # 是否重新加载权限表</span></span><br><span class="line"><span class="comment">#  ... Success!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cleaning up...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All done!  If you've completed all of the above steps, your MariaDB</span></span><br><span class="line"><span class="comment"># installation should now be secure.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Thanks for using MariaDB!</span></span><br></pre></td></tr></table></figure><h4 id="远程登录设置"><a href="#远程登录设置" class="headerlink" title="远程登录设置"></a>远程登录设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p  <span class="comment">#登录mysql</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL ON database_name.table_name TO databaseuser@&#39;ip_address&#39; IDENTIFIED BY &#39;password&#39;;</span><br><span class="line">flush privileges; #重新加载权限表</span><br></pre></td></tr></table></figure><ul><li>database_name 你要访问的数据库名称（*代表所有）</li><li>table_name 你要访问的表名（*代表所有）</li><li>databaseuser 新的数据库用户  </li><li>password 设置新的密码（mysql将会对你的设置进行加密再到user表中）  </li><li>ip_address 可访问的ip地址（使用%可以让所有的IP都可以访问）  </li></ul>]]></content>
      
      <categories>
          
          <category> datebase </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> datebase </tag>
            
            <tag> mysql </tag>
            
            <tag> mariadb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Namespace简介</title>
      <link href="/2018/09/28/theory/linux/linux-namespace-interface/"/>
      <url>/2018/09/28/theory/linux/linux-namespace-interface/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;Namespace是将内核的全局资源做封装，使得每个Namespace都有一份独立的资源，因此，不同的进程在各自的namespace内对同一资源的使用不会产生相互干扰。<br>&emsp;&emsp;目前，linux内核总共实现了6中namespace：  </p><ol><li>IPC ： 隔离System V IPC 和POSIX消息队列<br>&emsp;&emsp;IPC：Inter-Process Communication（进程间通信）,IPC namespace针对的是SystemV IPC和Posix消息队列，这些IPC机制都会用到标识符。IPC Namespace 能做到的就是使相同的标识符在两个Namespace中代表不同的消息队列，这样就使得两个Namespace中的进程不能通过IPC进程通信了。</li><li><p>Network ：隔离网络资源<br>&emsp;&emsp;每个Network Namespace都有自己的网络设备、IP地址、路由表、/proc/net目录，端口号等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip nets add new_ns <span class="comment">#创建network namespace</span></span><br><span class="line">ip nets <span class="built_in">exec</span> new_ns ip link list <span class="comment">#使用 ip nets exec可以对特定的network namespace执行网络管理</span></span><br><span class="line">ip nets <span class="built_in">exec</span> new_ns ip link <span class="built_in">set</span> dev lo up <span class="comment">#启用lopopback接口</span></span><br><span class="line">ip nets delete new_ns <span class="comment">#删除namespace</span></span><br></pre></td></tr></table></figure></li><li><p>Mount ： 隔离文件系统挂载点<br>&emsp;&emsp;用来隔离文件系统挂载点，每个进程能看到的文件系统都记录在/proc/$$/mounts里，在创建了一个新的Mount Namespace后，进程系统对文件系统挂载/卸载的动作不会影响到其他Namespace。</p></li><li>PID ： 隔离进程ID<br>&emsp;&emsp;用于隔离进程PID号，这样一来，不同的Namespace中的进程PID号就可以是一样的了</li><li>UTS ： 隔离主机名和域名<br>&emsp;&emsp;因为主机名可以代替IP，因此可以使用主机名在网络上访问某台机器，如果不做隔离，这个机制在容器里就会出问题。</li><li>User ：隔离用户ID和组ID<br>&emsp;&emsp;一个进程在namespace里的用户和组ID与它在host里的ID可以不一样，最有用的地方在于可以在容器内部启用0号用户（root），但是它的特权被限定在容器内，离开容器就只是普通用户权限了</li></ol>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> namespace </tag>
            
            <tag> kernel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Cgroup简介</title>
      <link href="/2018/09/28/theory/linux/linux-cgroup-interface/"/>
      <url>/2018/09/28/theory/linux/linux-cgroup-interface/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;Cgroup,全称Control Group（控制组），用于限制和隔离一组进程对系统资源的调用，即做资源QoS（Quality of Service，服务质量）。<br>&emsp;&emsp;Cgroup的原生接口通过cgroupfs提供，类似于procfs和sysfs，是一种虚拟文件系统。</p><ol><li><p>挂载cgroupfs<br>&emsp;&emsp;此过程一般在启动时由linux发行版做好了。标准挂载点是/sys/fs/cgroup,可以变更。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mount -t cgroup -o cpuset /sys/fs/cgroup/cpuset/</span><br><span class="line"><span class="comment"># mount: cgroup 已经挂载或 /sys/fs/cgroup/cpuset 忙</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/systemd 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/blkio 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/freezer 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/devices 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/perf_event 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/net_cls,net_prio 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/cpuset 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/cpu,cpuacct 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/hugetlb 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/pids 上</span></span><br><span class="line"><span class="comment">#        cgroup 已经挂载到 /sys/fs/cgroup/memory 上</span></span><br></pre></td></tr></table></figure></li><li><p>查看cgroupfs<br>&emsp;&emsp;cpuset开头的子文件都是由cpuset子系统产生的，其他文件则由Cgroup产生。这里的tasks文件记录了这个Cgroup的所有进程，包括线程。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ls /sys/fs/cgroup/cpuset/</span><br><span class="line"><span class="comment"># cgroup.clone_children  cpuset.memory_pressure</span></span><br><span class="line"><span class="comment"># cgroup.event_control   cpuset.memory_pressure_enabled</span></span><br><span class="line"><span class="comment"># cgroup.procs           cpuset.memory_spread_page</span></span><br><span class="line"><span class="comment"># cgroup.sane_behavior   cpuset.memory_spread_slab</span></span><br><span class="line"><span class="comment"># cpuset.cpu_exclusive   cpuset.mems</span></span><br><span class="line"><span class="comment"># cpuset.cpus            cpuset.sched_load_balance</span></span><br><span class="line"><span class="comment"># cpuset.effective_cpus  cpuset.sched_relax_domain_level</span></span><br><span class="line"><span class="comment"># cpuset.effective_mems  notify_on_release</span></span><br><span class="line"><span class="comment"># cpuset.mem_exclusive   release_agent</span></span><br><span class="line"><span class="comment"># cpuset.mem_hardwall    tasks</span></span><br><span class="line"><span class="comment"># cpuset.memory_migrate</span></span><br></pre></td></tr></table></figure></li><li><p>创建Cgroup<br> &emsp;&emsp;通过mkdir创建一个新的目录，也就是常见了一个新的Cgroup</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /sys/fs/cgroup/cpuset/child</span><br></pre></td></tr></table></figure></li><li><p>配置Cgroup</p><p> &emsp;&emsp;配置这个Cgroup的资源配额，通过以下命令，可以先哲这个Cgroup的进程只能在0号cpu上运行，并且只能在0号内存节点分配内存。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 0 &gt; /sys/fs/cgroup/cpuset/child/cpuset.cpus</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /sys/fs/cgroup/cpuset/child/cpuset.mems</span><br></pre></td></tr></table></figure></li><li><p>使能Cgroup</p><p> &emsp;&emsp;通过将进程id写进tasks文件，将整个进程移动到Cgroup中，Cgroup真正起作用了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $$ &gt; /sys/fs/cgroup/cpuset/child/tasks <span class="comment"># $$表示当前进程id</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> kernel </tag>
            
            <tag> cgroup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker使用记录</title>
      <link href="/2018/09/28/theory/design/using/middleware/docker-using/"/>
      <url>/2018/09/28/theory/design/using/middleware/docker-using/</url>
      <content type="html"><![CDATA[<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker</span><br></pre></td></tr></table></figure><h4 id="修改docker下载源为国内源-这里使用的阿里源"><a href="#修改docker下载源为国内源-这里使用的阿里源" class="headerlink" title="修改docker下载源为国内源(这里使用的阿里源)"></a>修改docker下载源为国内源(这里使用的阿里源)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://n9tog3ea.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>其他源：<br><a href="https://registry.docker-cn.com" target="_blank" rel="noopener">Docker 官方中国区 https://registry.docker-cn.com</a><br><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">网易 http://hub-mirror.c.163.com</a><br><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">ustc https://docker.mirrors.ustc.edu.cn</a>  </p><h4 id="Docker镜像使用"><a href="#Docker镜像使用" class="headerlink" title="Docker镜像使用"></a>Docker镜像使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#docekr search software 查找镜像</span></span><br><span class="line">docker search httpd</span><br><span class="line"><span class="comment">#docker pull software 下拉镜像</span></span><br><span class="line">docker pull redis</span><br><span class="line">docker pull mariadb</span><br><span class="line">docekr pull mongo</span><br><span class="line">docker pull cloudesire/activemq</span><br><span class="line">docker pull rabbitmq</span><br><span class="line">docker pull rabbitmq:3-management</span><br><span class="line">docker pull nginx</span><br><span class="line">docker pull tomcat</span><br></pre></td></tr></table></figure><h4 id="docker指令帮助"><a href="#docker指令帮助" class="headerlink" title="docker指令帮助"></a>docker指令帮助</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker --<span class="built_in">help</span></span><br><span class="line"><span class="comment">#docker command --help 查看docker帮助</span></span><br><span class="line">docker start --<span class="built_in">help</span></span><br><span class="line"><span class="comment">#man docker command 查看command的man文档</span></span><br><span class="line">man docker start</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>分赌本问题</title>
      <link href="/2018/09/27/theory/algorithm/points_bookies/"/>
      <url>/2018/09/27/theory/algorithm/points_bookies/</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>&emsp;&emsp;假设A、B两个人赌博，假设每一局中每人获胜的概率是相同的，刚开始下的赌注均是100法郎，并且约定双方谁先获胜3局，谁就拿走所有的赌本，但是中途由于一些原因，不得不终止比赛，此时A胜2局，B胜1局，问此时赌本该怎么分配才均匀？<br>&emsp;&emsp;<font color="red">注意：假设在赛点不会出现平局。</font></p><h4 id="思路解析"><a href="#思路解析" class="headerlink" title="思路解析"></a>思路解析</h4><ol><li>假设继续赌下去，至多两局结束</li><li>若接下来的第四局A胜（1/2），则A获得所有赌注</li><li>若接下来的第四局B胜（1/2），则进行第五局，第五局中，A胜（1/2*1/2=1/4）才能获得所有赌注</li></ol><h4 id="python模拟"><a href="#python模拟" class="headerlink" title="python模拟"></a>python模拟</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">""" @author zhangbohan.dell@gmail.com</span></span><br><span class="line"><span class="string">    @function: 分赌本问题</span></span><br><span class="line"><span class="string">    @create 2018/9/27 11:00"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">:param n 赢钱所需要的局数</span></span><br><span class="line"><span class="string">:param n1 第一个人已经赢得局数</span></span><br><span class="line"><span class="string">:param n2 第二个人已经赢得局数</span></span><br><span class="line"><span class="string">本程序中取n =3,n1 = 2,n2 = 1</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Bookies</span><span class="params">(n, n1, n2)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span> * n - n1 - n2 - <span class="number">1</span>):</span><br><span class="line">        D = random.randint(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> D == <span class="number">1</span>:</span><br><span class="line">            n1 += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            n2 += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n1 == n:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n2 == n:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">10000</span></span><br><span class="line">win = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    <span class="keyword">if</span> Bookies(<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>) == <span class="number">1</span>:</span><br><span class="line">        win += <span class="number">1</span></span><br><span class="line">print(<span class="string">"A获得赢钱的可能为&#123;&#125;"</span>.format(float(win / n)))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> probability theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> probability theory </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>蒙提霍尔三门问题</title>
      <link href="/2018/09/27/theory/algorithm/three-door/"/>
      <url>/2018/09/27/theory/algorithm/three-door/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;蒙提霍尔三门问题亦称蒙提霍尔悖论</p><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>&emsp;&emsp;参赛者会看见三扇关闭了的门，其中一扇的后面有一辆汽车，选中后面有车的那扇门可赢得该汽车，另外两扇门后面则各藏有一只山羊。当参赛者选定了一扇门，但未去开启它的时候，节目主持人开启剩下两扇门的其中一扇，露出其中一只山羊。主持人其后会问参赛者要不要换另一扇仍然关上的门。<br>&emsp;&emsp;<font color="red">问题是</font>：换另一扇门会否增加参赛者赢得汽车的机率？</p><h4 id="思路解析"><a href="#思路解析" class="headerlink" title="思路解析"></a>思路解析</h4><ol><li>三扇门，只有一扇门后有有汽车，其余的为山羊</li><li>汽车事前等可能放置到三扇门中的其中一个</li><li>参赛者等可能选择其中一扇，挑选前不知道门后有什么</li><li>主持人清楚的知道门后有什么</li><li>如果参赛者挑选了一扇有山羊的门，则主持人必须打开另一扇有山羊的门</li><li>如果参赛者挑选了有汽车的门，主持人等可能在另外两扇有山羊的门选择一扇打开</li><li>参赛者会被问保持原先选择还是转而选择另一扇门</li></ol><h4 id="Python模拟以上过程"><a href="#Python模拟以上过程" class="headerlink" title="Python模拟以上过程"></a>Python模拟以上过程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">""" @author zhangbohan.dell@gmail.com</span></span><br><span class="line"><span class="string">    @function: 蒙提霍尔三门问题</span></span><br><span class="line"><span class="string">    @create 2018/9/27 10:09"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MontyHall</span><span class="params">(Dselect, Dchange)</span>:</span></span><br><span class="line">    Dcar = random.randint(<span class="number">1</span>, <span class="number">3</span>)  <span class="comment"># 随机等可能放置汽车</span></span><br><span class="line">    <span class="keyword">if</span> Dcar == Dselect <span class="keyword">and</span> Dchange == <span class="number">0</span>:  <span class="comment"># 一开始选中并且没有改变选择</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> Dcar != Dselect <span class="keyword">and</span> Dchange == <span class="number">0</span>:  <span class="comment"># 一开始没选中也没有改变选择</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> Dcar == Dselect <span class="keyword">and</span> Dchange == <span class="number">1</span>:  <span class="comment"># 一开始选中并且改变选择</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 一开始没选中并且改变选择</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="number">10000</span></span><br><span class="line">win = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    select = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">    win += MontyHall(select, random.randint(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">print(<span class="string">"不确认是够改变选择&#123;&#125;"</span>.format(float(win / n)))</span><br><span class="line"></span><br><span class="line">win = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    select = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">    win += MontyHall(select, <span class="number">0</span>)</span><br><span class="line">print(<span class="string">"确认不改变选择&#123;&#125;"</span>.format(float(win / n)))</span><br><span class="line"></span><br><span class="line">win = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    select = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">    win += MontyHall(select, <span class="number">1</span>)</span><br><span class="line">print(<span class="string">"确认改变选择&#123;&#125;"</span>.format(float(win / n)))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> probability theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> probability theory </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Centos使用记录</title>
      <link href="/2018/09/26/theory/design/using/linux/centos-using/"/>
      <url>/2018/09/26/theory/design/using/linux/centos-using/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;个人喜欢使用CentOS7 系统，本帖记录使用CentOS所使用的过程，安装过程 略  （我习惯采用最小化安装）</p><h4 id="安装图形化界面"><a href="#安装图形化界面" class="headerlink" title="安装图形化界面"></a>安装图形化界面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"GNOME Desktop"</span> <span class="string">"Graphical Administration Tools"</span> <span class="comment">#安装GNOME图形化界面(时间较长，耐心等待)</span></span><br><span class="line">ln -sf /lib/systemd/system/runlevel5.target  /etc/systemd/system/default.target <span class="comment">#设置图形化界面为默认启动选项</span></span><br><span class="line">reboot  <span class="comment"># 重启CentOS</span></span><br></pre></td></tr></table></figure><h4 id="启动网络连接（手动配置网卡信息）"><a href="#启动网络连接（手动配置网卡信息）" class="headerlink" title="启动网络连接（手动配置网卡信息）"></a>启动网络连接（手动配置网卡信息）</h4><p>&emsp;&emsp;安装过程没选择网络或者网卡没有自动连接,或者修改网卡配置（比如修改为固定ip等等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip addr  <span class="comment">#查看你的网卡信息</span></span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ens33 <span class="comment">#打印查看网卡信息</span></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33 <span class="comment">#修改网卡信息如下</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=<span class="keyword">no</span></span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=<span class="keyword">no</span></span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=<span class="keyword">no</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=a6bf4243-<span class="number">3908</span>-<span class="number">4096</span>-a87d-aabc853fffba</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes     #修改的地方，改<span class="keyword">no</span>为yes ，自动启动</span><br></pre></td></tr></table></figure><h4 id="安装网络工具包"><a href="#安装网络工具包" class="headerlink" title="安装网络工具包"></a>安装网络工具包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y net-tools   <span class="comment">#包含ifconfig等命令</span></span><br></pre></td></tr></table></figure><h4 id="修改yum安装源为阿里源"><a href="#修改yum安装源为阿里源" class="headerlink" title="修改yum安装源为阿里源"></a>修改yum安装源为阿里源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak <span class="comment">#备份原有源信息</span></span><br><span class="line"></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo <span class="comment">#下载阿里源到本地</span></span><br><span class="line"></span><br><span class="line">yum makecache <span class="comment">#建立缓存</span></span><br><span class="line"></span><br><span class="line">yum -y update <span class="comment">#对现有安装程序升级</span></span><br></pre></td></tr></table></figure><h4 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ibus ibus-libpinyin</span><br></pre></td></tr></table></figure><p>设置 -&gt; 区域和语言 -&gt; 输入源 -&gt; 新加 -&gt; 汉语（中国） -&gt; 汉语（intelligent Pinyin）</p><h4 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java  <span class="comment">#查找已经安装的jdk</span></span><br><span class="line">rpm -e --nodeps java-1.7.0-openjdk <span class="comment"># 卸载掉</span></span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk <span class="comment"># 卸载掉</span></span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-headless <span class="comment"># 卸载掉</span></span><br><span class="line">rpm -e --nodeps java-1.7.0-openjdk-headless <span class="comment"># 卸载掉</span></span><br><span class="line">rpm -ivh jdk-8u181-linux-x64.rpm <span class="comment"># 安装下载好的rpm</span></span><br><span class="line">vim /etc/profile <span class="comment"># 添加jdk到环境变量如下</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile <span class="comment">#是环境变量有效</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#/etc/<span class="keyword">profile</span> 末尾添加一下内容</span><br><span class="line">#java environment</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.<span class="number">8.0</span>_181-amd64</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/jre/lib/rt.jar:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</span><br></pre></td></tr></table></figure><h4 id="安装hadoop"><a href="#安装hadoop" class="headerlink" title="安装hadoop"></a>安装hadoop</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#已经安装并且配置jdk</span></span><br><span class="line"><span class="built_in">cd</span> /opt/hadoop <span class="comment"># 切换目录</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz <span class="comment">#下载hadoop</span></span><br><span class="line">tar -zxvf hadoop-2.9.0.tar.gz <span class="comment"># 解压</span></span><br><span class="line"><span class="built_in">cd</span> hadoop-2.9.0 <span class="comment"># 进入hadoop目录</span></span><br><span class="line">./bin/hadoop version <span class="comment"># 查看hadoop是否能使用</span></span><br></pre></td></tr></table></figure><h4 id="安装redis以及基础配置"><a href="#安装redis以及基础配置" class="headerlink" title="安装redis以及基础配置"></a>安装redis以及基础配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y <span class="comment"># 下载fedora的epel仓库</span></span><br><span class="line">yum install -y redis  <span class="comment"># 安装redis</span></span><br></pre></td></tr></table></figure><p>redis配置信息</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">file</span>   &gt;&gt;  /etc/redis.<span class="keyword">conf</span></span><br><span class="line">###  添加密码</span><br><span class="line">requirepass yourpassword </span><br><span class="line">### redis远程连接</span><br><span class="line">#bind <span class="number">127.0</span>.<span class="number">0.1</span>   添加注释</span><br><span class="line">protected-<span class="keyword">mode</span> <span class="keyword">no</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CentOS7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> CentOS7 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot-mail</title>
      <link href="/2018/09/20/theory/design/using/java/framework/springboot-mail/"/>
      <url>/2018/09/20/theory/design/using/java/framework/springboot-mail/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;配置springboot发送简易右键</p><h4 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编写service以及实现"><a href="#编写service以及实现" class="headerlink" title="编写service以及实现"></a>编写service以及实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MailService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendSimpleMail</span><span class="params">(String to, String subject, String content)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ServiceImpl</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Log</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title">MailService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;mail.fromMail.addr&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSimpleMail</span><span class="params">(String to, String subject, String content)</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setFrom(from);</span><br><span class="line">        message.setTo(to);</span><br><span class="line">        message.setSubject(subject);</span><br><span class="line">        message.setText(content);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            log.info(<span class="string">"简单邮件已经发送。"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">"发送简单邮件时发生异常！"</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置必要属性设置"><a href="#配置必要属性设置" class="headerlink" title="配置必要属性设置"></a>配置必要属性设置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xzx@qq.com</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line"><span class="attr">mail:</span></span><br><span class="line">  <span class="attr">fromMail:</span></span><br><span class="line">    <span class="attr">addr:</span> <span class="string">xzx@qq.com</span></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= WebsiteApplication<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">WebAppConfiguration</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">MailServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MailService mailServiceImpl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSimpleMail</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        mailServiceImpl.sendSimpleMail(<span class="string">"mir2285@outlook.com"</span>, <span class="string">"test simple mail"</span>, <span class="string">" hello this is simple mail"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python多线程</title>
      <link href="/2018/09/19/theory/design/using/python/basic/python-thread/"/>
      <url>/2018/09/19/theory/design/using/python/basic/python-thread/</url>
      <content type="html"><![CDATA[<h3 id="Python中的多线程"><a href="#Python中的多线程" class="headerlink" title="Python中的多线程"></a><center>Python中的多线程</center></h3><h4 id="GIL全局解释器锁"><a href="#GIL全局解释器锁" class="headerlink" title="GIL全局解释器锁"></a>GIL全局解释器锁</h4><p>&emsp;&emsp;线程的执行权限。Python的进程中只有一个GIL，一个线程需要执行任务，就必须要获取GIL</p><h5 id="emsp-好处"><a href="#emsp-好处" class="headerlink" title="&emsp;好处"></a>&emsp;好处</h5><p>&emsp;&emsp;直接杜绝了多线程下访问内存空间的安全问题</p><h5 id="emsp-缺陷"><a href="#emsp-缺陷" class="headerlink" title="&emsp;缺陷"></a>&emsp;缺陷</h5><p>&emsp;&emsp;Python多线程并非真正多线程，不能充分利用多核cpu的资源，在i/o阻塞时候，解释器会释放GIL</p><h4 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h4><p>&emsp;&emsp;密集I/O任务（网络I/O，磁盘I/O，数据库I/O）使用<br>多线程合适  </p><h5 id="emsp-缺陷-1"><a href="#emsp-缺陷-1" class="headerlink" title="&emsp; 缺陷"></a>&emsp; 缺陷</h5><p>&emsp;&emsp;同一时间切片只能运行一个程序，不能做到高并行，但可以做到高并发</p><h4 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h4><p>&emsp;&emsp;又称微线程，在单线程上执行多个任务，用函数切换，开销极小，不通过操作系统调度，无线程、进程切换开销</p><h5 id="emsp-与线程区别"><a href="#emsp-与线程区别" class="headerlink" title="&emsp; 与线程区别"></a>&emsp; 与线程区别</h5><p>&emsp;&emsp;多线程请求返回无序，那个线程有数据返回就处理那个；而协程返回的数据是有顺序的</p><h5 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h5><p>&emsp;&emsp;单线程执行，处理密集CPU和本地磁盘I/O时，性能较低，处理网络I/O，性能还较好</p><p>&emsp;&emsp;<font color="red">理论上来说，线程、协程在I/O密集的操作时性能高于进程</font></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Thread </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据结构 - 树</title>
      <link href="/2018/09/17/theory/algorithm/algorithm-tree/"/>
      <url>/2018/09/17/theory/algorithm/algorithm-tree/</url>
      <content type="html"><![CDATA[<h4 id="树"><a href="#树" class="headerlink" title="树"></a>树</h4><p>&emsp;&emsp; 一棵树是一些节点的集合。如果这棵树非空，则一棵树由称作根（root）节点的r以及0个或者多个非空的(子)树组成，这些子树中每一棵的根都被来自根r的一条有向的边（edge）所连接。<br>&emsp;&emsp;每一棵子树的根叫做r的儿子，r是每一棵子树的根的父亲。没有儿子的节点称为树叶，具有相同父节点的节点称为兄弟。</p>]]></content>
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> data structure </tag>
            
            <tag> tree </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PyQt学习记录（一） -- 初识PyQt</title>
      <link href="/2018/09/11/theory/design/using/python/framework/pyqt-1/"/>
      <url>/2018/09/11/theory/design/using/python/framework/pyqt-1/</url>
      <content type="html"><![CDATA[<h4 id="PyQt介绍"><a href="#PyQt介绍" class="headerlink" title="PyQt介绍"></a>PyQt介绍</h4><p>&emsp;&emsp;PyQt5是一套Python绑定Digia QT5应用的框架。它可用于Python 2和3。本教程使用Python 3。Qt库是最强大的GUI库之一。PyQt5的官方网站<a href="http://www.riverbankcomputing.co.uk/news。" target="_blank" rel="noopener">http://www.riverbankcomputing.co.uk/news。</a><br>&emsp;&emsp;PyQt5做为Python的一个模块，它有620多个类和6000个函数和方法。这是一个跨平台的工具包，它可以运行在所有主要的操作系统，包括UNIX，Windows，Mac OS。PyQt5是双重许可。开发者可以在GPL和商业许可之间进行选择。、</p><h4 id="PyQt模块"><a href="#PyQt模块" class="headerlink" title="PyQt模块"></a>PyQt模块</h4><ul><li>QtCore:包含了核心的非GUI功能。此模块用于处理时间、文件和目录、各种数据类型、流、URL、MIME类型、线程或进程。</li><li>QtGui包含类窗口系统集成、事件处理、二维图形、基本成像、字体和文本。</li><li>qtwidgets模块包含创造经典桌面风格的用户界面提供了一套UI元素的类。</li><li>QtMultimedia包含的类来处理多媒体内容和API来访问相机和收音机的功能。</li><li>Qtbluetooth模块包含类的扫描设备和连接并与他们互动。描述模块包含了网络编程的类。这些类便于TCP和IP和UDP客户端和服务器的编码，使网络编程更容易和更便携。</li><li>Qtpositioning包含类的利用各种可能的来源，确定位置，包括卫星、Wi-Fi、或一个文本文件。</li><li>Enginio模块实现了客户端库访问Qt云服务托管的应用程序运行时。</li><li>Qtwebsockets模块包含实现WebSocket协议类。</li><li>QtWebKit包含一个基于Webkit2图书馆Web浏览器实现类。</li><li>Qtwebkitwidgets包含的类的基础webkit1一用于qtwidgets应用Web浏览器的实现。</li><li>QtXml包含与XML文件的类。这个模块为SAX和DOM API提供了实现。</li><li>QtSvg模块提供了显示SVG文件内容的类。可伸缩矢量图形（SVG）是一种描述二维图形和图形应用的语言。</li><li>QtSql模块提供操作数据库的类。</li><li>QtTest包含的功能，使PyQt5应用程序的单元测试</li></ul><h4 id="PyQt5尝试"><a href="#PyQt5尝试" class="headerlink" title="PyQt5尝试"></a>PyQt5尝试</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">PyQt5 学习</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line"><span class="comment">#这里我们提供必要的引用。基本控件位于PyQt5.qtwidgets模块中。</span></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#每一PyQt5应用程序必须创建一个应用程序对象。sys.argv参数是一个列表，从命令行输入参数。</span></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    <span class="comment">#QWidget部件是PyQt5所有用户界面对象的基类。他为QWidget提供默认构造函数。默认构造函数没有父类。</span></span><br><span class="line">    w = QWidget()</span><br><span class="line">    <span class="comment">#resize()方法调整窗口的大小。这离是250px宽150px高</span></span><br><span class="line">    w.resize(<span class="number">250</span>, <span class="number">150</span>)</span><br><span class="line">    <span class="comment">#move()方法移动窗口在屏幕上的位置到x = 300，y = 300坐标。</span></span><br><span class="line">    w.move(<span class="number">300</span>, <span class="number">300</span>)</span><br><span class="line">    <span class="comment">#设置窗口的标题</span></span><br><span class="line">    w.setWindowTitle(<span class="string">'Simple'</span>)</span><br><span class="line">    <span class="comment">#显示在屏幕上</span></span><br><span class="line">    w.show()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#系统exit()方法确保应用程序干净的退出</span></span><br><span class="line">    <span class="comment">#的exec_()方法有下划线。因为执行是一个Python关键词。因此，exec_()代替</span></span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="http://zhangbohan.xyz/images/pyqt/pyqt-1.png" alt="PyQt-1.png"></p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://maicss.gitbooks.io/PyQt5/content/" target="_blank" rel="noopener">https://maicss.gitbooks.io/PyQt5/content/</a><br>Python Qt GUI 快速编程  —— PyQt编程指南（Mark Summerfield 著 ）</p>]]></content>
      
      <categories>
          
          <category> PyQt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> PyQt </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PyQT学习记录（二）</title>
      <link href="/2018/09/11/theory/design/using/python/framework/pyqt-2/"/>
      <url>/2018/09/11/theory/design/using/python/framework/pyqt-2/</url>
      <content type="html"><![CDATA[<h4 id="PyQt5-程序基础解析"><a href="#PyQt5-程序基础解析" class="headerlink" title="PyQt5 程序基础解析"></a>PyQt5 程序基础解析</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><ol><li>导入sys模块，为了访问在sys.argv列cd cd 表中的那些命令行参数  </li><li>导入time模块，使用time.sleep()  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = QApplication(sys.argv)</span><br></pre></td></tr></table></figure></li></ol><p>&emsp;&emsp;每个PyQt GUI程序都必须有一个QApplication对象。这个对象会提供访问全局信息的能力，包括程序的目录、屏幕大小、程序运行在哪个屏幕上（对于多线程系统来说）。这个对象还还会提供后续会说到的事件循环。<br>&emsp;&emsp;PyQt可以是是被一些自己的参数的，如 - geometry 和 - style 等，这些参数在QApplication的初始化文档中。</p><p>&emsp;&emsp;调用app.exec_()会开始执行QApplication对象的事件循环，第一个事件就是绘制事件，调用QApplication.quit()方法会干净的结束该GUI程序，关闭所有已经打开的窗口，释放所占用的资源，然后退出程序。<br>&emsp;&emsp;事件循环用伪代码展示就是这个样子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">while True:</span><br><span class="line">    event &#x3D; getNextEvent()</span><br><span class="line">    if event:</span><br><span class="line">        if event &#x3D;&#x3D; Terminates:</span><br><span class="line">            break</span><br><span class="line">        processEvent(Event)</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;当用户与应用程序交互的时候，或是发生特定事情时，会在PyQt内部产生一个事件并将其添加到事件列表中去。</p><h4 id="PyQt5布局"><a href="#PyQt5布局" class="headerlink" title="PyQt5布局"></a>PyQt5布局</h4><h5 id="1-绝对定位"><a href="#1-绝对定位" class="headerlink" title="1. 绝对定位"></a>1. 绝对定位</h5><p>&emsp;&emsp;程序指定每个控件的位置和大小(以像素为单位)。<br>绝对定位有以下限制:<br>&emsp;- 如果我们调整窗口，控件的大小和位置不会改变<br>&emsp;- 在各种平台上应用程序看起来会不一样<br>&emsp;- 如果改变字体，我们的应用程序的布局就会改变<br>&emsp;- 如果我们决定改变我们的布局,我们必须完全重做我们的布局  </p><h5 id="2-盒布局-Boxlayout"><a href="#2-盒布局-Boxlayout" class="headerlink" title="2. 盒布局 Boxlayout"></a>2. 盒布局 Boxlayout</h5><p>&emsp;&emsp;我们使用QHBoxLayout和QVBoxLayout，来分别创建横向布局和纵向布局<br>&emsp;&emsp;如果我们需要把两个按钮放在程序的右下角，创建这样的布局，我们只需要一个水平布局加一个垂直布局的盒子就可以了。再用弹性布局增加一点间隙。  </p><h5 id="3-格栅布局"><a href="#3-格栅布局" class="headerlink" title="3. 格栅布局"></a>3. 格栅布局</h5><p>&emsp;&emsp;最常用的还是栅格布局了。这种布局是把窗口分为行和列。创建和使用栅格布局，需要使用QGridLayout模块。  </p><h4 id="做了一个小型的demo"><a href="#做了一个小型的demo" class="headerlink" title="做了一个小型的demo"></a>做了一个小型的demo</h4><p>关于pyqt的更多知识，有空余时间的时候会继续补充。<br>项目地址： <a href="https://github.com/ice1995/ncmdump" target="_blank" rel="noopener">ncmdump</a><br>项目介绍： 原作者写出了ncm转换为MP3的基础版本，用这不是很方便，就用正在学习的pyrt做了一个初版的demo图形化界面，后续有时间继续优化  </p>]]></content>
      
      <categories>
          
          <category> PyQT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> GUI </tag>
            
            <tag> PyQT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx的使用（二）-- 详细了解Nginx</title>
      <link href="/2018/09/01/theory/design/using/middleware/nginx-2/"/>
      <url>/2018/09/01/theory/design/using/middleware/nginx-2/</url>
      <content type="html"><![CDATA[<h4 id="为什么使用Nginx"><a href="#为什么使用Nginx" class="headerlink" title="为什么使用Nginx"></a>为什么使用Nginx</h4><ol><li>更快<br>&emsp;&emsp;主要表现在两个方面：1，正常情况下，单次请求会得到更快的响应；2，在高峰期（数以万计的并发请求），Nginx可以比其他web服务器更快地请求响应。</li><li>高扩展性<br>&emsp;&emsp;它完全是由多个不同功能、 不同层次、 不同类型且耦合度低的模块组成。</li><li>高可靠性<br> &emsp;&emsp;Nginx 的高可靠性来自于其核心框架代码的优秀设计、 模块设计的简单性。每个 worker进程相对独立， master 进程在 1 个 worker 进程出错时可以快速“拉起”新的 worker 子进程提供服务。</li><li>低内存消耗<br> &emsp;&emsp;一般情况下， 10 000 个非活跃的 HTTP Keep-Alive 连接在 Nginx 中仅消耗 2.5MB 的内存， 这是 Nginx 支持高并发连接的基础。</li><li>单机支持 10 万以上的并发连接  </li><li>热部署<br> &emsp;&emsp;可以在 7×24 小时不间断服务的前提下， 升级 Nginx 的可执行文件。 当然， 它也支持不停止服务就更新配置项、 更换日志文件等功能。</li><li>最自由的BSD许可协议<br> &emsp;&emsp;允许用户在自己的项目中直接使用或修改 Nginx 源码。</li></ol><h4 id="使用Nginx的必备软件"><a href="#使用Nginx的必备软件" class="headerlink" title="使用Nginx的必备软件"></a>使用Nginx的必备软件</h4><ol><li>GCC编译器<br>&emsp;&emsp;用来编译nginx的各个模块  </li><li>PCRE库<br>&emsp;&emsp;PCRE（Perl Compatible Regular Expressions， Perl 兼容正则表达式） 是由 Philip Hazel开发的函数库， 目前为很多软件所使用， 该库支持正则表达式。当然，如果不打算在nginx中使用正则表达式，那么这个就不是必需的。</li><li>zlib库<br> &emsp;&emsp;zlib 库用于对 HTTP 包的内容做 gzip 格式的压缩， 如果我们在 nginx.conf 里配置了 gzip on， 并指定对于某些类型（content-type） 的 HTTP 响应使用 gzip 来进行压缩以减少网络传， 那么， 在编译时就必须把 zlib 编译进 Nginx。</li><li>OpenSSL 开发库<br>&emsp;&emsp;在SSL 协议上传输 HTTP，以及使用MD5、 SHA1 等散列函数都需要OpenSSL 开发库的支持。<h4 id="运行中的Nginx进程间的关系"><a href="#运行中的Nginx进程间的关系" class="headerlink" title="运行中的Nginx进程间的关系"></a>运行中的Nginx进程间的关系</h4><center><img src="nginx-1.png"></center><br>&emsp;&emsp;部署 Nginx 时都是使用一个 master 进程来管理多个worker 进程， 一般情况下， worker 进程的数量与服务器上的 CPU 核心数相等。</li></ol><h4 id="Nginx文件路径的常用定义"><a href="#Nginx文件路径的常用定义" class="headerlink" title="Nginx文件路径的常用定义"></a>Nginx文件路径的常用定义</h4><ol><li><p>以 root 方式设置资源路径<br>语法： root path;<br>默认： root html;<br>配置块： http、 server、 location、 if<br>&emsp;&emsp;例如， 定义资源文件相对于 HTTP 请求的根目录。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /download/ &#123;</span><br><span class="line">    root /opt/web/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> &emsp;&emsp;在上面的配置中， 如果有一个请求的 URI 是 /download/index/test.html， 那么 Web 服务器将会返回服务器上 /opt/web/html/download/index/test.html 文件的内容。</p></li><li><p>以 alias 方式设置资源路径<br>语法： alias path;<br>配置块： location<br>&emsp;&emsp;alias 也是用来设置文件资源路径的， 它与 root 的不同点主要在于如何解读紧跟 location后面的 uri 参数， 这将会致使 alias 与 root 以不同的方式将用户请求映射到真正的磁盘文件上。 例如， 如果有一个请求的 URI 是 /conf/nginx.conf， 而用户实际想访问的文件在 /usr/local/nginx/conf/nginx.conf， 那么想要使用 alias 来进行设置的话， 可以采用如下方式：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /conf &#123;</span><br><span class="line">alias /usr/local/nginx/conf/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 如果用 root 设置， 那么语句如下所示：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /conf &#123;</span><br><span class="line">root /usr/local/nginx/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> alias 后面还可以添加正则表达式， 例如：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^/test/(\w+)\.(\w+)$ &#123;</span><br><span class="line">alias /usr/local/nginx/$2/$1.$2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> &emsp;&emsp;这样， 请求在访问 /test/nginx.conf 时， Nginx 会返回 /usr/local/nginx/conf/nginx.conf 文件中的内容。</p></li><li>访问首页<br>语法： index file …;<br>默认： index index.html;<br>配置块： http、 server、 location<br>&emsp;&emsp;有时， 访问站点时的 URI 是 /， 这时一般是返回网站的首页， 而这与 root 和 alias 都不同。 这里用 ngx_http_index_module 模块提供的 index 配置实现。 index 后可以跟多个文件参数， Nginx 将会按照顺序来访问这些文件， 例如：   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">root path;</span><br><span class="line">index /index.html /html/index.php /index.php;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mycat使用记录一 -- 安装与配置</title>
      <link href="/2018/08/30/theory/design/using/middleware/mycat-1/"/>
      <url>/2018/08/30/theory/design/using/middleware/mycat-1/</url>
      <content type="html"><![CDATA[<p>rkdownm</p><h4 id="背景条件"><a href="#背景条件" class="headerlink" title="背景条件"></a>背景条件</h4><p>&emsp;&emsp;现有app流量数据统计分析系统，因数据量过大使用单数据库性能有限，打算将现有数据库进行优化，计划使用mycat实现分布式，在本地搭建环境学习</p><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>&emsp;&emsp;VMware虚拟机下的Cetnos7 × 3台</p><h4 id="mycat的安装"><a href="#mycat的安装" class="headerlink" title="mycat的安装"></a>mycat的安装</h4><ol><li><a href="http://dl.mycat.io" target="_blank" rel="noopener">下载</a>mycat，这里我选择的是1.6.5版本，也就是目前的release版本。</li><li>上传至linux系统，解压至/opt/mycat(我习惯的目录)</li></ol><h4 id="mycat的配置"><a href="#mycat的配置" class="headerlink" title="mycat的配置"></a>mycat的配置</h4><h5 id="配置文件路径"><a href="#配置文件路径" class="headerlink" title="配置文件路径"></a>配置文件路径</h5><p>$mycat_home$指的是安装目录<br>$mycat_home$/conf/server.xml  Mycat的配置文件，设置账号、参数等<br>$mycat_home$/conf/schema.xml  Mycat对应的物理数据库和数据库表的配置<br>$mycat_home$/conf/rule.xml  Mycat分片（分库分表）规则  </p><h5 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h5><ol><li><p>wrapper.conf<br>—配置jdk(如果已经配置java环境变量，这一步可以忽略)</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wrapper.java.command&#x3D;&#x2F;usr&#x2F;bin&#x2F;java</span><br><span class="line">#配置java的路径</span><br></pre></td></tr></table></figure></li><li><p>server.xml</p><ol><li><p>user标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">"root"</span> <span class="attr">defaultAccount</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>your_password<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"schemas"</span>&gt;</span>db1,db2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"readOnly"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>user    用户配置节点<br>—name    登录的用户名，也就是连接Mycat的用户名<br>—password    登录的密码，也就是连接Mycat的密码<br>—schemas    数据库名，这里会和schema.xml中的配置关联，多个用逗号分开，例如需要这个用户需要管理两个数据库db1,db2，则配置db1,dbs  </p></li><li><p>privileges标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">privileges</span> <span class="attr">check</span>=<span class="string">"false"</span>&gt;</span> 默认关闭</span><br><span class="line">    <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">"TESTDB"</span> <span class="attr">dml</span>=<span class="string">"0110"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">"tb 01"</span> <span class="attr">dml</span>=<span class="string">"0000"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">"tb02"</span> <span class="attr">dml</span>=<span class="string">"1111"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        1 代表有权限</span><br><span class="line">        0 代表无权限</span><br><span class="line">    顺序为  insert,update,select,delete</span><br><span class="line">    <span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">privileges</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>system标签<br>&emsp;&emsp;这个标签内嵌套的所有 property 标签都与系统配置有关。  </p></li><li>firewall标签<br>&emsp;&emsp;有关防火墙的标签，也就是在网络层对请求的地址进行限制，主要是从安全角度来保证Mycat不被匿名IP进行访问  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 全局SQL防火墙设置 --&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--白名单可以使用通配符%或着*--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--例如&lt;host host="127.0.0.*" user="root"/&gt;--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--例如&lt;host host="127.0.*" user="root"/&gt;--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--例如&lt;host host="127.*" user="root"/&gt;--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--例如&lt;host host="1*7.*" user="root"/&gt;--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--这些配置情况下对于127.0.0.1都能以root账户登录--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> &lt;firewall&gt;</span></span><br><span class="line"><span class="comment">    &lt;whitehost&gt;</span></span><br><span class="line"><span class="comment">       &lt;host host="1*7.0.0.*" user="root"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/whitehost&gt;</span></span><br><span class="line"><span class="comment">    &lt;blacklist check="false"&gt;</span></span><br><span class="line"><span class="comment">    &lt;/blacklist&gt;</span></span><br><span class="line"><span class="comment">&lt;/firewall&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>schema.xml<br>— schema      数据库设置，此数据库为逻辑数据库，name与server.xml中schema对应<br>— dataNode    分片信息，也就是分库相关配置<br>— dataHost    物理数据库，真正存储数据的数据库  </p><ol><li><p>schema标签<br>&emsp;&emsp;schema标签用来定义mycat实例中的逻辑库，mycat可以有多个逻辑库，每个逻辑库都有自己的相关配置。可以使用schema标签来划分这些不同的逻辑库<br>&emsp;&emsp;如果不配置schema标签，所有表的配置会属于同一个默认的逻辑库。逻辑库的概念和MySql的database的概念一样，我们在查询两个不同逻辑库中的表的时候，需要切换到该逻辑库下进行查询。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">" "</span> <span class="attr">checkSQLschema</span>=<span class="string">"false"</span> <span class="attr">sqlMaxLimit</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">name        逻辑数据库名,与server.xml中的schema对应</span></span><br><span class="line"><span class="comment">checkSQLschema     数据库前缀相关设置，当该值为true时，例如我们执行语句select * from TESTDB.company 。mycat会把语句修改为 select * from company 去掉TESTDB。</span></span><br><span class="line"><span class="comment">sqlMaxLimit        当该值设置为某个数值时，每条执行的sql语句，如果没有加上limit语句，Mycat会自动加上对应的值。不写的话，默认返回所有的值。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>table标签<br>—name  表名，物理数据库中表名<br>—dataNode  表存储到哪些节点，多个节点用逗号分隔。节点为下文dataNode设置的name<br>—primaryKey主键字段名，自动生成主键时需要设置<br>—autoIncrement 是否自增<br>—rule  分片规则名，具体规则下文rule详细介绍<br>—type 该属性定义了逻辑表的类型，目前逻辑表只有全局表和普通表。全局表： global 普通表：无<br>&emsp;&emsp;注：全局表查询任意节点，普通表查询所有节点效率低<br>—autoIncrement mysql对非自增长主键，使用last_insert_id() 是不会返回结果的，只会返回0。所以，只有定义了自增长主键的表，才可以用last_insert_id()返回主键值。<br>mycat提供了自增长主键功能，但是对应的mysql节点上数据表，没有auto_increment,那么在mycat层调用last_insert_id()也是不会返回结果的。<br>—needAddLimit 指定表是否需要自动的在每个语句后面加上limit限制，由于使用了分库分表，数据量有时候会特别庞大，这时候执行查询语句，忘记加上limt就会等好久，所以mycat自动为我们加上了limit 100，这个属性默认为true，可以自己设置为false禁用。如果使用这个功能，最好配合使用数据库模式的全局序列。<br>—subTables 分表，分表目前不支持Join。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">“test”</span> <span class="attr">primaryKey</span>=<span class="string">"ID"</span> <span class="attr">autoIncrement</span>=<span class="string">"true"</span> <span class="attr">dataNode</span>=<span class="string">“dn1,dn2,dn3”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">“mine”</span> <span class="attr">primaryKey</span>=<span class="string">"ID"</span> <span class="attr">autoIncrement</span>=<span class="string">"true"</span> <span class="attr">dataNode</span>=<span class="string">“dn1,dn2,dn3”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">“new”</span> <span class="attr">primaryKey</span>=<span class="string">"ID"</span> <span class="attr">autoIncrement</span>=<span class="string">"true"</span> <span class="attr">dataNode</span>=<span class="string">“dn1,dn2,dn3”</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>childTable标签<br>—childTable 标签用于定义 E-R 分片的子表。通过标签上的属性与父表进行关联。<br>—name    子表的名称<br>—joinKey    子表中字段的名称<br>—parentKey    父表中字段名称<br>—primaryKey    同Table<br>—needAddLimit    同Table </p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">"customer"</span> <span class="attr">primaryKey</span>=<span class="string">"ID"</span> <span class="attr">dataNode</span>=<span class="string">"dn1,dn2"</span> <span class="attr">rule</span>=<span class="string">"sharding-by-intfile"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">childTable</span> <span class="attr">name</span>=<span class="string">"c_a"</span> <span class="attr">primaryKey</span>=<span class="string">"ID"</span> <span class="attr">joinKey</span>=<span class="string">"customer_id"</span> <span class="attr">parentKey</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>dataNode标签<br>&emsp;&emsp;datanode标签定义了mycat中的数据节点，也就是我们所说的数据分片。一个datanode标签就是一个独立的数据分片。<br>&emsp;&emsp;例子中的表述的意思为，使用名字为localhost1数据库实例上的db1物理数据库，这就组成一个数据分片，最后我们用dn1来标示这个分片。<br>—name    定义数据节点的名字，这个名字需要唯一。我们在table标签上用这个名字来建立表与分片对应的关系<br>—dataHost    用于定义该分片属于哪个数据库实例，属性与datahost标签上定义的name对应<br>—database    用于定义该分片属于数据库实例上 的具体库。  </p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"dn1"</span> <span class="attr">dataHost</span>=<span class="string">"localhost1"</span> <span class="attr">database</span>=<span class="string">"db1"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>dataHost标签<br>—name    唯一标示dataHost标签，供上层使用<br>—maxCon    指定每个读写实例连接池的最大连接。<br>—minCon    指定每个读写实例连接池的最小连接，初始化连接池的大小<br>—balance    负载均称类型<br>&emsp;&emsp;balance=”0”：不开启读写分离机制，所有读操作都发送到当前可用的writeHost上<br>&emsp;&emsp;balance=”1”：全部的readHost与stand by writeHost参与select语句的负载均衡，简单的说，当双主双从模式（M1-S1，M2-S2 并且M1 M2互为主备），正常情况下，M2,S1,S2都参与select语句的负载均衡。<br>&emsp;&emsp;balance=”2”：所有读操作都随机的在writeHost、readHost上分发<br>&emsp;&emsp;balance=”3”：所有读请求随机的分发到writeHst对应的readHost执行，writeHost不负担读写压力。（1.4之后版本有）<br>—writeType    负载均衡类型。<br>&emsp;&emsp;writeType=”0”, 所有写操作发送到配置的第一个 writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为准，切换记录在配置文件中:dnindex.properties .<br>&emsp;&emsp;writeType=”1”，所有写操作都随机的发送到配置的 writeHost。1.5以后版本废弃不推荐。<br>—switchType<br>&emsp;&emsp;-1 不自动切换<br>&emsp;&emsp;1 默认值 自动切换<br>&emsp;&emsp;2 基于MySql主从同步的状态决定是否切换，心跳语句为 show slave status<br>&emsp;&emsp;3 基于 MySQL galary cluster 的切换机制（适合集群）（1.4.1）,心跳语句为 show status like ‘wsrep%’<br>—dbType 指定后端链接的数据库类型目前支持二进制的mysql协议，还有其他使用jdbc链接的数据库，例如：mongodb，oracle，spark等<br>—dbDriver    指定连接后段数据库使用的driver，目前可选的值有native和JDBC。使用native的话，因为这个值执行的是二进制的mysql协议，所以可以使用mysql和mariadb，其他类型的则需要使用JDBC驱动来支持。<br>1.6版本开始支持postgresql的原始协议。<br>如果使用JDBC的话需要符合JDBC4标准的驱动jar 放到mycat\lib目录下，并检查驱动jar包中包括如下目录结构文件 META-INF\services\java.sql.Driver。 在这个文件写上具体的driver类名，例如com.mysql.jdbc.Driver<br>—tempReadHostAvailable<br>&emsp;&emsp;如果配置了这个属性 writeHost 下面的 readHost 仍旧可用，默认 0 可配置（0、1）。</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">"localhost1"</span> <span class="attr">maxCon</span>=<span class="string">"1000"</span> <span class="attr">minCon</span>=<span class="string">"10"</span> <span class="attr">balance</span>=<span class="string">"0"</span> <span class="attr">writeType</span>=<span class="string">"0"</span> <span class="attr">dbType</span>=<span class="string">"mysql"</span> <span class="attr">dbDriver</span>=<span class="string">"native"</span> <span class="attr">switchType</span>=<span class="string">"1"</span> <span class="attr">slaveThreshold</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM1"</span> <span class="attr">url</span>=<span class="string">"192.168.1.100:3306"</span> <span class="attr">user</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"hostS1"</span> <span class="attr">url</span>=<span class="string">"192.168.1.101:3306"</span> <span class="attr">user</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">"123456"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>heartbeat标签<br>&emsp;&emsp;这个标签内指明用于和后端数据库进行心跳检查的语句。例如：MYSQL 可以使用 select user()，Oracle 可以使用 select 1 from dual 等。<br>&emsp;&emsp;这个标签还有一个 connectionInitSql 属性，主要是当使用 Oracla 数据库时，需要执行的初始化 SQL 语句就放到这里面来。例如：alter session set nls_date_format=’yyyy-mm-dd hh24:mi:ss ‘<br>1.4 主从切换的语句必须是：show slave status  </p></li><li><p>writeHost /readHost 标签<br>&emsp;&emsp;这两个标签都指定后端数据库的相关配置，用于实例化后端连接池。唯一不同的是，writeHost 指定写实例、readHost 指定读实例。<br>&emsp;&emsp;在一个 dataHost 内可以定义多个 writeHost 和 readHost。但是，如果 writeHost 指定的后端数据库宕机，那么这个 writeHost 绑定的所有 readHost 都将不可用。<br>&emsp;&emsp;另一方面，由于这个 writeHost 宕机，系统会自动的检测到，并切换到备用的 writeHost 上去。这两个标签的属性相同，这里就一起介绍。<br>—host    用于标识不同实例，一般 writeHost 我们使用<em>M</em>1，readHost我们用<em>S</em>1。<br>—url    后端实例连接地址。Native：地址：端口 JDBC：jdbc的url<br>—password    后端存储实例需要的密码<br>—user    后端存储实例需要的用户名字<br>—weight    权重 配置在 readhost 中作为读节点的权重<br>—usingDecrypt    是否对密码加密，默认0。具体加密方法看官方文档。  </p></li></ol></li></ol>]]></content>
      
      <categories>
          
          <category> middleware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> middleware </tag>
            
            <tag> linux </tag>
            
            <tag> mycat </tag>
            
            <tag> db </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux指令记录合集（长期更新）</title>
      <link href="/2018/08/30/theory/design/using/linux/linux-command/"/>
      <url>/2018/08/30/theory/design/using/linux/linux-command/</url>
      <content type="html"><![CDATA[<p>此命令合集适合于Centos <font color="#40B245">7</font></p><h4 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h4><h5 id="服务相关指令"><a href="#服务相关指令" class="headerlink" title="服务相关指令"></a>服务相关指令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start service-name        <span class="comment">#启动某服务</span></span><br><span class="line">systemctl stop service-name         <span class="comment">#停止某服务</span></span><br><span class="line">systemctl restart service-name      <span class="comment">#重启某服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> service-name       <span class="comment">#设置开机自动启动某服务</span></span><br><span class="line">systemctl <span class="built_in">disable</span> service-name      <span class="comment">#设置开机停止自动启动某服务</span></span><br><span class="line">systemctl list-units --<span class="built_in">type</span>=service <span class="comment">#查看所有已启动的服务</span></span><br><span class="line">systemctl list-unit-files           <span class="comment">#查看已经安装的所有服务</span></span><br></pre></td></tr></table></figure><h5 id="添加程序到服务"><a href="#添加程序到服务" class="headerlink" title="添加程序到服务"></a>添加程序到服务</h5><p>systemctl脚本存放在:/usr/lib/systemd/<br>&emsp;&emsp;[Unit]部分主要是对这个服务的说明，内容包括Description和After，Description 用于描述服务，After用于描述服务类别<br>&emsp;&emsp;[Service]部分是服务的关键，是服务的一些具体运行参数的设置.<br>&emsp;&emsp;Type=forking是后台运行的形式，<br>&emsp;&emsp;User=users是设置服务运行的用户,<br>&emsp;&emsp;Group=users是设置服务运行的用户组,<br>&emsp;&emsp;PIDFile为存放PID的文件路径，<br>&emsp;&emsp;ExecStart为服务的具体运行命令,<br>&emsp;&emsp;ExecReload为重启命令，<br>&emsp;&emsp;ExecStop为停止命令，<br>&emsp;&emsp;PrivateTmp=True表示给服务分配独立的临时空间<br>    注意：[Service]部分的启动、重启、停止命令全部要求使用绝对路径，使用相对路径则会报错！<br>    [Install]部分是服务安装的相关设置，可设置为多用户的  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以tomcat为例</span></span><br><span class="line"><span class="comment">#vim /usr/lib/systemd/system/tomcat.service</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=java tomcat project</span><br><span class="line">After=tomcat.service</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=users</span><br><span class="line">Group=users</span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/tomcat/tomcat.pid</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/tomcat/bin/startup.sh</span><br><span class="line">ExecReload=</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/tomcat/bin/shutdown.sh</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h4><p>防火墙相关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=port-number/protocols --zone=zone-name --permanent <span class="comment">#在zone-name区域永久开启protocol协议的port-number端口</span></span><br><span class="line">firewall-cmd --zone=public --list-all   <span class="comment"># 显示所有公共区域（public）</span></span><br></pre></td></tr></table></figure><h4 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="built_in">source</span> link  <span class="comment">#创建一个指向source的link（快捷方式）</span></span><br></pre></td></tr></table></figure><h4 id="后台运行命令"><a href="#后台运行命令" class="headerlink" title="后台运行命令"></a>后台运行命令</h4><ol><li><p>&amp;<br> &emsp;&emsp;当在前台运行某个作业时，终端被该作业占据；可以在命令后面加上&amp; 实现后台运行。例如：sh test.sh &amp; 适合在后台运行的命令有f i n d、费时的排序及一些s h e l l脚本。在后台运行作业时要当心：需要用户交互的命令不要放在后台执行，因为这样你的机器就会在那里傻等。不过，作业在后台运行一样会将结果输出到屏幕上，干扰你的工作。如果放在后台运行的作业会产生大量的输出，最好使用下面的方法把它的输出重定向到某个文件中：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span>  &gt;  out.file  2&gt;&amp;1  &amp;   <span class="comment">#所有的标准输出和错误输出都将被重定向到一个叫做out.file 的文件中。</span></span><br></pre></td></tr></table></figure></li><li><p>2&gt;&amp;1解析<br> &emsp;&emsp;2&gt;&amp;1 是将标准出错重定向到标准输出，这里的标准输出已经重定向到了out.file文件，即将标准出错也输出到out.file文件中。最后一个&amp;， 是让该命令在后台执行。<br> &emsp;&emsp;试想2&gt;1代表什么，2与&gt;结合代表错误重定向，而1则代表错误重定向到一个文件1，而不代表标准输出；换成2&gt;&amp;1，&amp;与1结合就代表标准输出了，就变成错误重定向到标准输出.</p></li><li><p>nohup<br> &emsp;&emsp;使用&amp;命令后，作业被提交到后台运行，当前控制台没有被占用，但是一但把当前控制台关掉(退出帐户时)，作业就会停止运行。nohup命令可以在你退出帐户之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)。该命令的一般形式为：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="built_in">command</span> &amp;  <span class="comment">#在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：</span></span><br><span class="line">nohup <span class="built_in">command</span> &gt; myout.file 2&gt;&amp;1 &amp;</span><br><span class="line">nohup <span class="built_in">command</span> &gt; myout.file 2&gt;&amp;1 &amp; <span class="built_in">echo</span> $! &gt; pid <span class="comment">#将pid号存储到文件中</span></span><br></pre></td></tr></table></figure></li><li><p>ctrl + z<br> &emsp;&emsp;可以将一个正在前台执行的命令放到后台，并且处于暂停状态。</p></li><li>jobs<br> &emsp;&emsp;查看当前有多少在后台运行的命令。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">jobs</span> -l <span class="comment">#可显示所有任务的PID，jobs的状态可以是running, stopped, Terminated。但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识。</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="硬件信息查看"><a href="#硬件信息查看" class="headerlink" title="硬件信息查看"></a>硬件信息查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo |grep <span class="string">"physical id"</span>|sort|uniq|wc -l    <span class="comment">#查看物理cpu个数</span></span><br><span class="line">cat /proc/cpuinfo |grep <span class="string">"cpu cores"</span>|wc -l       <span class="comment">#查看每个物理cpu中的core个数</span></span><br><span class="line">cat /proc/cpuinfo |grep <span class="string">"processor"</span>|wc -l       <span class="comment">#逻辑cpu的个数</span></span><br></pre></td></tr></table></figure><h4 id="性能信息查看"><a href="#性能信息查看" class="headerlink" title="性能信息查看"></a>性能信息查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top         <span class="comment">#性能监控程序</span></span><br><span class="line">free -m     <span class="comment">#查看内存使用情况</span></span><br></pre></td></tr></table></figure><h4 id="保存程序运行pid到文件"><a href="#保存程序运行pid到文件" class="headerlink" title="保存程序运行pid到文件"></a>保存程序运行pid到文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##通过命令行启动进程，然后通过ps ,grep, awk 关键字获取对应pid</span></span><br><span class="line">ps -ef|grep s |grep -v grep |awk <span class="string">'&#123;print $2&#125;'</span> &gt; process.PIDFile</span><br><span class="line"><span class="comment">###如果是使用nohup创建，查看当前shell最后一个后台进程pid  $!</span></span><br><span class="line"><span class="comment">##注意，下面的命令要放到sh文件里面执行，不能从命令行执行**</span></span><br><span class="line">nohup <span class="built_in">command</span>  &amp; <span class="built_in">echo</span> $! &gt; process.pid</span><br><span class="line"><span class="comment"># 既写入文件又输出到标准输出</span></span><br><span class="line">nohup <span class="built_in">command</span>  &amp; <span class="built_in">echo</span> $!|tee process.pid</span><br></pre></td></tr></table></figure><h4 id="修改开机启动模式"><a href="#修改开机启动模式" class="headerlink" title="修改开机启动模式"></a>修改开机启动模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">set</span>-default graphical.target <span class="comment">#由命令行模式更改为图形界面模式</span></span><br><span class="line">systemctl <span class="built_in">set</span>-default multi-user.target <span class="comment">#由图形界面模式更改为命令行模式</span></span><br></pre></td></tr></table></figure><h4 id="解压tar-gz"><a href="#解压tar-gz" class="headerlink" title="解压tar.gz"></a>解压tar.gz</h4><p>tar命令说明：<br>&emsp;&emsp;语法：tar [主选项+辅选项] 文件或目录<br>&emsp;&emsp;使用该命令时，主选项必须有，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。<br>主选项：【一条命令以下5个参数只能有一个】<br>&emsp;&emsp;-c: —create 新建一个压缩文档，即打包<br>&emsp;&emsp;-x: —extract,—get解压文件<br>&emsp;&emsp;-t: —list,查看压缩文档里的所有内容<br>&emsp;&emsp;-r:—append 向压缩文档里追加文件<br>&emsp;&emsp;-u:—update 更新原压缩包中的文件<br>辅助选项：<br>&emsp;&emsp;-z:是否同时具有gzip的属性？即是否需要用gzip压缩或解压？一般格式为x.tar.gz或xx.tgz<br>&emsp;&emsp;-j：是否同时具有bzip2的属性？即是否需要用bzip2压缩或解压？一般格式为x.tar.bz2<br>&emsp;&emsp;-v:显示操作过程！这个参数很常用<br>&emsp;&emsp;-f：使用文档名，注意，在f之后要立即接文档名，不要再加其他参数！<br>&emsp;&emsp;-C:切换到指定目录<br>&emsp;&emsp;—exclude FILE:在压缩过程中，不要将FILE打包  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf xxx.tar.gz -C path</span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile    <span class="comment">#修改环境变量文件内容  export xx_home=path</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile <span class="comment">#使环境变量生效</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> command </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lombok使用方法记录</title>
      <link href="/2018/08/28/theory/design/using/java/tools/lombok/"/>
      <url>/2018/08/28/theory/design/using/java/tools/lombok/</url>
      <content type="html"><![CDATA[<h4 id="maven引入jar包"><a href="#maven引入jar包" class="headerlink" title="maven引入jar包"></a>maven引入jar包</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="给IDE安装插件"><a href="#给IDE安装插件" class="headerlink" title="给IDE安装插件"></a>给IDE安装插件</h4><p>&emsp;&emsp;由于 Lombok 采取的注解形式的，在编译后，自动生成相应的方法，为了不让 IDE’疯了’，需要下载插件了支持它.<br>&emsp;&emsp;以 idea 为例：查找插件 lombok plugin 安装即可。</p><h4 id="一般注解"><a href="#一般注解" class="headerlink" title="一般注解"></a>一般注解</h4><div class="table-container"><table><thead><tr><th>注解代码</th><th>用法</th></tr></thead><tbody><tr><td>@Getter</td><td>get方法</td></tr><tr><td>@Setter</td><td>set方法</td></tr><tr><td>@ToString</td><td>ToString方法</td></tr><tr><td>@EqualsAndHashCode</td><td>equals方法和hashcode方法</td></tr><tr><td>@AllArgsConstructor</td><td>会生成一个包含所有变量，同时如果变量使用了NotNull annotation ， 会进行是否为空的校验，全部参数的构造函数的自动生成，该注解的作用域也是只有在实体类上，参数的顺序与属性定义的顺序一致。</td></tr><tr><td>@NoArgsConstructor</td><td>无参构造函数</td></tr><tr><td>@RequiredArgsConstructor</td><td>会生成一个包含常量（final），和标识了@NotNull的变量 的构造方法</td></tr><tr><td>@NonNull</td><td>非空检查,可以帮助我们避免空指针</td></tr></tbody></table></div><h4 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h4><ol><li><p>使用staticName启用静态工厂模式，如下所示：<br> @RequiredArgsConstructor(staticName=”of”)。与普通构造函数不同，这种静态工厂方法将推断泛型。这意味着您的API用户可以写入MapEntry.of(“foo”, 5)而不是使用new MapEntry<string, integer>(“foo”, 5)。</string,></p></li><li><p>在构造方法上添加注解。使用方法  </p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequiredArgsConstructor</span>(onConstructor=@__(&#123;<span class="meta">@AnnotationsGoHere</span>&#125;))&#125;</span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span>(onConstructor=@__(&#123;<span class="meta">@Autowired</span>&#125;))&#125;  <span class="comment">//例子</span></span><br></pre></td></tr></table></figure></li><li><p>使用access标识构造器访问权限修饰符，默认为lombok.AccessLevel.PUBLIC。如：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AllArgsConstructor</span>(access = lombok.AccessLevel.PROTECTED)</span><br></pre></td></tr></table></figure></li><li><p>@NoArgsConstructor(force = true)会初始化所有字段为0或者false或者null，初始化所有的参数为默认值</p></li></ol><h4 id="val-var"><a href="#val-var" class="headerlink" title="@val @var"></a>@val @var</h4><p>自动类型推断，简单来说，就是弱类型<br>val注解变量申明是final类型 var注解变量是非final类型</p><h4 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h4><p>&emsp;&emsp;自动为所有字段添加@ToString, @EqualsAndHashCode, @Getter方法，为非final字段添加@Setter,和@RequiredArgsConstructor<br>&emsp;&emsp;<font color="red">注意的是</font>，同时使用@Data 和 @AllArgsConstructor后 ，默认的无参构造函数<font color="red">失效</font>，如果需要它，要重新设置 @NoArgsConstructor</p><h4 id="Accessors-chain-true"><a href="#Accessors-chain-true" class="headerlink" title="@Accessors(chain = true)"></a>@Accessors(chain = true)</h4><p>开启链式风格</p><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Accessors</span>(chain = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Student student = <span class="keyword">new</span> Student()</span><br><span class="line">        .setAge(<span class="number">24</span>)</span><br><span class="line">        .setName(<span class="string">"zs"</span>);</span><br></pre></td></tr></table></figure></code></pre><h4 id="Slf4j"><a href="#Slf4j" class="headerlink" title="@Slf4j"></a>@Slf4j</h4><p>直接调用log</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.info(xxxx);</span><br></pre></td></tr></table></figure><h4 id="Log"><a href="#Log" class="headerlink" title="@Log"></a>@Log</h4><p>使用的是 java.util.logging.Logger ，直接使用 变量 log。</p><h4 id="Builder"><a href="#Builder" class="headerlink" title="@Builder"></a>@Builder</h4><p>使用建筑者模式构建对象。</p><h4 id="Cleanup"><a href="#Cleanup" class="headerlink" title="@Cleanup"></a>@Cleanup</h4><p>自动化关闭流，相当于 jdk1.7 种的 try with resource</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cleanup</span></span><br><span class="line">InputStream in = <span class="keyword">new</span> FileInputStream(args[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">@Cleanup</span></span><br><span class="line">OutputStream out = <span class="keyword">new</span> FileOutputStream(args[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h4 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a>@SneakyThrows</h4><p>当我们需要抛出异常，在当前方法上调用，不用显示的在方法名后面写 throw</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SneakyThrows</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h4 id="Synchronized"><a href="#Synchronized" class="headerlink" title="@Synchronized"></a>@Synchronized</h4><p>方法中所有的代码都加入到一个代码块中，默认静态方法使用的是全局锁，普通方法使用的是对象锁，当然也可以指定锁的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Object lock = <span class="keyword">new</span> Object();</span><br><span class="line"><span class="meta">@Synchronized</span>(<span class="string">"lock"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><br><br><br><br><br>  </p><h3 id="参考内容："><a href="#参考内容：" class="headerlink" title="参考内容："></a>参考内容：</h3><p>&emsp;&emsp;<a href="https://projectlombok.org/features/all?spm=a2c4e.11153940.blogcont59972.9.2aeb6d327c6fbZ" target="_blank" rel="noopener">官方文档</a><br>&emsp;&emsp;<a href="https://www.itcodemonkey.com/article/6309.html" target="_blank" rel="noopener">你真的会写java吗?</a><br>&emsp;&emsp;<a href="https://www.cnblogs.com/qnight/p/8997493.html" target="_blank" rel="noopener">使用Lombok来优雅的编码</a></p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tools </tag>
            
            <tag> reconsitution </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式应用（持续更新）</title>
      <link href="/2018/08/28/theory/design/using/regex-using/"/>
      <url>/2018/08/28/theory/design/using/regex-using/</url>
      <content type="html"><![CDATA[<h4 id="编程过程中使用的正则记录"><a href="#编程过程中使用的正则记录" class="headerlink" title="编程过程中使用的正则记录"></a>编程过程中使用的正则记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">b*[^:b#&#x2F;]+.*$        统计代码行数（不包括以# &#x2F; 开头的 亦不包括空行）</span><br><span class="line">\d(9|[0-7])\d&#123;4&#125;     中国邮政编码</span><br><span class="line">^((13[0-9])|(15[^4,\\D])|(18[0,5-9]))\\d&#123;8&#125;$     手机号</span><br><span class="line">^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]&#123;2,&#125;$      邮箱</span><br><span class="line">^[\u4e00-\u9fa5]&#123;0,&#125;$    汉字</span><br><span class="line">http(s)?:&#x2F;&#x2F;([\\w-]+\\.)+[\\w-]+(&#x2F;[\\w- .&#x2F;?%&amp;&#x3D;])?  url</span><br><span class="line">(((\d&#123;1,2&#125;)|(1\d&#123;2&#125;)|(2[0-4]\d)|(25[0-5]))\.)&#123;3&#125;((\d&#123;1,2&#125;)|(1\d&#123;2&#125;)|(2[0-4]\d)|(25[0-5])) ipv4</span><br><span class="line">&lt;!-&#123;2,&#125;.*-&#123;2,&#125;&gt;      html注释</span><br><span class="line">[1-8]\d&#123;5&#125;((18)|(19)|(20))?\d&#123;2&#125;[0-1]\d[0-3]\d&#123;4&#125;[\dX]?      中华人民共和国身份证号码</span><br><span class="line">^[1-9]\d&#123;3&#125;-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$      日期</span><br><span class="line">^(20|21|22|23|[0-1]\d):[0-5]\d:[0-5]\d$       时间</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> regular </category>
          
      </categories>
      
      
        <tags>
            
            <tag> regex </tag>
            
            <tag> tools </tag>
            
            <tag> regular </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记七 -- IPv6</title>
      <link href="/2018/08/28/theory/ccna/ccna-7/"/>
      <url>/2018/08/28/theory/ccna/ccna-7/</url>
      <content type="html"><![CDATA[<h4 id="DoD模型"><a href="#DoD模型" class="headerlink" title="DoD模型"></a>DoD模型</h4><p>应用层 Telent、FTP、SMTP、DNS、HTTP以及其他应用协议<br>传输层 TCP、UDP<br>网络层 ND、MLD、ICMPv6、IPv6<br>网络接口 各种通信网络接口（以太网等物理网络）  </p><h4 id="IPv6地址（128位）"><a href="#IPv6地址（128位）" class="headerlink" title="IPv6地址（128位）"></a>IPv6地址（128位）</h4><ol><li>首选的格式<br>128比特分成8段，每段的16比特用16进制表示，中间用:隔开<br>xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</li><li>压缩格式，允许0压缩<br>xxxx:xxxx::xx:xxx:x:xxxx<br>一对::在一个地址中只能出现1次</li><li>IPv4构造IPv6<br>0:0:0:0:0:0:192.168.0.1或者::192.168.0.1</li><li>子网掩码<br>xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/n 前n位是网络部分，后边是主机部分<h4 id="单播地址"><a href="#单播地址" class="headerlink" title="单播地址"></a>单播地址</h4>全球路由前缀  |子网|接口ID<br>2001:0db8:3c4d:0012:a:d:1234:56ab<br>链路本地地址 link local address  该地址用于同一网段中IPv6计算机通信<br>多播地址<br>任播地址  </li></ol><p>::  相当于0.0.0.0<br>::1 相当于127.0.0.1<br>2000::/3 全球单播地址范围，前三位是001<br>FE80::/10 链路本地单播地址<br>FF00::/8 组播地址范围<br>3FFF:FFFF::/32 示例和文档保留地址<br>2001:oDB8::/32 示例和文档保留地址<br>2002::/16 用于IPv6到IPv4的转换系统</p><h4 id="IPv6地址分配"><a href="#IPv6地址分配" class="headerlink" title="IPv6地址分配"></a>IPv6地址分配</h4><ol><li>静态</li><li>自动<br>无状态 向路由器发送路由前缀请求，配置IPv6的路由器接口收到，然后发送路由通告，计算机获得网络部分+自己的MAC地址，进行构造IPv6地址<br>有DHCP服务器 路由通告中M=1，则向DHCP服务器请求ip地址；路由通告中O=1，则向DHCP服务器请求其他设置如DNS服务器、搜索后缀等  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(config)#ipv6 unicast-routing 启用IPv6</span><br><span class="line">(config)#interface fastEthernet 0&#x2F;0</span><br><span class="line">(config-if)#ipv6 address 2001:13::1&#x2F;64</span><br><span class="line"></span><br><span class="line">(config-if)#ipv6 nd managed-config-flag  令路由通告中M&#x3D;1</span><br><span class="line">(config-if)#ipv6 nd other-config-flag 令路由通告中O&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="IPv6路由添加"><a href="#IPv6路由添加" class="headerlink" title="IPv6路由添加"></a>IPv6路由添加</h4><h5 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#show ipv6 interface fastEthernet 0&#x2F;0 </span><br><span class="line">#show ipv6 route 查看IPv6路由表查</span><br><span class="line">(config)#ipv6 route 2001:1::&#x2F;64 2001:1::1</span><br><span class="line">(config-if)#ipv6 address 2001:1::&#x2F;64 eui-64 自己根据前缀和自己的MAC地址构造IPv6地址</span><br><span class="line">(config-if)#ipv6 address 2001:1::1&#x2F;64</span><br></pre></td></tr></table></figure><h5 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h5><ol><li><p>RIPng协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(config)#ipv6 unicast-routing</span><br><span class="line">(config)#ipv6 router rip 1</span><br><span class="line">(config-rtr)#exit</span><br><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 rip 1 enable</span><br></pre></td></tr></table></figure></li><li><p>EIGRPv6协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(config)#ipv6 unicast-routing</span><br><span class="line">(config)#ipv6 router eigrp 10</span><br><span class="line">(config-rtr)#no shutdown</span><br><span class="line">(config-rtr)#router-id 4.0.0.1</span><br><span class="line">(config-rtr)#exit</span><br><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 eigrp 10</span><br></pre></td></tr></table></figure></li><li><p>OSPFv3协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(config)#ipv6 unicast-routing</span><br><span class="line">(config)#ipv6 router ospf 1</span><br><span class="line">(config-rtr)#router-id 4.0.0.1</span><br><span class="line">(config-rtr)#exit</span><br><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 ospf 1 area 0</span><br></pre></td></tr></table></figure></li></ol><h4 id="IPv4和IPv6共存技术"><a href="#IPv4和IPv6共存技术" class="headerlink" title="IPv4和IPv6共存技术"></a>IPv4和IPv6共存技术</h4><p>双协议栈</p><ol><li><p>IPv6 to IPv4隧道技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(config)#ipv6 unicast-routing</span><br><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 address 2001:1::1&#x2F;64 </span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#interface tunnel 0 隧道虚拟端口</span><br><span class="line">(config-if)#no shutdown</span><br><span class="line">(config-if)#ipv6 address 2001:2::1&#x2F;64 给隧道虚拟端口配置IPv6</span><br><span class="line">(config-if)#tunnel source 10.0.0.1  隧道源地址</span><br><span class="line">(config-if)#tunnel destination 10.0.1.2 隧道目标地址</span><br><span class="line">(config-if)#tunnel mode ipv6ip 设置隧道加密模式</span><br><span class="line">(config-if)#exit</span><br></pre></td></tr></table></figure></li><li><p>ISATAP隧道</p><ol><li><p>配置ISATAP路由(该路由与IPv4网络接口为192.168.0.2)</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(config)#interface tunnel 0</span><br><span class="line">(config-if)#ipv6 address 2001:1::&#x2F;64 eui-64</span><br><span class="line">(config-if)#no ipv6 nd suppress-ra</span><br><span class="line">(config-if)#tunnel source 10.0.0.1</span><br><span class="line">(config-if)#tunnel mode ipv6ip isatap</span><br><span class="line">(config-if)#no shutdown</span><br></pre></td></tr></table></figure></li><li><p>windows下</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;netsh</span><br><span class="line">netsh&gt;interface</span><br><span class="line">netsh interface&gt;ipv6</span><br><span class="line">netsh interface ipv6&gt;isatap</span><br><span class="line">netsh interface ipv6 isatap&gt;set router 192.168.0.2</span><br></pre></td></tr></table></figure></li></ol></li><li><p>静态NAT-PT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 nat </span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#interface serial 1&#x2F;0</span><br><span class="line">(config-if)#ipv6 nat </span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#ipv6 nat v6v4 source 10.0.0.2 2001:2::2 </span><br><span class="line">(config)#ipv6 nat v6v4 source 2001:2::4 10.0.0.4</span><br><span class="line">(config)#ipv6 prefix 2001:3::&#x2F;96</span><br></pre></td></tr></table></figure></li><li><p>动态NAT-PT 只能由IPv6网络主动向IPv4网络发起通信</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(config)#interface fastEthernet 0&#x2F;1</span><br><span class="line">(config-if)#ipv6 nat </span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#interface serial 1&#x2F;0</span><br><span class="line">(config-if)#ipv6 nat </span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#ipv6 access-list v4map </span><br><span class="line">(config-ipv6-acl)#permit 2001:2::&#x2F;64 any </span><br><span class="line">(config-ipv6-acl)#exit</span><br><span class="line">(config)#ipv6 access-list v6map</span><br><span class="line">(config-ipv6-acl)#permit 2001:2::&#x2F;64 any </span><br><span class="line">(config-ipv6-acl)#exit</span><br><span class="line">(config)#ipv6 nat</span><br><span class="line">(config)#ipv6 nat v6v4 pool v4pool 10.0.2.100 10.0.2.200 prefix-length 24 </span><br><span class="line">(config)#ipv6 nat v6v4 source list v6list pool v4pool </span><br><span class="line">(config)#ipv6 nat prefix 2001::&#x2F;96 v4-mapped v4map  2001::&#x2F;96用v4map里的地址替代</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记六 -- NAT</title>
      <link href="/2018/08/28/theory/ccna/ccna-6/"/>
      <url>/2018/08/28/theory/ccna/ccna-6/</url>
      <content type="html"><![CDATA[<h4 id="地址转换技术"><a href="#地址转换技术" class="headerlink" title="地址转换技术"></a>地址转换技术</h4><ol><li>内网能够主动访问外网，外网不能主动访问内网，相对而言内网更安全一些  </li><li>节省公网ip地址  </li><li>缺点 慢  <h4 id="NAT（网络地址转换）"><a href="#NAT（网络地址转换）" class="headerlink" title="NAT（网络地址转换）"></a>NAT（网络地址转换）</h4>静态NAT 动态NAT  不节省公网地址、一个公网替换一个内网地址<br>PAT（端口地址转换）  节省公网ip、替换源端口和源地址  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#debug ip packet 开启数据包转发显示</span><br></pre></td></tr></table></figure></li></ol><h4 id="路由器上配置PAT"><a href="#路由器上配置PAT" class="headerlink" title="路由器上配置PAT"></a>路由器上配置PAT</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(config)#access-list 10 permit 10.0.0.0 0.0.0.255 定义内网地址池</span><br><span class="line">(config)#ip nat pool name 131.107.0.1 131.107.0.1 netmask 255.255.255.0定义一个名为name的公网地址池从.0.1到.0.1</span><br><span class="line">(config)#ip nat inside source list 10 pool name overload  10列表绑定到name，overload表示PAT，不加overload表示NAT</span><br><span class="line">(config)#interface serial 0&#x2F;0</span><br><span class="line">(config-if)#ip nat outside  0&#x2F;0公网出口</span><br><span class="line">(config-if)#exit</span><br><span class="line">(config)#interface serial 0&#x2F;1</span><br><span class="line">(config-if)#ip nat inside   0&#x2F;1内网入口</span><br></pre></td></tr></table></figure><p>端口映射 使公网地址可以访问内网地址<br>路由端口映射<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(config)#ip nat inside source static tcp 10.0.0.6 80 137.107.0.1 80 端口映射</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记五 -- ACL</title>
      <link href="/2018/08/28/theory/ccna/ccna-5/"/>
      <url>/2018/08/28/theory/ccna/ccna-5/</url>
      <content type="html"><![CDATA[<h4 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h4><p>物理层安全 墙上不用的网线接口，连接交换机的端口关掉<br>数据链路层安全 ADSL拨号账号和密码 MAC地址绑定 交换机连接计算机数量控制 创建VLAN<br>网络层安全 基于源ip地址目标IP地址的控制<br>传输层安全 会话攻击 LAND攻击 syn洪水攻击<br>应用层安全 登录密码  </p><h4 id="网络层安全"><a href="#网络层安全" class="headerlink" title="网络层安全"></a>网络层安全</h4><p>标准的ACL  基于源地址进行控制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#config terminal  </span><br><span class="line">(config)#access-list 10 deny host 192.168.1.2</span><br><span class="line">(config)#access-list 10 permit 192.168.1.0 0.0.0.255 允许192.168.1.0访问，使用翻转子网掩码</span><br><span class="line">(config)(config)#interface serial 3&#x2F;0</span><br><span class="line">(config-if)#ip access-group 10 in&#x2F;out 绑定控制列表到物理接口并确定出还是进检查访问列表</span><br><span class="line">(config)#no access-list 10 删除ACL10</span><br><span class="line">ACL的顺序影响访问控制</span><br><span class="line">扩展的ACL  基于源地址、目标地址、协议、端口号进行控制</span><br><span class="line">(config)#access-list 100 permit ip 192.168.1.0 0.0.0.255 any 允许192.168.1.0&#x2F;24访问任何</span><br><span class="line">(config)#access-list 100 permit tcp 192.18.2.0 0.0.0.255 10.0.0.0 0.0.0.255 eq 80 允许192.18.2.0&#x2F;24访问10.0.0.0&#x2F;8上的web服务器</span><br><span class="line">(config)#access-list 100 permit icmp 192.18.2.0 0.0.0.255 any 允许192.18.2.0&#x2F;24ping任何因特网</span><br></pre></td></tr></table></figure></p><p>将acl绑定到telnet接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(config-line)#access-class 10 in&#x2F;out</span><br></pre></td></tr></table></figure></p><h4 id="acl具体应用"><a href="#acl具体应用" class="headerlink" title="acl具体应用"></a>acl具体应用</h4><ol><li><p>入站————决不允许任何源地址是内部主机地址或网络地址的数据包进入一个私有的网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#access-list 150 deny ip 127.0.0.0 0.255.255.255 any log</span><br><span class="line">#access-list 150 deny ip 0.0.0.0 255.255.255.255 any log</span><br><span class="line">#access-list 150 deny ip 10.0.0.0 0.255.255.255 any log</span><br><span class="line">#access-list 150 deny ip 127.16.0.0 0.15.255.255 any log</span><br><span class="line">#access-list 150 deny ip 192.168.0.0 0.0.255.255 any log</span><br><span class="line">#access-list 150 deny ip 224.0.0.0 15.255.255.255 any log</span><br><span class="line">#access-list 150 deny ip host 255.255.255.255 any log</span><br><span class="line">#access-list 150 permit ip any any</span><br></pre></td></tr></table></figure></li><li><p>出站————决不允许任何含有非内部网络有效的ip数据包出站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#access-list 150 permit 192.168.0.0 0.0.255.255 any</span><br><span class="line">#access-list 150 deny ip any any log</span><br></pre></td></tr></table></figure></li><li><p>阻塞外部访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#access-list 109 permit any 192.268.0.0 0.0.255.255 established </span><br><span class="line">#access-list 109 deny ip any any log</span><br></pre></td></tr></table></figure></li><li><p>过滤ICMP消息————禁止ping命令进内网</p><pre><code>#access-list 112 deny icmp any any echo log #access-list 112 deny icmp any any redirect log #access-list 112 deny icmp any any mask-request log#access-list 112 permit icmp any 192.168.0.0 0.0.255.255</code></pre></li></ol>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记四 -- VLAN</title>
      <link href="/2018/08/28/theory/ccna/ccna-4/"/>
      <url>/2018/08/28/theory/ccna/ccna-4/</url>
      <content type="html"><![CDATA[<h4 id="VLAN虚拟局域网"><a href="#VLAN虚拟局域网" class="headerlink" title="VLAN虚拟局域网"></a>VLAN虚拟局域网</h4><p>&emsp;&emsp;VLAN是交换机组网才有的概念，按部门或管理的要求来组网，而不是按照位置组网，更灵活，安全<br>一个VLAN=一个广播域=一个网段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#show vlan 查看VLAN</span><br><span class="line">(config)#vlan 2 创建VLAN2</span><br><span class="line">(config)#interrface range fastEthernet 0&#x2F;13 - 24 选中13-24接口</span><br><span class="line">(config-if-range)#switchport mode access 设置计算机接口</span><br><span class="line">(config-if-range)#switchport access vlan 2 设置为vlan2</span><br></pre></td></tr></table></figure></p><h6 id="单臂路由器实现VLAN间路由"><a href="#单臂路由器实现VLAN间路由" class="headerlink" title="单臂路由器实现VLAN间路由"></a>单臂路由器实现VLAN间路由</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(config)#interface gigabitEthernet 1&#x2F;1 打开Gbit1&#x2F;1接口</span><br><span class="line">(config-if)#switchport mode trunk 设置干道链路</span><br></pre></td></tr></table></figure><h6 id="三层交换机上的配置"><a href="#三层交换机上的配置" class="headerlink" title="三层交换机上的配置"></a>三层交换机上的配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(config)#ip routing 启用路由功能</span><br><span class="line">(config-if)#switchport trunk encapsulation dotlq设置trunk封装格式为dotlq</span><br><span class="line">(config-if)#switchport mode trunk</span><br><span class="line">(config)#Interface vlan 1</span><br><span class="line">(config-if)#ip address ip_address mask </span><br><span class="line">(config-if)# no shutdown </span><br><span class="line">(config)#interface vlan 2</span><br><span class="line">(config-if)#ip address ip_address mask </span><br><span class="line">(config-if)# no shutdown</span><br></pre></td></tr></table></figure><h4 id="VTP协议"><a href="#VTP协议" class="headerlink" title="VTP协议"></a>VTP协议</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(condig)#vtp domain name   设置vtp域名</span><br><span class="line">(condig)#vtp password passwd  设置vtp密码</span><br><span class="line">(condig)#vtp mode client&#x2F;server  设置客户端或者服务端，服务端可以更改整个域的VLAN的添加删除，但是不能更改其他的交换机的端口是否属于该vlan</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记三 -- 路由和交换</title>
      <link href="/2018/08/28/theory/ccna/ccna-3/"/>
      <url>/2018/08/28/theory/ccna/ccna-3/</url>
      <content type="html"><![CDATA[<h4 id="网络畅通的条件"><a href="#网络畅通的条件" class="headerlink" title="网络畅通的条件"></a>网络畅通的条件</h4><p>数据包能去能回<br>沿途的路由器必须知道到目标地址如何转发<br>沿途的路由器必须知道回来的数据包如何转发  </p><p>路由器直连的网络 不用告诉路由器如何转发<br>路由器没有直连的网络 管理员需要告诉路由器到目标网络如何转发 即添加静态路由<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(config)#ip route 192.168.1.0 255.255.255.0 192.268.2.0  设置数据包 到192.168.1.0&#x2F;24的数据包下一跳给192.168.2.0</span><br><span class="line">(config)#tracroute ip_address 跟踪数据包路径</span><br><span class="line">#show ip route 查看路由表</span><br><span class="line">(config)#no ip route 192.168.1.0 255.255.255.0 删除路由表</span><br><span class="line">windows上添加路由表 route add ip_adress mask ip_web</span><br><span class="line">windows查看路由表 netstat-r    route print</span><br></pre></td></tr></table></figure></p><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><p>优先级 直连0 静态路由1 eigp90  rip120<br>RIP协议 跳数判断，周期性（30s）更新路由表，最大跳数16跳<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(config)#router rip  启用rip协议  </span><br><span class="line">(config-router)#network 192.168.1.0 该网段参与rip协议  </span><br><span class="line">#debug ip rip 显示rip协议信息</span><br><span class="line">#undebug all  关闭rip协议信息显示</span><br><span class="line">#show ip protocols 显示应用协议</span><br><span class="line">EIGP协议 优先级高于RIP</span><br><span class="line">(config)#router eigp 10  启用eigp协议,相同编号路由器才可以交换路由信息</span><br><span class="line">(config-router)#network 192.168.1.0 该网段参与eigp协议</span><br></pre></td></tr></table></figure></p><h4 id="交换"><a href="#交换" class="headerlink" title="交换"></a>交换</h4><p>集线器 不安全、冲突域、带宽共享<br>交换机 基于目标MAC地址转发、学习MAC地址、端口独享带宽、没有冲突、广播会出问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#show mac-address-table 显示MAC地址表</span><br><span class="line">  #config terminal </span><br><span class="line">  (config)#interrface fastEthernet 0&#x2F;4</span><br><span class="line">  (config-if)#switchport mode access 接机算机的接口</span><br><span class="line">  (config-if)#switchport port-security 启用安全</span><br><span class="line">  (config-if)#switchport port-security violation shutdown 违反安全规则down掉</span><br><span class="line">  (config-if)#switchport port-security maxium 2 限制连接数量</span><br><span class="line">  (config)#interrface range fastEthernet 0&#x2F;1 - 24 选中1-24个口</span><br><span class="line">  (config-if-range)#switchport port-security mac-adddress sticky MAC地址终止学习</span><br></pre></td></tr></table></figure></p><h4 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a>生成树协议</h4><p> 为了高可用局域网交换机连接有了环路<br>为了阻断网络中的广播有了生成树协议<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#show spanning-tree 查看交换机端口以及生成树状态</span><br><span class="line">(config)#spanning-tree vlan 1 priority 4096更改路由器优先级为4096，值越小优先级越高</span><br><span class="line">(config)#no spanning-tree vlan 1 关闭生成树协议</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记二 -- TCP/IP协议</title>
      <link href="/2018/08/27/theory/ccna/ccna-2/"/>
      <url>/2018/08/27/theory/ccna/ccna-2/</url>
      <content type="html"><![CDATA[<h4 id="DoD模型"><a href="#DoD模型" class="headerlink" title="DoD模型"></a>DoD模型</h4><p>应用层 Telent、FTP、SMTP、DNS、HTTP以及其他应用协议<br>传输层 TCP、UDP<br>网络层 IPv4、ARP、RARP、ICMP<br>网络接口 各种通信网络接口（以太网等物理网络）</p><h4 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a>传输层协议</h4><p>可靠传输 TCP 分段传输 建立会话（消耗系统资源） 丢失重传<br>不可靠传输 UDP 一个数据包就能表达完整 屏幕广播</p><h4 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h4><h5 id="默认端口"><a href="#默认端口" class="headerlink" title="默认端口"></a>默认端口</h5><p>http=TCP+80<br>ftp=TCP+21（接受命令、验证身份等） 20（传输数据）<br>https=TCP+443<br>SMTP=TCP+25（发邮件）<br>POP3=TCP+110（收邮件）<br>RDP=TCP+3389(远程桌面)<br>DNS=UDP+53（DNS解析）<br>IP地址访问Windows共享文件夹=TCP+445<br>计算机名访问windows共享文件夹=TCP+139<br>SQL=TCP+1433（访问数据库）<br>telnet=TCP+23</p><h4 id="服务和端口的关系"><a href="#服务和端口的关系" class="headerlink" title="服务和端口的关系"></a>服务和端口的关系</h4><p>服务侦听端口<br>客户端请求服务 使用目标端口来区分（服务器根据数据包的目标端口来区分客户端）<br>服务停止 侦听的端口关闭<br>查看侦听的端口 netstat -anb|find “content”<br>检测端口  telnet ip 端口</p><h4 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h4><p>win2003service tcp/ip筛选不影响出去的流量<br>wf.msc windows高级防火墙</p><h4 id="网络层协议"><a href="#网络层协议" class="headerlink" title="网络层协议"></a>网络层协议</h4><p>IP协议 选择最佳路径的协议（RIP OSPF EIGRP BGP）<br>ICMP协议 测试网络是否畅通<br>ping 估计带宽 查看网络是否畅通 断定远程系统 每过一个路由器TTL-1<br>TTL 128 windows系统<br>TTL 64  linux系统<br>pathping 跟踪路径 计算丢包情况<br>IGMP协议 组播<br>点到点 广播 多播（组播）<br>ARP协议 将计算机的IP地址解析成MAC地址<br>数据跨网段通讯和同一网段通信过程<br>MAC地址决定了下一跳给那个设备<br>IP地址决定最终计算机</p><h4 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h4><p>32位二进制组成</p><h5 id="ip地址分类"><a href="#ip地址分类" class="headerlink" title="ip地址分类"></a>ip地址分类</h5><p>  x:network id  y:host id</p><div class="table-container"><table><thead><tr><th>类别</th><th>功能</th><th>开头</th><th>个头</th><th>缺省子网掩码</th></tr></thead><tbody><tr><td>A</td><td>xyyy</td><td>1-127</td><td>256^3-2</td><td>255.0.0.0</td></tr><tr><td>B</td><td>xxyy</td><td>128-191</td><td>256^2-2</td><td>255.255.0.0</td></tr><tr><td>C</td><td>xxxy</td><td>192-223</td><td>256-2</td><td>255.255.255.0</td></tr><tr><td>D</td><td>组播</td><td>224-239</td></tr><tr><td>E</td><td>研究</td><td>240-255</td></tr></tbody></table></div><h5 id="保留的私网地址"><a href="#保留的私网地址" class="headerlink" title="保留的私网地址"></a>保留的私网地址</h5><p>A 10.0.0.0<br>B 172.16.0.0-172.31.0.0<br>C 192.168.0.0-192.168.255.0</p><h5 id="本地环回地址"><a href="#本地环回地址" class="headerlink" title="本地环回地址"></a>本地环回地址</h5><p>127.0.0.1  ping通过表示TCP/IP协议安装正常<br>169.254.0.0 DHCP获取网络地址未果的时候得到的地址</p>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CCNA学习笔记一 -- 计算机网络详解</title>
      <link href="/2018/08/27/theory/ccna/ccna-1/"/>
      <url>/2018/08/27/theory/ccna/ccna-1/</url>
      <content type="html"><![CDATA[<h4 id="局域网与广域网"><a href="#局域网与广域网" class="headerlink" title="局域网与广域网"></a>局域网与广域网</h4><ol><li>局域网 自己花钱买设备自己搭配服务器，带宽固定</li><li>广域网 花钱租带宽</li></ol><h4 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h4><pre><code>↑7 应用层      能产生网络流量的应用程序↑6 表示层      表示数据，处理数据 加密 压缩 等↑5 会话层      msconfig netstat -nb (显示程序)↑4 传输层      可靠传输 建立会话 流量控制 差错检查 不可靠传输 不建立会话 节省服务器资源↑3 网络层      选择最佳路径↑2 数据链路层  网络设备 如何封装数据帧 设备地址↑1 物理层      规定了电压标准、接口标准</code></pre><p>程序员的工作层  应用层、表示层、会话层<br>网络工程师的工作层  传输层、网络层、数据链路层、物理层<br>网络分层的好处：每一层互不干扰，没有影响；有助于设备标准化</p><h4 id="网络排错和OSI参考模型"><a href="#网络排错和OSI参考模型" class="headerlink" title="网络排错和OSI参考模型"></a>网络排错和OSI参考模型</h4><div class="table-container"><table><thead><tr><th>网络层</th><th>可能出现的错误</th></tr></thead><tbody><tr><td>物理层</td><td>连接问题</td></tr><tr><td>数据链路层</td><td>MAC地址冲突 ADSL拨号密码错误</td></tr><tr><td>网络层</td><td>计算机网关设置错误、路由器路由表错误</td></tr><tr><td>应用层</td><td>IE代理设置错误</td></tr></tbody></table></div><h4 id="网络安全和OSI参考模型"><a href="#网络安全和OSI参考模型" class="headerlink" title="网络安全和OSI参考模型"></a>网络安全和OSI参考模型</h4><div class="table-container"><table><thead><tr><th>网络层</th><th>安全问题</th></tr></thead><tbody><tr><td>物理层安全</td><td></td></tr><tr><td>数据链路层安全</td><td>MAC地址认证 ADSL拨号上网账号密码 划分VLAN</td></tr><tr><td>网络层安全</td><td>路由器ACL</td></tr><tr><td>传输层安全</td><td>计算机端口安全</td></tr><tr><td>应用层安全</td><td>网站安全、操作系统安全</td></tr></tbody></table></div><h4 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h4><ol><li>网线<br>双绞线  4对 8根 100米 10M 100M（实际用了4根） 1000M （实际用了8根）<br>线序 直通线（都按B连） 同类设备用交叉线（一个A 一个B）<br>不同类设备用直通线<br><font color="#12a112">水晶头接法</font><ul><li>RJ45 A 绿白 绿 橙白 蓝 蓝白 橙 棕白 棕</li><li>RJ45 B 橙白 橙 绿白 蓝 蓝白 绿 棕白 棕</li></ul></li><li>网卡 MAC地址（物理地址）不能更改<br>MAC地址由48位二进制组成，前24位代表厂家 后边为厂家自己所设置的序号<br>查看MAC地址的指令（dos下） ipconfig /all</li><li>集线器 HUB 不安全 带宽共享 效率低下 半双工</li><li>网桥 隔绝冲突域</li><li>交换机 基于MAC地址转发数据、带宽独享、全双工、安全、学习MAC地址</li><li>路由器 负责在不同网段转发数据 一般有广域网接口 隔绝广播（MAC地址全1）</li></ol><h4 id="网络设备和OSI参考模型"><a href="#网络设备和OSI参考模型" class="headerlink" title="网络设备和OSI参考模型"></a>网络设备和OSI参考模型</h4><p>集线器 物理层设备<br>交换机 基于MAC地址转发 数据链路层设备<br>路由器 基于IP地址转发 三层设备  </p><h4 id="分层考虑问题"><a href="#分层考虑问题" class="headerlink" title="分层考虑问题"></a>分层考虑问题</h4><p>网络排错方法 替换法</p>]]></content>
      
      <categories>
          
          <category> net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ccna </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Regular Expression 正则表达式</title>
      <link href="/2018/08/25/theory/regex/"/>
      <url>/2018/08/25/theory/regex/</url>
      <content type="html"><![CDATA[<p>Regular Expression（正则表达式） 简称Regex<br>在Javascript中<br>    g(global)表示全局  i表示不区分大小写<br>    .可以匹配任何一个单位的字符<br>    []用于定义字符集合 ^取非</p><h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h4><div class="table-container"><table><thead><tr><th>元字符</th><th>解释说明</th></tr></thead><tbody><tr><td>[\b]</td><td>Backspace键（退格)</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\f</td><td>换页符</td></tr><tr><td>\r</td><td>回车符</td></tr><tr><td>\t</td><td>制表符（tab）</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\r\n</td><td>回车+换行 许多操作系统以此为行结束，Unix与Linux以\n作为行结束</td></tr><tr><td>\d</td><td>任何一个数字字符    [0-9]</td></tr><tr><td>\D</td><td>任何一个非数字字符     <sup><a href="#fn_0-9" id="reffn_0-9">0-9</a></sup></td></tr><tr><td>\w</td><td>[a-zA-Z0-9_]</td></tr><tr><td>\W</td><td><sup><a href="#fn_a-zA-Z0-9_" id="reffn_a-zA-Z0-9_">a-zA-Z0-9_</a></sup></td></tr><tr><td>\s</td><td>[\f\n\r\t\v]      任一一个空白字符</td></tr><tr><td>\S</td><td><sup><a href="#fn_\f\n\r\t\v" id="reffn_\f\n\r\t\v">\f\n\r\t\v</a></sup>   任一一个非空白字符</td></tr><tr><td>\xXX</td><td>XX:表示十六进制数</td></tr><tr><td>\0XX</td><td>XX:表示八进制数</td></tr></tbody></table></div><h4 id="POSIX字符类-javascript不支持"><a href="#POSIX字符类-javascript不支持" class="headerlink" title="POSIX字符类   javascript不支持"></a>POSIX字符类   javascript不支持</h4><div class="table-container"><table><thead><tr><th>POSIX字符类</th><th>解释说明</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>[\w^_]</td></tr><tr><td>[:upper:]</td><td>[A-Z]</td></tr><tr><td>[:alpha:]</td><td>[a-zA-Z]</td></tr><tr><td>[:blank:]</td><td>[ \t] 注意：这里包含空格</td></tr><tr><td>[:xdigit:]</td><td>任何一个十六进制数     [a-fA-F0-9]</td></tr><tr><td>[:cntrl:]</td><td>ASCII控制字符   0-31加上127</td></tr><tr><td>[:digit:]</td><td>\d</td></tr><tr><td>[:graph:]</td><td>[:print:]去除空格</td></tr><tr><td>[:lower:]</td><td>[a-z]</td></tr><tr><td>[:print:]</td><td>任何一个可打印字符</td></tr><tr><td>[:punct:]</td><td>既不属于[:alnum:]也不属于[:cntrl:]的字符</td></tr><tr><td>[:space:]</td><td>[\f\r\n\t\v ]  注意：这里包含空格</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>符号</th><th>解释说明</th></tr></thead><tbody><tr><td>+</td><td>一次或多次重复</td></tr><tr><td>+?</td><td>懒惰型</td></tr><tr><td>*</td><td>零次或多次重复</td></tr><tr><td>*?</td><td>懒惰型</td></tr><tr><td>?</td><td>零次或一次出现</td></tr><tr><td>\{n\}</td><td>重复n次</td></tr><tr><td>\{m,n\}</td><td>至少m次，至多n次</td></tr><tr><td>\{m,\}</td><td>至少出现m次</td></tr><tr><td>\{m,\}?</td><td>懒惰型</td></tr><tr><td>\b</td><td>一个单词的开头或结尾  b：boundary</td></tr><tr><td>\B</td><td>不匹配一个单词边界</td></tr><tr><td>^</td><td>字符串开头    $ 字符串结尾</td></tr><tr><td>(?m)</td><td>置于开头，用于开启分行匹配模式  multline mode   注意：有的语言不支持</td></tr><tr><td>(xx)</td><td>子表达式，视为独立元素</td></tr></tbody></table></div><h4 id="回溯引用-backreference"><a href="#回溯引用-backreference" class="headerlink" title="回溯引用 backreference"></a>回溯引用 backreference</h4><p>替换模式下Javascript使用$代替\</p><div class="table-container"><table><thead><tr><th>符号</th><th>解释说明</th></tr></thead><tbody><tr><td>\1,\2……\n</td><td>第1个表达式，第2个表达式…….第n个表达式</td></tr><tr><td>\0</td><td>代表整个正则表达式</td></tr><tr><td>\E</td><td>结束 \L或\U转换</td></tr><tr><td>\l</td><td>把下一个字符转换为小写</td></tr><tr><td>\L</td><td>把\L到\E之间全部转换为小写</td></tr><tr><td>\u</td><td>把下一个字符转换为大写</td></tr><tr><td>\U</td><td>把\U到\E之间全部转换为大写</td></tr></tbody></table></div><p>注意：<br>1、  Java、Perl、PHP、.NET 支持向后查找<br>2、  Javascript、ColdFusion 不支持向后查找<br>向前查找：(?=x)   匹配但不消费x，即结果不包括x<br> 例 (?=:)   原字符串 https:     匹配结果 http<br>向后查找：(?&lt;=x) 匹配但不消费x，即结果不包括x<br>    例 (?&lt;=$)   原字符串 $400     匹配结果 400<br>注意：向前查找可以任意长度（可以使用.+）  向后查找的长度是固定的<br>    (?=)     正向前查找          (?&lt;=)    正向后查找<br>    (?!)       负向前查找          (?&lt;!)         负向后查找  </p><p>Mysql JAVA1.4<font color="red">不支持</font>条件处理<br>(?(backreference)true-regex)<br>(?(backreference)true-regex|false-regex)<br>Backreference满足时，匹配true-regex 否则匹配false-regex  </p>]]></content>
      
      <categories>
          
          <category> regular </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
            <tag> regex </tag>
            
            <tag> tools </tag>
            
            <tag> regular </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git命令</title>
      <link href="/2018/08/25/theory/design/using/Git/"/>
      <url>/2018/08/25/theory/design/using/Git/</url>
      <content type="html"><![CDATA[<h4 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h4><p>git help \<command> # 显示command的help<br>git show # 显示某次提交的内容 git show $id<br>git co — \<file> # 抛弃工作区修改<br>git co . # 抛弃工作区修改<br>git add \<file> # 将工作文件修改提交到本地暂存区<br>git add . # 将所有修改过的工作文件提交暂存区<br>git rm \<file> # 从版本库中删除文件<br>git rm \<file> —cached # 从版本库中删除文件，但不删除文件<br>git reset \<file> # 从暂存区恢复到工作文件<br>git reset — . # 从暂存区恢复到工作文件<br>git reset —hard # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<br>git ci \<file> git ci . git ci -a # 将git add, git rm和git ci等操作都合并在一起做<br>git ci -am “some comments”<br>git ci —amend # 修改最后一次提交记录<br>git revert \&lt;$id&gt; # 恢复某次提交的状态，恢复动作本身也创建次提交对象<br>git revert HEAD # 恢复最后一次提交的状态</file></file></file></file></file></file></p><h4 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h4><p>git diff \<file> # 比较当前文件和暂存区文件差异 git diff<br>git diff \<id1>\<id1>\<id2> # 比较两次提交之间的差异<br>git diff \<branch1>..\<branch2> # 在两个分支之间比较<br>git diff —staged # 比较暂存区和版本库差异<br>git diff —cached # 比较暂存区和版本库差异<br>git diff —stat # 仅仅比较统计信息  </branch2></branch1></id2></id1></id1></file></p><h4 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h4><p>git log git log \<file> # 查看该文件每次提交记录<br>git log -p \<file> # 查看每次详细修改内容的diff<br>git log -p -2 # 查看最近两次详细修改内容的diff<br>git log —stat #查看提交统计信息<br>tig    Mac上可以使用tig代替diff和log，brew install tig  </file></file></p><h4 id="Git-本地分支管理-查看、切换、创建和删除分支"><a href="#Git-本地分支管理-查看、切换、创建和删除分支" class="headerlink" title="Git 本地分支管理    查看、切换、创建和删除分支"></a>Git 本地分支管理    查看、切换、创建和删除分支</h4><p>git br -r # 查看远程分支<br>git br \<new_branch> # 创建新的分支<br>git br -v # 查看各个分支最后提交信息<br>git br —merged # 查看已经被合并到当前分支的分支<br>git br —no-merged # 查看尚未被合并到当前分支的分支<br>git co \<branch> # 切换到某个分支<br>git co -b \<new_branch> # 创建新的分支，并且切换过去<br>git co -b \<new_branch> \<branch> # 基于branch创建新的new_branch<br>git co $id # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<br>git co $id -b \<new_branch> # 把某次历史提交记录checkout出来，创建成一个分支<br>git br -d \<branch> # 删除某个分支<br>git br -D \<branch> # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)  </branch></branch></new_branch></branch></new_branch></new_branch></branch></new_branch></p><h4 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h4><p>git merge \<branch> # 将branch分支合并到当前分支<br>git merge origin/master —no-ff # 不要Fast-Foward合并，这样可以生成merge提交<br>git rebase master \<branch> # 将master rebase到branch，相当于： git co \<branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge \<branch></branch></branch></branch></branch></p><h4 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h4><p>git diff &gt; ../sync.patch # 生成补丁<br>git apply ../sync.patch # 打补丁<br>git apply —check ../sync.patch #测试补丁能否成功  </p><h4 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h4><p>git stash # 暂存<br>git stash list # 列所有stash<br>git stash apply # 恢复暂存的内容<br>git stash drop # 删除暂存区  </p><h4 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h4><p>git pull # 抓取远程仓库所有分支更新并合并到本地<br>git pull —no-ff # 抓取远程仓库所有分支更新并合并到本地，不要快进合并<br>git fetch origin # 抓取远程仓库更新<br>git merge origin/master # 将远程主分支合并到本地当前分支<br>git co —track origin/branch # 跟踪某个远程分支创建相应的本地分支<br>git co -b \<local_branch> origin/\<remote_branch> # 基于远程分支创建本地分支，功能同上<br>git push # push所有分支<br>git push origin master # 将本地主分支推到远程主分支<br>git push -u origin master # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)<br>git push origin \<local_branch> # 创建远程分支， origin是远程仓库名<br>git push origin \<local_branch>:\<remote_branch> # 创建远程分支<br>git push origin :\<remote_branch> #先删除本地分支(git br -d \<branch>)，然后再push删除远程分支  </branch></remote_branch></remote_branch></local_branch></local_branch></remote_branch></local_branch></p><h4 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h4><p>GitHub<br>git remote -v # 查看远程服务器地址和仓库名称<br>git remote show origin # 查看远程服务器仓库状态<br>git remote add origin git@github:robbin/robbin_site.git # 添加远程仓库地址<br>git remote set-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址) git remote rm \<repository> # 删除远程仓库  </repository></p><h4 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h4><p>git clone —bare robbin_site robbin_site.git # 用带版本的项目创建纯版本仓库<br>scp -r my_project.git git@ git.csdn.net:~ # 将纯仓库上传到服务器上<br>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git —bare init # 在服务器创建纯仓库<br>git remote add origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址<br>git push -u origin master # 客户端首次提交<br>git push -u origin develop # 首次将本地develop分支提交到远程develop分支，并且track<br>git remote set-head origin master # 设置远程仓库的HEAD指向master分支 ，也可以命令设置跟踪远程库和本地库<br>git branch —set-upstream master origin/master<br>git branch —set-upstream develop origin/develop  </p><h4 id="reflog"><a href="#reflog" class="headerlink" title="reflog"></a>reflog</h4><p>git reflog是对reflog进行管理的命令,reflog是git用来记录引用变化的一种机制,比如记录分支的变化或者是HEAD引用的变化.<br>当git reflog不指定引用的时候,默认列出HEAD的reflog.<br>HEAD@{0}代表HEAD当前的值,HEAD@{3}代表HEAD在3次变化之前的值.<br>git会将变化记录到HEAD对应的reflog文件中,其路径为.git/logs/HEAD, 分支的reflog文件都放在.git/logs/refs目录下的子目录中.  </p><h4 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h4><p>^代表父提交,当一个提交有多个父提交时,可以通过在^后面跟上一个数字,表示第几个父提交: ^相当于^1.<br>~\<n>相当于连续的\<n>个^.  </n></n></p>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx的使用（一）-- 简单的安装使用</title>
      <link href="/2018/08/25/theory/design/using/middleware/nginx-1/"/>
      <url>/2018/08/25/theory/design/using/middleware/nginx-1/</url>
      <content type="html"><![CDATA[<h2 id="一、nginx简介"><a href="#一、nginx简介" class="headerlink" title="一、nginx简介"></a>一、nginx简介</h2><h4 id="1、nginx是什么"><a href="#1、nginx是什么" class="headerlink" title="1、nginx是什么"></a>1、nginx是什么</h4><p>Nginx (engine x) 是一个高性能的HTTP和反向代理服务，也是一个IMAP/POP3/SMTP服务。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好。</p><h4 id="2、nginx可以用来做什么（不加载第三方模块）"><a href="#2、nginx可以用来做什么（不加载第三方模块）" class="headerlink" title="2、nginx可以用来做什么（不加载第三方模块）"></a>2、nginx可以用来做什么（不加载第三方模块）</h4><ol><li>反向代理</li><li>负载均衡</li><li>HTTP服务器（包含动静分离）</li><li>正向代理</li><li>缓存</li></ol><h2 id="二、nginx安装以及简单的配置"><a href="#二、nginx安装以及简单的配置" class="headerlink" title="二、nginx安装以及简单的配置"></a>二、nginx安装以及简单的配置</h2><h4 id="1、安装nginx（环境-centos7）"><a href="#1、安装nginx（环境-centos7）" class="headerlink" title="1、安装nginx（环境 centos7）"></a>1、安装nginx（环境 centos7）</h4><p>采取最简单的方法，yum install nginx -y</p><h4 id="2、配置nginx"><a href="#2、配置nginx" class="headerlink" title="2、配置nginx"></a>2、配置nginx</h4><p>① 修改user为root（你用来启动nginx的账户）<br>② 添加转发服务器<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">upstream web_server&#123; # 名字随便起</span><br><span class="line">   server 127.0.0.1:8080  max_fails=1  fail_timeout=10s;  #Tomcat服务器1 ip</span><br><span class="line">   server 127.0.0.2:8080  max_fails=1  fail_timeout=10s;  #Tomcat服务器2 ip</span><br><span class="line">   #注意服务器的ip以及端口不要重复</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80 default_server;</span><br><span class="line">    listen       [::]:80 default_server;</span><br><span class="line">    server_name  _;</span><br><span class="line">    root         /usr/share/nginx/html;</span><br><span class="line">    # Load configuration <span class="keyword">files</span> <span class="keyword">for</span> the default server block.</span><br><span class="line">    include /etc/nginx/default.d/*.conf;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass  http://web_server;   #和上边定义的upstream 对应起来</span><br><span class="line">        proxy_connect_timeout 10;</span><br><span class="line">        proxy_read_timeout  10;</span><br><span class="line">        proxy_send_timeout  10;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">        location = /<span class="number">40</span><span class="keyword">x</span>.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /<span class="number">50</span><span class="keyword">x</span>.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="3、nginx的启动、停止、重启"><a href="#3、nginx的启动、停止、重启" class="headerlink" title="3、nginx的启动、停止、重启"></a>3、nginx的启动、停止、重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">systemctl start nginx <span class="comment">#启动nginx</span></span><br><span class="line">systemctl stop nginx <span class="comment">#停止nginx</span></span><br><span class="line">systemctl restart nginx <span class="comment">#重新启动nginx</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nginx <span class="comment">#开机启动nginx</span></span><br><span class="line"></span><br><span class="line">nginx <span class="comment">#启动nginx</span></span><br><span class="line">nginx -s stop  <span class="comment">#停止nginx</span></span><br><span class="line">nginx -s reload <span class="comment">#重新加载配置文件</span></span><br><span class="line">nginx -s restart <span class="comment">#重新启动nginx</span></span><br></pre></td></tr></table></figure><h4 id="4、nginx踩过的一些坑"><a href="#4、nginx踩过的一些坑" class="headerlink" title="4、nginx踩过的一些坑"></a>4、nginx踩过的一些坑</h4><p>selinux引起的权限访问受限问题，cat /var/log/Audit/Audit.log 发现有nginx访问阻止记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>=AVC msg=audit(1416406823.013:3137): avc:  denied  &#123; search &#125; <span class="keyword">for</span>  pid=15488 comm=<span class="string">"nginx"</span> name=<span class="string">"www"</span> dev=<span class="string">"dm-3"</span> ino=146 scontext=system_u:system_r:httpd_t:s0 tcontext=unconfined_u:object_r:user_home_dir_t:s0 tclass=dir</span><br></pre></td></tr></table></figure></p><p>解决方案1、（<font color="red">建议采用</font>）<br>设置selinux允许nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install policycoreutils-python</span><br><span class="line">cat /var/<span class="built_in">log</span>/audit/audit.log | grep nginx | grep denied | audit2allow -M mynginx</span><br><span class="line">semodule -i mynginx.pp</span><br></pre></td></tr></table></figure></p><p>解决方案2.1、<br>临时关闭selinux<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0  <span class="comment">#重启后失效</span></span><br></pre></td></tr></table></figure></p><p>解决方案2.2、<br>永久关闭selinux</p><p>打开 selinux 配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br></pre></td></tr></table></figure></p><p>修改 selinux 配置文件<br>将SELINUX=enforcing改为SELINUX=disabled，保存后退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=enforcing</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of three two values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected.</span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure></p><p>重启电脑（<font color="red">一定重启</font>，否则无效）</p>]]></content>
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
